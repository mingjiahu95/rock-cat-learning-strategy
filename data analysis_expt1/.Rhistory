# ) %>%
ungroup()
View(posterior_samples_quartile_contrast)
posterior_samples_quartile_contrast <- fit$data %>%
bind_cols(posterior_draw_df) %>%
pivot_longer(cols = starts_with("sample"), names_prefix = "sample",
names_to = "sample", values_to = "N_corr_pred") %>%
mutate(sample = as.integer(sample)) %>%
group_by(cond,subj,sample) %>%
summarize(PrCorr_obs = sum(N_corr)/sum(N_trials),
PrCorr_pred = sum(N_corr_pred)/sum(N_trials))%>%
group_by(cond,sample) %>%
reframe(
quartile = c("lq", "m", "uq"),
Pr_corr_pred = quantile(PrCorr_pred, probs = c(0.25, 0.5, 0.75)),
Pr_corr_obs = quantile(PrCorr_obs, probs = c(0.25, 0.5, 0.75))
)  %>%
group_by(sample, quartile) %>%
summarize(Pr_corr_pred_contrast = Pr_corr_pred[cond == "CE"] - Pr_corr_pred[cond == "GEE"],
Pr_corr_obs_contrast = Pr_corr_obs[cond == "CE"] - Pr_corr_obs[cond == "GEE"]) %>%
group_by(quartile) %>%
reframe(
bound_type = c("lower","median","upper"),
Pr_corr_pred_cutoff =  quantile(Pr_corr_pred_contrast, c(0.025, 0.5, 0.975))
) %>%
ungroup()
load(file = "brms_fit_objects.Rdata")
fit = fit_object$fit_blockset_3_before
posterior_kappa_df <- as_draws_df(fit, variable = "b_kappa_condCE") %>%
rename(sample = .draw) %>%
rename_with(~paste0(gsub("b_kappa_cond","",.x), "vsGEE"),
contains("kappa_condCE")) %>%
select(!c(.chain, .iteration)) %>%
pivot_longer(cols = CEvsGEE, names_to = "contrast", values_to = "kappa")
posterior_draw_df <- t(posterior_predict(fit)) %>%
as_tibble() %>%
setNames(paste0("sample", 1:ncol(.)))
posterior_samples_quartile_contrast <- fit$data %>%
bind_cols(posterior_draw_df) %>%
pivot_longer(cols = starts_with("sample"), names_prefix = "sample",
names_to = "sample", values_to = "N_corr_pred") %>%
mutate(sample = as.integer(sample)) %>%
group_by(cond,subj,sample) %>%
summarize(PrCorr_obs = sum(N_corr)/sum(N_trials),
PrCorr_pred = sum(N_corr_pred)/sum(N_trials))%>%
group_by(cond,sample) %>%
reframe(
quartile = c("lq", "m", "uq"),
Pr_corr_pred = quantile(PrCorr_pred, probs = c(0.25, 0.5, 0.75)),
Pr_corr_obs = quantile(PrCorr_obs, probs = c(0.25, 0.5, 0.75))
)  %>%
group_by(sample, quartile) %>%
summarize(Pr_corr_pred_contrast = Pr_corr_pred[cond == "CE"] - Pr_corr_pred[cond == "GEE"],
Pr_corr_obs_contrast = Pr_corr_obs[cond == "CE"] - Pr_corr_obs[cond == "GEE"]) %>%
group_by(quartile) %>%
reframe(
bound_type = c("lower","median","upper"),
Pr_corr_pred_cutoff =  quantile(Pr_corr_pred_contrast, c(0.025, 0.5, 0.975))
) %>%
ungroup()
setwd("C:/Users/super/Desktop/lab/LearnStrategy/data analysis_expt2/bayesian statistical tests")
graphics.off()
rm(list=ls())
set.seed(47405)
# Libraries
# library(pkgbuild)
library(tidyverse)
library(brms)
library(gridExtra)
library(ggpubr)
library(ggridges)
library(parallel)
source("../../utils/beta-binom.R")
# Load experimental data
epsilon <- 1e-6
df <- readRDS("../prolific data.RDS") %>%
filter(phase == "test") %>%
mutate(subj = factor(subj),
cond = recode_factor(cond, "random" = "GEE" , "student_chosen" = "CE"),
block_set = case_match(block,
1:3 ~ 1,4:6 ~ 2,7:9 ~ 3)
) %>%
group_by(cond, subj, block_set, cat) %>%
summarize(N_trials = n(),
N_corr = sum(corr)
) %>%
ungroup() %>%
mutate(block_set_fct = factor(block_set, labels = c("1-3", "4-6", "7-9")))
# load brms fit objects
load(file = "brms_fit_objects.Rdata")
fit = fit_object[[3]]
expose_functions(fit_object[[1]], vectorize = TRUE)
posterior_draw_df <- t(posterior_predict(fit)) %>% #posterior_epred
as_tibble() %>%
setNames(paste0("sample", 1:ncol(.)))
posterior_samples_quartile_contrast <- fit$data %>%
bind_cols(posterior_draw_df) %>%
pivot_longer(cols = starts_with("sample"), names_prefix = "sample",
names_to = "sample", values_to = "N_corr_pred") %>%
mutate(sample = as.integer(sample)) %>%
group_by(cond,subj,sample) %>%
summarize(PrCorr_obs = sum(N_corr)/sum(N_trials),
PrCorr_pred = sum(N_corr_pred)/sum(N_trials))%>%
group_by(cond,sample) %>%
reframe(
quartile = c("lq", "m", "uq"),
Pr_corr_pred = quantile(PrCorr_pred, probs = c(0.25, 0.5, 0.75)),
Pr_corr_obs = quantile(PrCorr_obs, probs = c(0.25, 0.5, 0.75))
)  %>%
group_by(sample, quartile) %>%
summarize(Pr_corr_pred_CEvsGEE = Pr_corr_pred[cond == "CE"] - Pr_corr_pred[cond == "GEE"],
Pr_corr_obs_CEvsGEE = Pr_corr_obs[cond == "CE"] - Pr_corr_obs[cond == "GEE"],
Pr_corr_pred_GEAvsGEE = Pr_corr_pred[cond == "GEA"] - Pr_corr_pred[cond == "GEE"],
Pr_corr_obs_GEAvsGEE = Pr_corr_obs[cond == "GEA"] - Pr_corr_obs[cond == "GEE"],
Pr_corr_pred_CEAvsCE = Pr_corr_pred[cond == "CEA"] - Pr_corr_pred[cond == "CE"],
Pr_corr_obs_CEAvsCE = Pr_corr_obs[cond == "CEA"] - Pr_corr_obs[cond == "CE"]) %>%
ungroup() %>%
pivot_longer(cols = starts_with("Pr_corr"),
names_to = c(".value", "contrast"),
names_pattern = "(Pr_corr_pred|Pr_corr_obs)_(.*)")
group_by(quartile) %>%
reframe(
bound_type = c("lower","median","upper"),
Pr_corr_pred_cutoff =  quantile(Pr_corr_pred_contrast, c(0.025, 0.5, 0.975))
) %>%
ungroup()
posterior_samples_quartile_contrast <- fit$data %>%
bind_cols(posterior_draw_df) %>%
pivot_longer(cols = starts_with("sample"), names_prefix = "sample",
names_to = "sample", values_to = "N_corr_pred") %>%
mutate(sample = as.integer(sample)) %>%
group_by(cond,subj,sample) %>%
summarize(PrCorr_obs = sum(N_corr)/sum(N_trials),
PrCorr_pred = sum(N_corr_pred)/sum(N_trials))%>%
group_by(cond,sample) %>%
reframe(
quartile = c("lq", "m", "uq"),
Pr_corr_pred = quantile(PrCorr_pred, probs = c(0.25, 0.5, 0.75)),
Pr_corr_obs = quantile(PrCorr_obs, probs = c(0.25, 0.5, 0.75))
)  %>%
group_by(sample, quartile) %>%
summarize(Pr_corr_pred_CEvsGEE = Pr_corr_pred[cond == "CE"] - Pr_corr_pred[cond == "GEE"],
Pr_corr_obs_CEvsGEE = Pr_corr_obs[cond == "CE"] - Pr_corr_obs[cond == "GEE"],
Pr_corr_pred_GEAvsGEE = Pr_corr_pred[cond == "GEA"] - Pr_corr_pred[cond == "GEE"],
Pr_corr_obs_GEAvsGEE = Pr_corr_obs[cond == "GEA"] - Pr_corr_obs[cond == "GEE"],
Pr_corr_pred_CEAvsCE = Pr_corr_pred[cond == "CEA"] - Pr_corr_pred[cond == "CE"],
Pr_corr_obs_CEAvsCE = Pr_corr_obs[cond == "CEA"] - Pr_corr_obs[cond == "CE"]) %>%
ungroup() %>%
pivot_longer(cols = starts_with("Pr_corr"),
names_to = c(".value", "contrast"),
names_pattern = "(Pr_corr_pred|Pr_corr_obs)_(.*)")
View(posterior_samples_quartile_contrast)
View(posterior_samples_quartile_contrast)
posterior_samples_quartile_contrast <- fit$data %>%
bind_cols(posterior_draw_df) %>%
pivot_longer(cols = starts_with("sample"), names_prefix = "sample",
names_to = "sample", values_to = "N_corr_pred") %>%
mutate(sample = as.integer(sample)) %>%
group_by(cond,subj,sample) %>%
summarize(PrCorr_obs = sum(N_corr)/sum(N_trials),
PrCorr_pred = sum(N_corr_pred)/sum(N_trials))%>%
group_by(cond,sample) %>%
reframe(
quartile = c("lq", "m", "uq"),
Pr_corr_pred = quantile(PrCorr_pred, probs = c(0.25, 0.5, 0.75)),
Pr_corr_obs = quantile(PrCorr_obs, probs = c(0.25, 0.5, 0.75))
)  %>%
group_by(sample, quartile) %>%
summarize(Pr_corr_pred_CEvsGEE = Pr_corr_pred[cond == "CE"] - Pr_corr_pred[cond == "GEE"],
Pr_corr_obs_CEvsGEE = Pr_corr_obs[cond == "CE"] - Pr_corr_obs[cond == "GEE"],
Pr_corr_pred_GEAvsGEE = Pr_corr_pred[cond == "GEA"] - Pr_corr_pred[cond == "GEE"],
Pr_corr_obs_GEAvsGEE = Pr_corr_obs[cond == "GEA"] - Pr_corr_obs[cond == "GEE"],
Pr_corr_pred_CEAvsCE = Pr_corr_pred[cond == "CEA"] - Pr_corr_pred[cond == "CE"],
Pr_corr_obs_CEAvsCE = Pr_corr_obs[cond == "CEA"] - Pr_corr_obs[cond == "CE"]) %>%
ungroup() %>%
pivot_longer(cols = starts_with("Pr_corr"),
names_to = c(".value", "contrast"),
names_pattern = "(Pr_corr_pred|Pr_corr_obs)_(.*)") %>%
group_by(contrast, quartile) %>%
reframe(
bound_type = c("lower","median","upper"),
Pr_corr_pred_cutoff =  quantile(Pr_corr_pred_contrast, c(0.025, 0.5, 0.975))
) %>%
ungroup()
View(posterior_samples_quartile_contrast)
posterior_samples_quartile_contrast <- fit$data %>%
bind_cols(posterior_draw_df) %>%
pivot_longer(cols = starts_with("sample"), names_prefix = "sample",
names_to = "sample", values_to = "N_corr_pred") %>%
mutate(sample = as.integer(sample)) %>%
group_by(cond,subj,sample) %>%
summarize(PrCorr_obs = sum(N_corr)/sum(N_trials),
PrCorr_pred = sum(N_corr_pred)/sum(N_trials))%>%
group_by(cond,sample) %>%
reframe(
quartile = c("lq", "m", "uq"),
Pr_corr_pred = quantile(PrCorr_pred, probs = c(0.25, 0.5, 0.75)),
Pr_corr_obs = quantile(PrCorr_obs, probs = c(0.25, 0.5, 0.75))
)  %>%
group_by(sample, quartile) %>%
summarize(Pr_corr_pred_CEvsGEE = Pr_corr_pred[cond == "CE"] - Pr_corr_pred[cond == "GEE"],
Pr_corr_obs_CEvsGEE = Pr_corr_obs[cond == "CE"] - Pr_corr_obs[cond == "GEE"],
Pr_corr_pred_GEAvsGEE = Pr_corr_pred[cond == "GEA"] - Pr_corr_pred[cond == "GEE"],
Pr_corr_obs_GEAvsGEE = Pr_corr_obs[cond == "GEA"] - Pr_corr_obs[cond == "GEE"],
Pr_corr_pred_CEAvsCE = Pr_corr_pred[cond == "CEA"] - Pr_corr_pred[cond == "CE"],
Pr_corr_obs_CEAvsCE = Pr_corr_obs[cond == "CEA"] - Pr_corr_obs[cond == "CE"]) %>%
ungroup() %>%
pivot_longer(cols = starts_with("Pr_corr"),
names_to = c(".value", "contrast"),
names_pattern = "(Pr_corr_pred|Pr_corr_obs)_(.*)") %>%
group_by(contrast, quartile) %>%
reframe(
bound_type = c("lower","median","upper"),
Pr_corr_pred_cutoff =  quantile(Pr_corr_pred, c(0.025, 0.5, 0.975))
) %>%
ungroup()
setwd("C:/Users/super/Desktop/lab/LearnStrategy/data analysis_expt3/statistics")
graphics.off()
rm(list=ls())
set.seed(47405)
# Libraries
# library(pkgbuild)
library(tidyverse)
library(brms)
library(gridExtra)
library(ggpubr)
library(ggridges)
library(parallel)
source("../../utils/beta-binom.R")
# Load experimental data
data <- readRDS("../data_full.RDS") #change data set
epsilon <- 1e-6
df <- data %>%
filter(trialType %in% c("class_response", "cat_selection"), phase == "test") %>%
select(subjID, condition, stimID, cycle, cat, resp, corr) %>%
mutate(cond = factor(condition, labels = c("GEE","GEA","GCP","CCP")),
condition = NULL,
stimID = as.integer(stimID),
cycle_fct = as.factor(cycle),
cat = as.factor(cat),
resp = as.factor(resp),
corr = as.logical(corr)
) %>%
group_by(cond, subjID, cycle, cat) %>%
summarize(N_corr = sum(corr),
N_trials = length(corr),
cycle_fct = unique(cycle_fct))
# Load brms fit object
load(file="brms_fit_learnRate_full.Rdata")
fit = fit_full
expose_functions(fit, vectorize = TRUE)
posterior_samples_quartile_contrast <- fit$data %>%
bind_cols(posterior_draw_df) %>%
pivot_longer(cols = starts_with("sample"), names_prefix = "sample",
names_to = "sample", values_to = "N_corr_pred") %>%
mutate(sample = as.integer(sample)) %>%
group_by(cond,subjID,cycle,sample) %>%
summarize(PrCorr_obs = sum(N_corr)/sum(N_trials),
PrCorr_pred = sum(N_corr_pred)/sum(N_trials))%>%
group_by(cond,cycle,sample) %>%
reframe(
quartile = c("lq", "m", "uq"),
Pr_corr_pred = quantile(PrCorr_pred, probs = c(0.25, 0.5, 0.75)),
Pr_corr_obs = quantile(PrCorr_obs, probs = c(0.25, 0.5, 0.75))
)  %>%
group_by(cycle,sample,quartile) %>%
summarize(Pr_corr_pred_GEAvsGEE = Pr_corr_pred[cond == "GEA"] - Pr_corr_pred[cond == "GEE"],
Pr_corr_obs_GEAvsGEE = Pr_corr_obs[cond == "GEA"] - Pr_corr_obs[cond == "GEE"],
Pr_corr_pred_GCPvsGEE = Pr_corr_pred[cond == "GCP"] - Pr_corr_pred[cond == "GEE"],
Pr_corr_obs_GCPvsGEE = Pr_corr_obs[cond == "GCP"] - Pr_corr_obs[cond == "GEE"],
Pr_corr_pred_CCPvsGEE= Pr_corr_pred[cond == "CCP"] - Pr_corr_pred[cond == "GEE"],
Pr_corr_obs_CCPvsGEE = Pr_corr_obs[cond == "CCP"] - Pr_corr_obs[cond == "GEE"]) %>%
ungroup() %>%
pivot_longer(cols = starts_with("Pr_corr"),
names_to = c(".value", "contrast"),
names_pattern = "(Pr_corr_pred|Pr_corr_obs)_(.*)") %>%
group_by(contrast, quartile) %>%
reframe(
bound_type = c("lower","median","upper"),
Pr_corr_pred_cutoff =  quantile(Pr_corr_pred, c(0.025, 0.5, 0.975))
) %>%
ungroup()
posterior_draw_df <- t(posterior_predict(fit)) %>%
as_tibble() %>%
setNames(paste0("sample", 1:ncol(.)))
save(posterior_draw_df, file = "posterior_draw_df.Rdata")
load("posterior_draw_df.Rdata")
posterior_samples_quartile_contrast <- fit$data %>%
bind_cols(posterior_draw_df) %>%
pivot_longer(cols = starts_with("sample"), names_prefix = "sample",
names_to = "sample", values_to = "N_corr_pred") %>%
mutate(sample = as.integer(sample)) %>%
group_by(cond,subjID,cycle,sample) %>%
summarize(PrCorr_obs = sum(N_corr)/sum(N_trials),
PrCorr_pred = sum(N_corr_pred)/sum(N_trials))%>%
group_by(cond,cycle,sample) %>%
reframe(
quartile = c("lq", "m", "uq"),
Pr_corr_pred = quantile(PrCorr_pred, probs = c(0.25, 0.5, 0.75)),
Pr_corr_obs = quantile(PrCorr_obs, probs = c(0.25, 0.5, 0.75))
)  %>%
group_by(cycle,sample,quartile) %>%
summarize(Pr_corr_pred_GEAvsGEE = Pr_corr_pred[cond == "GEA"] - Pr_corr_pred[cond == "GEE"],
Pr_corr_obs_GEAvsGEE = Pr_corr_obs[cond == "GEA"] - Pr_corr_obs[cond == "GEE"],
Pr_corr_pred_GCPvsGEE = Pr_corr_pred[cond == "GCP"] - Pr_corr_pred[cond == "GEE"],
Pr_corr_obs_GCPvsGEE = Pr_corr_obs[cond == "GCP"] - Pr_corr_obs[cond == "GEE"],
Pr_corr_pred_CCPvsGEE= Pr_corr_pred[cond == "CCP"] - Pr_corr_pred[cond == "GEE"],
Pr_corr_obs_CCPvsGEE = Pr_corr_obs[cond == "CCP"] - Pr_corr_obs[cond == "GEE"]) %>%
ungroup() %>%
pivot_longer(cols = starts_with("Pr_corr"),
names_to = c(".value", "contrast"),
names_pattern = "(Pr_corr_pred|Pr_corr_obs)_(.*)") %>%
group_by(contrast, quartile) %>%
reframe(
bound_type = c("lower","median","upper"),
Pr_corr_pred_cutoff =  quantile(Pr_corr_pred, c(0.025, 0.5, 0.975))
) %>%
ungroup()
View(posterior_samples_quartile_contrast)
posterior_samples_quartile_contrast <- fit$data %>%
bind_cols(posterior_draw_df) %>%
pivot_longer(cols = starts_with("sample"), names_prefix = "sample",
names_to = "sample", values_to = "N_corr_pred") %>%
mutate(sample = as.integer(sample)) %>%
group_by(cond,subjID,cycle,sample) %>%
summarize(PrCorr_obs = sum(N_corr)/sum(N_trials),
PrCorr_pred = sum(N_corr_pred)/sum(N_trials))%>%
group_by(cond,cycle,sample) %>%
reframe(
quartile = c("lq", "m", "uq"),
Pr_corr_pred = quantile(PrCorr_pred, probs = c(0.25, 0.5, 0.75)),
Pr_corr_obs = quantile(PrCorr_obs, probs = c(0.25, 0.5, 0.75))
)  %>%
group_by(cycle,sample,quartile) %>%
summarize(Pr_corr_pred_GEAvsGEE = Pr_corr_pred[cond == "GEA"] - Pr_corr_pred[cond == "GEE"],
Pr_corr_obs_GEAvsGEE = Pr_corr_obs[cond == "GEA"] - Pr_corr_obs[cond == "GEE"],
Pr_corr_pred_GCPvsGEE = Pr_corr_pred[cond == "GCP"] - Pr_corr_pred[cond == "GEE"],
Pr_corr_obs_GCPvsGEE = Pr_corr_obs[cond == "GCP"] - Pr_corr_obs[cond == "GEE"],
Pr_corr_pred_CCPvsGEE= Pr_corr_pred[cond == "CCP"] - Pr_corr_pred[cond == "GEE"],
Pr_corr_obs_CCPvsGEE = Pr_corr_obs[cond == "CCP"] - Pr_corr_obs[cond == "GEE"]) %>%
ungroup() %>%
pivot_longer(cols = starts_with("Pr_corr"),
names_to = c(".value", "contrast"),
names_pattern = "(Pr_corr_pred|Pr_corr_obs)_(.*)") %>%
group_by(contrast, quartile) %>%
reframe(
bound_type = c("lower","median","upper"),
Pr_corr_pred_cutoff =  quantile(Pr_corr_pred, c(0.05, 0.5, 0.975))
) %>%
ungroup()
posterior_samples_quartile_contrast <- fit$data %>%
bind_cols(posterior_draw_df) %>%
pivot_longer(cols = starts_with("sample"), names_prefix = "sample",
names_to = "sample", values_to = "N_corr_pred") %>%
mutate(sample = as.integer(sample)) %>%
group_by(cond,subjID,cycle,sample) %>%
summarize(PrCorr_obs = sum(N_corr)/sum(N_trials),
PrCorr_pred = sum(N_corr_pred)/sum(N_trials))%>%
group_by(cond,cycle,sample) %>%
reframe(
quartile = c("lq", "m", "uq"),
Pr_corr_pred = quantile(PrCorr_pred, probs = c(0.25, 0.5, 0.75)),
Pr_corr_obs = quantile(PrCorr_obs, probs = c(0.25, 0.5, 0.75))
)  %>%
group_by(cycle,sample,quartile) %>%
summarize(Pr_corr_pred_GEAvsGEE = Pr_corr_pred[cond == "GEA"] - Pr_corr_pred[cond == "GEE"],
Pr_corr_obs_GEAvsGEE = Pr_corr_obs[cond == "GEA"] - Pr_corr_obs[cond == "GEE"],
Pr_corr_pred_GCPvsGEE = Pr_corr_pred[cond == "GCP"] - Pr_corr_pred[cond == "GEE"],
Pr_corr_obs_GCPvsGEE = Pr_corr_obs[cond == "GCP"] - Pr_corr_obs[cond == "GEE"],
Pr_corr_pred_CCPvsGEE= Pr_corr_pred[cond == "CCP"] - Pr_corr_pred[cond == "GEE"],
Pr_corr_obs_CCPvsGEE = Pr_corr_obs[cond == "CCP"] - Pr_corr_obs[cond == "GEE"]) %>%
ungroup() %>%
pivot_longer(cols = starts_with("Pr_corr"),
names_to = c(".value", "contrast"),
names_pattern = "(Pr_corr_pred|Pr_corr_obs)_(.*)") %>%
group_by(contrast, quartile) %>%
reframe(
bound_type = c("lower","median","upper"),
Pr_corr_pred_cutoff =  quantile(Pr_corr_pred, c(0.13, 0.5, 0.975))
) %>%
ungroup()
p <- ggplot(data = learning_curve_df,
aes(y=Pr_corr_mean, x=block)) +
geom_line(aes(linetype = cond),linewidth = .7) +
geom_point(aes(shape = cond),size = 3) +
# geom_errorbar(aes(ymin = Pr_corr - SEM, ymax = Pr_corr + SEM), width = .1) +
scale_shape_manual(name = "Condition", values = c(1,2,3), labels = cond_labels) +
scale_linetype_manual(name = "Condition", values = c("solid","dashed","dotted"), labels = cond_labels) + #only two values are used
xlab("Block") +
ylab ("Mean Training Accuracy") +
# ggtitle(paste0("N_subj_R = ",N_subj_R,", ","N_subj_SC = ", N_subj_SC)) +
scale_x_continuous(breaks = 1:10) +
scale_y_continuous(limits = c(0,1)) +
theme_pubr(base_size = 25, legend = "right") +
theme(legend.text = element_text(hjust = 0.5))
learning_curve_df <- data %>%
filter(phase == "train") %>% #
mutate(cond = factor(cond, labels = c("GEE", "CE"))) %>%
group_by(version,cond,subj,block) %>%
summarize(Pr_corr_sub = mean(corr)) %>%
ungroup() %>%
group_by(version,cond,block) %>%
summarize(Pr_corr_mean = mean(Pr_corr_sub),
N_subj = n_distinct(subj))
View(data)
library(tidyverse)
library(gridExtra)
library(magrittr)
library(ggpubr)
source("../utils/performance-metrics.R")
View(data)
View(data)
setwd("C:/Users/super/Desktop/lab/LearnStrategy/data analysis_expt1")
library(tidyverse)
library(gridExtra)
library(magrittr)
library(ggpubr)
source("../utils/performance-metrics.R")
data <- readRDS("data.RDS")
View(data)
learning_curve_df <- data %>%
filter(phase == "train") %>% #
mutate(cond = factor(cond, labels = c("GEE", "CE"))) %>%
group_by(version,cond,subj,block) %>%
summarize(Pr_corr_sub = mean(corr)) %>%
ungroup() %>%
group_by(version,cond,block) %>%
summarize(Pr_corr_mean = mean(Pr_corr_sub),
N_subj = n_distinct(subj))
cond_labels <- c("GEE" = "Given Example\nEven", "CE" = "Choose Example")
version_labels <- c("before" = "Expt 1a", "after" = "Expt 1b")
p <- ggplot(data = learning_curve_df,
aes(y=Pr_corr_mean, x=block)) +
geom_line(aes(linetype = cond),linewidth = .7) +
geom_point(aes(shape = cond),size = 3) +
# geom_errorbar(aes(ymin = Pr_corr - SEM, ymax = Pr_corr + SEM), width = .1) +
scale_shape_manual(name = "Condition", values = c(1,2,3), labels = cond_labels) +
scale_linetype_manual(name = "Condition", values = c("solid","dashed","dotted"), labels = cond_labels) + #only two values are used
xlab("Block") +
ylab ("Mean Training Accuracy") +
facet_grid(~version) +
# ggtitle(paste0("N_subj_R = ",N_subj_R,", ","N_subj_SC = ", N_subj_SC)) +
scale_x_continuous(breaks = 1:10) +
scale_y_continuous(limits = c(0,1)) +
theme_pubr(base_size = 25, legend = "right") +
theme(legend.text = element_text(hjust = 0.5))
ggsave(paste('training learning curve',".jpg"),plot = p ,path = "figure",width = 12, height = 6)
ggplot(data = learning_curve_df,
aes(y=Pr_corr_mean, x=block)) +
geom_line(aes(linetype = cond),linewidth = .7) +
geom_point(aes(shape = cond),size = 3) +
# geom_errorbar(aes(ymin = Pr_corr - SEM, ymax = Pr_corr + SEM), width = .1) +
scale_shape_manual(name = "Condition", values = c(1,2,3), labels = cond_labels) +
scale_linetype_manual(name = "Condition", values = c("solid","dashed","dotted"), labels = cond_labels) + #only two values are used
xlab("Block") +
ylab ("Mean Training Accuracy") +
facet_grid(~version, labeller = labeller(version_labels)) +
# ggtitle(paste0("N_subj_R = ",N_subj_R,", ","N_subj_SC = ", N_subj_SC)) +
scale_x_continuous(breaks = 1:10) +
scale_y_continuous(limits = c(0,1)) +
theme_pubr(base_size = 25, legend = "right") +
theme(legend.text = element_text(hjust = 0.5))
ggplot(data = learning_curve_df,
aes(y=Pr_corr_mean, x=block)) +
geom_line(aes(linetype = cond),linewidth = .7) +
geom_point(aes(shape = cond),size = 3) +
# geom_errorbar(aes(ymin = Pr_corr - SEM, ymax = Pr_corr + SEM), width = .1) +
scale_shape_manual(name = "Condition", values = c(1,2,3), labels = cond_labels) +
scale_linetype_manual(name = "Condition", values = c("solid","dashed","dotted"), labels = cond_labels) + #only two values are used
xlab("Block") +
ylab ("Mean Training Accuracy") +
facet_grid(~version, labeller = labeller(version = version_labels)) +
# ggtitle(paste0("N_subj_R = ",N_subj_R,", ","N_subj_SC = ", N_subj_SC)) +
scale_x_continuous(breaks = 1:10) +
scale_y_continuous(limits = c(0,1)) +
theme_pubr(base_size = 25, legend = "right") +
theme(legend.text = element_text(hjust = 0.5))
ggplot(data = learning_curve_df,
aes(y=Pr_corr_mean, x=block)) +
geom_line(aes(linetype = cond),linewidth = .7) +
geom_point(aes(shape = cond),size = 3) +
# geom_errorbar(aes(ymin = Pr_corr - SEM, ymax = Pr_corr + SEM), width = .1) +
scale_shape_manual(name = "Condition", values = c(1,2,3), labels = cond_labels) +
scale_linetype_manual(name = "Condition", values = c("solid","dashed","dotted"), labels = cond_labels) + #only two values are used
xlab("Block") +
ylab ("Mean Training Accuracy") +
facet_grid(~version, labeller = labeller(version = version_labels)) +
# ggtitle(paste0("N_subj_R = ",N_subj_R,", ","N_subj_SC = ", N_subj_SC)) +
scale_x_continuous(breaks = 1:10) +
scale_y_continuous(limits = c(0,1)) +
theme_pubr(base_size = 25, legend = "right") +
theme(legend.text = element_text(hjust = 0.5),
legend.position = "bottom")
cond_labels <- c("GEE" = "Given Example Even", "CE" = "Choose Example")
version_labels <- c("before" = "Expt 1a", "after" = "Expt 1b")
p <- ggplot(data = learning_curve_df,
aes(y=Pr_corr_mean, x=block)) +
geom_line(aes(linetype = cond),linewidth = .7) +
geom_point(aes(shape = cond),size = 3) +
# geom_errorbar(aes(ymin = Pr_corr - SEM, ymax = Pr_corr + SEM), width = .1) +
scale_shape_manual(name = "Condition", values = c(1,2,3), labels = cond_labels) +
scale_linetype_manual(name = "Condition", values = c("solid","dashed","dotted"), labels = cond_labels) + #only two values are used
xlab("Block") +
ylab ("Mean Training Accuracy") +
facet_grid(~version, labeller = labeller(version = version_labels)) +
# ggtitle(paste0("N_subj_R = ",N_subj_R,", ","N_subj_SC = ", N_subj_SC)) +
scale_x_continuous(breaks = 1:10) +
scale_y_continuous(limits = c(0,1)) +
theme_pubr(base_size = 25, legend = "right") +
theme(legend.text = element_text(hjust = 0.5),
legend.position = "bottom")
ggsave(paste('training learning curve',".jpg"),plot = p ,path = "figure",width = 12, height = 6)
