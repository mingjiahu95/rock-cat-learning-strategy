scale_x_continuous(breaks = seq(0.2,1,0.1), limits = c(0.2, 1)) +
scale_y_continuous(breaks = seq(0.2,1,0.1), limits = c(0.2, 1)) +
coord_equal() +
theme_pubr(base_size = 25)
ggplot(data = filter(cat_select_prop, cond != "GEA"),
mapping = aes(x = prop_cats_obs, y = Prcorr)) +
geom_point(size = 2, shape = 1) +
geom_smooth(method = "lm", se = F) +
xlab("Proportion of Worse Performing\nCategories Selected") +
ylab("Final Test Accuracy") +
scale_x_continuous(breaks = seq(0.2,1,0.1), limits = c(0.2, 1)) +
scale_y_continuous(breaks = seq(0.2,1,0.1), limits = c(0.2, 1)) +
coord_equal() +
facet_wrap(~ cond, labeller = labeller(cond_labels)) +
theme_pubr(base_size = 20)
cond_labels <- c("CE" = "Choose\nExample", "CEA" = "Choose\nExample Adaptive")
p <- ggplot(data = filter(cat_select_prop, cond != "GEA"),
mapping = aes(x = prop_cats_obs, y = Prcorr)) +
geom_point(size = 2, shape = 1) +
geom_smooth(method = "lm", se = F) +
xlab("Proportion of Worse Performing\nCategories Selected") +
ylab("Final Test Accuracy") +
scale_x_continuous(breaks = seq(0.2,1,0.1), limits = c(0.2, 1)) +
scale_y_continuous(breaks = seq(0.2,1,0.1), limits = c(0.2, 1)) +
coord_equal() +
facet_wrap(~ cond, labeller = labeller(cond_labels)) +
theme_pubr(base_size = 20)
with(filter(cat_select_prop, cond == "CE"),
cor.test(prop_cats, Prcorr))
p <- ggplot(data = filter(cat_select_prop, cond != "GEA"),
mapping = aes(x = prop_cats_obs, y = Prcorr)) +
geom_point(size = 2, shape = 1) +
geom_smooth(method = "lm", se = F) +
xlab("Proportion of Worse Performing\nCategories Selected") +
ylab("Final Test Accuracy") +
scale_x_continuous(breaks = seq(0.2,1,0.1), limits = c(0.2, 1)) +
scale_y_continuous(breaks = seq(0.2,1,0.1), limits = c(0.2, 1)) +
coord_equal() +
facet_wrap(~ cond, labeller = labeller(cond_labels)) +
theme_pubr(base_size = 20)
with(filter(cat_select_prop, cond == "CE"),
cor.test(prop_cats_obs, Prcorr))
with(filter(cat_select_prop, cond == "CEA"),
cor.test(prop_cats_obs, Prcorr))
ggsave(filename = "figure/PropDiffvsPrC.png", p, width = 15, height = 8)
ggplot(data = filter(cat_select_prop, cond != "GEA"),
mapping = aes(x = prop_cats_obs, y = Prcorr)) +
geom_point(size = 2, shape = 1) +
geom_smooth(method = "lm", se = F) +
xlab("Proportion of Worse Performing\nCategories Selected") +
ylab("Final Test Accuracy") +
scale_x_continuous(breaks = seq(0,1,0.1), limits = c(0, 1)) +
scale_y_continuous(breaks = seq(0,1,0.1), limits = c(0, 1)) +
coord_equal() +
facet_wrap(~ cond, labeller = labeller(cond_labels)) +
theme_pubr(base_size = 20)
ggplot(data = filter(cat_select_prop, cond != "GEA"),
mapping = aes(x = prop_cats_obs, y = Prcorr)) +
geom_point(size = 2, shape = 1) +
geom_smooth(method = "lm", se = F, color = "gray") +
xlab("Proportion of Worse Performing\nCategories Selected") +
ylab("Final Test Accuracy") +
scale_x_continuous(breaks = seq(0,1,0.1), limits = c(0, 1)) +
scale_y_continuous(breaks = seq(0,1,0.1), limits = c(0, 1)) +
coord_equal() +
facet_wrap(~ cond, labeller = labeller(cond_labels)) +
theme_pubr(base_size = 20)
cond_labels <- c("CE" = "Choose\nExample", "CEA" = "Choose\nExample Adaptive")
p <- ggplot(data = filter(cat_select_prop, cond != "GEA"),
mapping = aes(x = prop_cats_obs, y = Prcorr)) +
geom_point(size = 2, shape = 1) +
geom_smooth(method = "lm", se = F, color = "gray", alpha = 0.5) +
xlab("Proportion of Worse Performing\nCategories Selected") +
ylab("Final Test Accuracy") +
scale_x_continuous(breaks = seq(0,1,0.1), limits = c(0, 1)) +
scale_y_continuous(breaks = seq(0,1,0.1), limits = c(0, 1)) +
coord_equal() +
facet_wrap(~ cond, labeller = labeller(cond_labels)) +
theme_pubr(base_size = 20)
with(filter(cat_select_prop, cond == "CE"),
cor.test(prop_cats_obs, Prcorr))
with(filter(cat_select_prop, cond == "CEA"),
cor.test(prop_cats_obs, Prcorr))
ggsave(filename = "figure/PropDiffvsPrC.png", p, width = 15, height = 8)
cond_labels <- c("CE" = "Choose\nExample", "CEA" = "Choose\nExample Adaptive")
p <- ggplot(data = filter(cat_select_prop, cond != "GEA"),
mapping = aes(x = prop_cats_obs, y = Prcorr)) +
geom_smooth(method = "lm", se = F, color = "gray", alpha = 0.5) +
geom_point(size = 2, shape = 1) +
xlab("Proportion of Worse Performing\nCategories Selected") +
ylab("Final Test Accuracy") +
scale_x_continuous(breaks = seq(0,1,0.1), limits = c(0, 1)) +
scale_y_continuous(breaks = seq(0,1,0.1), limits = c(0, 1)) +
coord_equal() +
facet_wrap(~ cond, labeller = labeller(cond_labels)) +
theme_pubr(base_size = 20)
with(filter(cat_select_prop, cond == "CE"),
cor.test(prop_cats_obs, Prcorr))
with(filter(cat_select_prop, cond == "CEA"),
cor.test(prop_cats_obs, Prcorr))
ggsave(filename = "figure/PropDiffvsPrC.png", p, width = 15, height = 8)
cond_labels <- c("CE" = "Choose\nExample", "CEA" = "Choose\nExample Adaptive")
p <- ggplot(data = filter(cat_select_prop, cond != "GEA"),
mapping = aes(x = prop_cats_obs, y = Prcorr)) +
geom_smooth(method = "lm", se = F, color = "gray", alpha = 0.5) +
geom_point(size = 2, shape = 1) +
xlab("Proportion of Worse Performing\nCategories Selected") +
ylab("Final Test Accuracy") +
scale_x_continuous(breaks = seq(0,1,0.1), limits = c(0, 1)) +
scale_y_continuous(breaks = seq(0,1,0.1), limits = c(0, 1)) +
coord_equal() +
facet_wrap(~ cond, labeller = labeller(cond = cond_labels)) +
theme_pubr(base_size = 20)
with(filter(cat_select_prop, cond == "CE"),
cor.test(prop_cats_obs, Prcorr))
with(filter(cat_select_prop, cond == "CEA"),
cor.test(prop_cats_obs, Prcorr))
ggsave(filename = "figure/PropDiffvsPrC.png", p, width = 15, height = 8)
cond_labels <- c("GEE" = "Given Example\nEven", "CE" = "Choose Example",
"GEA" = "Given Example\nAdapted", "CEA" = "Choose Example\nAdaptive")
library(tidyverse)
library(ggridges)
library(ggpubr)
# ---- Load the Data ----
setwd("../data_expt2")
# survey_file <- dir(pattern = "survey_data.csv")
files <- dir(pattern = "LearnStrategy.*\\.csv$")
data <- do.call(bind_rows, lapply(files, read.csv, nrows = 290)) #skip = 1, nrows = 289
grid_table <- do.call(bind_rows, lapply(files, read.csv, header = F,skip = 292, nrows = 48)) %>%
select(c(1:2,18:21)) %>%
setNames(c("subj","cond","cat","token","row","col"))
# survey_data1 <- read.csv("survey_data1.csv")
# survey_data2 <- read.csv("survey_data2.csv")
setwd("../data analysis_expt2")
# setwd("../data_expt2/pilot")
# survey_file <- dir(pattern = "survey_data.csv")
# files_pilot <- dir(pattern = "LearnStrategy.*\\.csv$")
# data_pilot <- do.call(bind_rows, lapply(files_pilot, read.csv, skip = 1, nrows = 289))
# # survey_data1 <- read.csv("survey_data1.csv")
# # survey_data2 <- read.csv("survey_data2.csv")
# setwd("../../data analysis_expt2")
# survey_data_cleaned1 <- survey_data1 %>%
#                         select(subj,cond,score)
# survey_data_cleaned2 <- select(survey_data2, participant, condition, Q1, SC0) %>%
#                        rename(subj = participant, cond = condition, score = SC0, strategy = Q1) %>%
#                        filter(!is.na(subj) & !is.na(score)) %>%
#                        mutate(subj = subj + max(survey_data_cleaned1$subj)) %>%
#                        mutate(strategy = lapply(str_split(strategy, ","), function(x) {
#                               if (length(x) == 1 && x == "") numeric(0) else as.numeric(x)
#                               })
#                               )
# survey_data_cleaned <- full_join(survey_data_cleaned1,survey_data_cleaned2,by = join_by(subj, cond)) %>%
#                        mutate(score = coalesce(score.x,score.y),.keep = "unused")
# data_pilot_cleaned <- select(data_pilot,participant,condition,block, phase, trial, cat, token, row, col, resp, corr, t_select, t_resp) %>%
#                       rename(subj = participant,cond = condition) %>%
#                       filter(!is.na(trial) & !is.na(subj)) %>%
#                       mutate(subj = as.character(subj),
#                              cond = paste0('sona_',cond),
#                              resp = lead(resp)) #data correction
data <- select(data,participant,condition,block, phase, trial, cat, token, cat_rec, token_rec, row, col, resp, corr, t_select, t_resp) %>%
rename(subj = participant,cond = condition) %>%
filter(!is.na(trial) & !is.na(subj))
# mutate(dataset_cond = paste0('prolific_',cond))
# bind_rows(data_pilot_cleaned)
# ---- data cleaning ----------------------------------------------
data$phase = factor(data$phase,labels = c("train","test"))
data$cat = factor(data$cat,labels = c("Andesite", "Basalt", "Diorite", "Gabbro", "Obsidian", "Pegmatite", "Peridotite", "Pumice"))
data$resp = factor(data$resp,labels = c("Andesite", "Basalt", "Diorite", "Gabbro", "Obsidian", "Pegmatite", "Peridotite", "Pumice"))
data$cat_rec = factor(data$cat_rec,labels = c("Andesite", "Basalt", "Diorite", "Gabbro", "Obsidian", "Pegmatite", "Peridotite", "Pumice"))
data$cond = fct_recode(data$cond, "GEE" = "TCN", "GEA" = "TCR", "CE" = "SCN", "CEA" = "SCR")
# dataset_cond_levels = sprintf("%s_%s",rep("prolific",each=4),c("TCN","TCR","SCN","SCR"))
# data$dataset_cond = factor(data$dataset_cond,levels = dataset_cond_levels)
# data <- data %>%
#         separate(dataset_cond, c("dataset","cond"), sep = "_") %>%
#         mutate(cond = factor(cond, levels = c("TCN","TCR","SCN","SCR")))
#-----------------------------------------------------------------------------------
# saveRDS(data,"prolific data.RDS")
data <- readRDS("prolific data.RDS")
# valid_subj_accu_df <- data %>%
#                       filter(phase == "test", block %in% 7:9) %>%
#                       group_by(cond,subj) %>%
#                       summarize(Pr_corr_test = mean(corr == 1)) %>%
#                       group_by(cond) %>%
#                       filter(percent_rank(Pr_corr_test) > .15) %>%
#                       ungroup()
#
# data_cleaned <- data %>%
#                 semi_join(valid_subj_accu_df,by = "subj")
#---------------------------------------------------------
# test learning curves
learning_curve_df <- data %>%
filter(phase == "test") %>%
group_by(cond,subj,block) %>%
summarize(Pr_corr = mean(corr)) %>%
group_by(cond,block) %>%
summarize(Prcorr_mean = mean(Pr_corr),
# Prcorr_ci = list({
# boot_samples <- boot(Pr_corr,
#     function(x,i){mean(x[i])},
#     R=5000, ncpus=8)
# boot.ci(boot_samples, type = "basic")$basic[4:5]}
# ),
N_subj = n_distinct(subj)) %>%
# rowwise() %>%
# mutate(Prcorr_ci_lower = Prcorr_ci[1],
#        Prcorr_ci_upper = Prcorr_ci[2]) %>%
ungroup()
p <- ggplot(data = learning_curve_df,
aes(y=Prcorr_mean, x=block)) +
geom_line(aes(group = cond),linewidth = .7) +
geom_point(aes(shape = cond),size = 3) +
# geom_errorbar(aes(ymin = Prcorr_ci_lower, ymax = Prcorr_ci_upper), width = .1) +
scale_shape_manual(name = "Condition", values = c(1,2,3,4), labels = cond_labels) +
scale_linetype_manual(name = "Condition", values = c("solid","dashed","dotted","dotdash"), labels = cond_labels) +
# facet_wrap(~ dataset) +
xlab("Test Block") +
ylab ("Mean Test Accuracy") +
# ggtitle(paste0("N_subj_TCN = ",N_subj_TCN,", ","N_subj_TCR = ", N_subj_TCR,", ",
#                "N_subj_SCN = ", N_subj_SCN,", ","N_subj_SCR = ", N_subj_SCR)) +
scale_x_continuous(breaks = 1:9) +
scale_y_continuous(limits = c(0.4,0.9)) +
theme_pubr(base_size = 20, legend = "right") +
theme(legend.text = element_text(hjust = 0.5))
ggsave(paste0('test learning curves',".jpg"),plot = p ,path = "figure",width = 10, height = 6)
cond_labels <- c("GEE" = "Given Example\nEven\n", "CE" = "Choose Example\n",
"GEA" = "Given Example\nAdapted\n", "CEA" = "Choose Example\nAdaptive\n")
p <- ggplot(data = learning_curve_df,
aes(y=Prcorr_mean, x=block)) +
geom_line(aes(group = cond),linewidth = .7) +
geom_point(aes(shape = cond),size = 3) +
# geom_errorbar(aes(ymin = Prcorr_ci_lower, ymax = Prcorr_ci_upper), width = .1) +
scale_shape_manual(name = "Condition", values = c(1,2,3,4), labels = cond_labels) +
scale_linetype_manual(name = "Condition", values = c("solid","dashed","dotted","dotdash"), labels = cond_labels) +
# facet_wrap(~ dataset) +
xlab("Test Block") +
ylab ("Mean Test Accuracy") +
# ggtitle(paste0("N_subj_TCN = ",N_subj_TCN,", ","N_subj_TCR = ", N_subj_TCR,", ",
#                "N_subj_SCN = ", N_subj_SCN,", ","N_subj_SCR = ", N_subj_SCR)) +
scale_x_continuous(breaks = 1:9) +
scale_y_continuous(limits = c(0.4,0.9)) +
theme_pubr(base_size = 20, legend = "right") +
theme(legend.text = element_text(hjust = 0.5))
ggsave(paste0('test learning curves',".jpg"),plot = p ,path = "figure",width = 10, height = 6)
cond_labels <- c("GEE" = "Given Example\nEven\n", "CE" = "Choose Example\n",
"GEA" = "Given Example\nAdapted\n", "CEA" = "Choose Example\nAdaptive\n")
ggplot(data = learning_curve_df,
aes(y=Prcorr_mean, x=block, color = cond)) +
geom_line(aes(group = cond),linewidth = .7) +
geom_point(aes(shape = cond),size = 3) +
# geom_errorbar(aes(ymin = Prcorr_ci_lower, ymax = Prcorr_ci_upper), width = .1) +
scale_color_manual(values = c("GEE" = "red", "GEA" = "red", "CE" = "black","CEA" = "black")) +
scale_shape_manual(name = "Condition", values = c(1,2,3,4), labels = cond_labels) +
scale_linetype_manual(name = "Condition", values = c("solid","dashed","dotted","dotdash"), labels = cond_labels) +
# facet_wrap(~ dataset) +
xlab("Test Block") +
ylab ("Mean Test Accuracy") +
# ggtitle(paste0("N_subj_TCN = ",N_subj_TCN,", ","N_subj_TCR = ", N_subj_TCR,", ",
#                "N_subj_SCN = ", N_subj_SCN,", ","N_subj_SCR = ", N_subj_SCR)) +
scale_x_continuous(breaks = 1:9) +
scale_y_continuous(limits = c(0.4,0.9)) +
theme_pubr(base_size = 20, legend = "right") +
theme(legend.text = element_text(hjust = 0.5)) +
guides(color = "none")
ggplot(data = learning_curve_df,
aes(y=Prcorr_mean, x=block, color = cond)) +
geom_line(aes(group = cond),linewidth = .7) +
geom_point(aes(shape = cond),size = 3) +
# geom_errorbar(aes(ymin = Prcorr_ci_lower, ymax = Prcorr_ci_upper), width = .1) +
scale_color_manual(values = c("GEE" = "red", "GEA" = "red", "CE" = "gray","CEA" = "gray")) +
scale_shape_manual(name = "Condition", values = c(1,2,3,4), labels = cond_labels) +
scale_linetype_manual(name = "Condition", values = c("solid","dashed","dotted","dotdash"), labels = cond_labels) +
# facet_wrap(~ dataset) +
xlab("Test Block") +
ylab ("Mean Test Accuracy") +
# ggtitle(paste0("N_subj_TCN = ",N_subj_TCN,", ","N_subj_TCR = ", N_subj_TCR,", ",
#                "N_subj_SCN = ", N_subj_SCN,", ","N_subj_SCR = ", N_subj_SCR)) +
scale_x_continuous(breaks = 1:9) +
scale_y_continuous(limits = c(0.4,0.9)) +
theme_pubr(base_size = 20, legend = "right") +
theme(legend.text = element_text(hjust = 0.5)) +
guides(color = "none")
p <- ggplot(data = learning_curve_df,
aes(y=Prcorr_mean, x=block, color = cond)) +
geom_line(aes(group = cond),linewidth = .7) +
geom_point(aes(shape = cond),size = 3) +
# geom_errorbar(aes(ymin = Prcorr_ci_lower, ymax = Prcorr_ci_upper), width = .1) +
scale_color_manual(values = c("GEE" = "red", "GEA" = "red", "CE" = "gray","CEA" = "gray")) +
scale_shape_manual(name = "Condition", values = c(1,2,3,4), labels = cond_labels) +
scale_linetype_manual(name = "Condition", values = c("solid","dashed","dotted","dotdash"), labels = cond_labels) +
# facet_wrap(~ dataset) +
xlab("Test Block") +
ylab ("Mean Test Accuracy") +
# ggtitle(paste0("N_subj_TCN = ",N_subj_TCN,", ","N_subj_TCR = ", N_subj_TCR,", ",
#                "N_subj_SCN = ", N_subj_SCN,", ","N_subj_SCR = ", N_subj_SCR)) +
scale_x_continuous(breaks = 1:9) +
scale_y_continuous(limits = c(0.4,0.9)) +
theme_pubr(base_size = 20, legend = "right") +
theme(legend.text = element_text(hjust = 0.5)) +
guides(color = "none")
ggsave(paste0('test learning curves_demo',".jpg"),plot = p ,path = "figure",width = 10, height = 6)
p <- ggplot(data = learning_curve_df,
aes(y=Prcorr_mean, x=block, color = cond)) +
geom_line(aes(group = cond),linewidth = .7) +
geom_point(aes(shape = cond),size = 3) +
# geom_errorbar(aes(ymin = Prcorr_ci_lower, ymax = Prcorr_ci_upper), width = .1) +
scale_color_manual(values = c("GEE" = "gray", "GEA" = "gray", "CE" = "red","CEA" = "red")) +
scale_shape_manual(name = "Condition", values = c(1,2,3,4), labels = cond_labels) +
scale_linetype_manual(name = "Condition", values = c("solid","dashed","dotted","dotdash"), labels = cond_labels) +
# facet_wrap(~ dataset) +
xlab("Test Block") +
ylab ("Mean Test Accuracy") +
# ggtitle(paste0("N_subj_TCN = ",N_subj_TCN,", ","N_subj_TCR = ", N_subj_TCR,", ",
#                "N_subj_SCN = ", N_subj_SCN,", ","N_subj_SCR = ", N_subj_SCR)) +
scale_x_continuous(breaks = 1:9) +
scale_y_continuous(limits = c(0.4,0.9)) +
theme_pubr(base_size = 20, legend = "right") +
theme(legend.text = element_text(hjust = 0.5)) +
guides(color = "none")
ggsave(paste0('test learning curves_demo',".jpg"),plot = p ,path = "figure",width = 10, height = 6)
library(tidyverse)
library(ggpubr)
library(ggridges)
library(effsize)
library(RColorBrewer)
source("../utils/performance-metrics.R")
load("cat_select_prop.Rdata")
cond_labels <- c("CE" = "Choose\nExample", "CEA" = "Choose\nExample Adaptive")
ggplot(data = filter(cat_select_prop, cond != "GEA"),
mapping = aes(x = prop_cats_obs, y = Prcorr)) +
geom_smooth(method = "lm", se = F, color = "gray", alpha = 0.5) +
geom_point(size = 2, shape = 1) +
xlab("Proportion of Worse Performing\nCategories Selected") +
ylab("Final Test Accuracy") +
scale_x_continuous(breaks = seq(0,1,0.1), limits = c(0, 1)) +
scale_y_continuous(breaks = seq(0,1,0.1), limits = c(0, 1)) +
coord_equal() +
facet_wrap(~ cond, labeller = labeller(cond = cond_labels)) +
theme_pubr(base_size = 20)
ggplot(data = filter(cat_select_prop, cond != "GEA"),
mapping = aes(x = prop_cats_obs, y = Prcorr)) +
geom_smooth(method = "lm", se = F, color = "gray", alpha = 0.5) +
geom_vline(data = filter(cat_select_prop, cond == "GEA"),
color = "gray", xintercept = mean(prop_cats_obs),
linetype = "dashed") +
geom_point(size = 2, shape = 1) +
xlab("Proportion of Worse Performing\nCategories Selected") +
ylab("Final Test Accuracy") +
scale_x_continuous(breaks = seq(0,1,0.1), limits = c(0, 1)) +
scale_y_continuous(breaks = seq(0,1,0.1), limits = c(0, 1)) +
coord_equal() +
facet_wrap(~ cond, labeller = labeller(cond = cond_labels)) +
theme_pubr(base_size = 20)
View(cat_select_prop_stats)
load("cat_select_prop.Rdata")
View(cat_select_prop)
ggplot(data = filter(cat_select_prop, cond != "GEA"),
mapping = aes(x = prop_cats_obs, y = Prcorr)) +
geom_smooth(method = "lm", se = F, color = "gray", alpha = 0.5) +
geom_vline(color = "gray", xintercept = with(cat_select_prop,
mean(prop_cats_obs[cond == "GEA"])),
linetype = "dashed") +
geom_point(size = 2, shape = 1) +
xlab("Proportion of Worse Performing\nCategories Selected") +
ylab("Final Test Accuracy") +
scale_x_continuous(breaks = seq(0,1,0.1), limits = c(0, 1)) +
scale_y_continuous(breaks = seq(0,1,0.1), limits = c(0, 1)) +
coord_equal() +
facet_wrap(~ cond, labeller = labeller(cond = cond_labels)) +
theme_pubr(base_size = 20)
ggplot(data = filter(cat_select_prop, cond != "GEA"),
mapping = aes(x = prop_cats_obs, y = Prcorr)) +
geom_smooth(method = "lm", se = F, color = "gray", alpha = 0.5) +
geom_vline(color = "gray", xintercept = with(cat_select_prop,
mean(prop_cats_ideal[cond == "GEA"])),
linetype = "dashed") +
geom_point(size = 2, shape = 1) +
xlab("Proportion of Worse Performing\nCategories Selected") +
ylab("Final Test Accuracy") +
scale_x_continuous(breaks = seq(0,1,0.1), limits = c(0, 1)) +
scale_y_continuous(breaks = seq(0,1,0.1), limits = c(0, 1)) +
coord_equal() +
facet_wrap(~ cond, labeller = labeller(cond = cond_labels)) +
theme_pubr(base_size = 20)
cond_labels <- c("CE" = "Choose\nExample", "CEA" = "Choose\nExample Adaptive")
p <- ggplot(data = filter(cat_select_prop, cond != "GEA"),
mapping = aes(x = prop_cats_obs, y = Prcorr)) +
geom_smooth(method = "lm", se = F, color = "gray", alpha = 0.5) +
geom_vline(color = "gray", xintercept = with(cat_select_prop,
mean(prop_cats_ideal[cond == "GEA"])),
linetype = "dashed") +
geom_point(size = 2, shape = 1) +
xlab("Proportion of Worse Performing\nCategories Selected") +
ylab("Final Test Accuracy") +
scale_x_continuous(breaks = seq(0,1,0.1), limits = c(0, 1)) +
scale_y_continuous(breaks = seq(0,1,0.1), limits = c(0, 1)) +
coord_equal() +
facet_wrap(~ cond, labeller = labeller(cond = cond_labels)) +
theme_pubr(base_size = 20)
with(filter(cat_select_prop, cond == "CE"),
cor.test(prop_cats_obs, Prcorr))
with(filter(cat_select_prop, cond == "CEA"),
cor.test(prop_cats_obs, Prcorr))
ggsave(filename = "figure/PropDiffvsPrC.png", p, width = 16, height = 8)
library(tidyverse)
library(ggridges)
library(ggpubr)
# ---- Load the Data ----
setwd("../data_expt2")
# survey_file <- dir(pattern = "survey_data.csv")
files <- dir(pattern = "LearnStrategy.*\\.csv$")
data <- do.call(bind_rows, lapply(files, read.csv, nrows = 290)) #skip = 1, nrows = 289
grid_table <- do.call(bind_rows, lapply(files, read.csv, header = F,skip = 292, nrows = 48)) %>%
select(c(1:2,18:21)) %>%
setNames(c("subj","cond","cat","token","row","col"))
# survey_data1 <- read.csv("survey_data1.csv")
# survey_data2 <- read.csv("survey_data2.csv")
setwd("../data analysis_expt2")
# setwd("../data_expt2/pilot")
# survey_file <- dir(pattern = "survey_data.csv")
# files_pilot <- dir(pattern = "LearnStrategy.*\\.csv$")
# data_pilot <- do.call(bind_rows, lapply(files_pilot, read.csv, skip = 1, nrows = 289))
# # survey_data1 <- read.csv("survey_data1.csv")
# # survey_data2 <- read.csv("survey_data2.csv")
# setwd("../../data analysis_expt2")
# survey_data_cleaned1 <- survey_data1 %>%
#                         select(subj,cond,score)
# survey_data_cleaned2 <- select(survey_data2, participant, condition, Q1, SC0) %>%
#                        rename(subj = participant, cond = condition, score = SC0, strategy = Q1) %>%
#                        filter(!is.na(subj) & !is.na(score)) %>%
#                        mutate(subj = subj + max(survey_data_cleaned1$subj)) %>%
#                        mutate(strategy = lapply(str_split(strategy, ","), function(x) {
#                               if (length(x) == 1 && x == "") numeric(0) else as.numeric(x)
#                               })
#                               )
# survey_data_cleaned <- full_join(survey_data_cleaned1,survey_data_cleaned2,by = join_by(subj, cond)) %>%
#                        mutate(score = coalesce(score.x,score.y),.keep = "unused")
# data_pilot_cleaned <- select(data_pilot,participant,condition,block, phase, trial, cat, token, row, col, resp, corr, t_select, t_resp) %>%
#                       rename(subj = participant,cond = condition) %>%
#                       filter(!is.na(trial) & !is.na(subj)) %>%
#                       mutate(subj = as.character(subj),
#                              cond = paste0('sona_',cond),
#                              resp = lead(resp)) #data correction
data <- select(data,participant,condition,block, phase, trial, cat, token, cat_rec, token_rec, row, col, resp, corr, t_select, t_resp) %>%
rename(subj = participant,cond = condition) %>%
filter(!is.na(trial) & !is.na(subj))
# mutate(dataset_cond = paste0('prolific_',cond))
# bind_rows(data_pilot_cleaned)
# ---- data cleaning ----------------------------------------------
data$phase = factor(data$phase,labels = c("train","test"))
data$cat = factor(data$cat,labels = c("Andesite", "Basalt", "Diorite", "Gabbro", "Obsidian", "Pegmatite", "Peridotite", "Pumice"))
data$resp = factor(data$resp,labels = c("Andesite", "Basalt", "Diorite", "Gabbro", "Obsidian", "Pegmatite", "Peridotite", "Pumice"))
data$cat_rec = factor(data$cat_rec,labels = c("Andesite", "Basalt", "Diorite", "Gabbro", "Obsidian", "Pegmatite", "Peridotite", "Pumice"))
data$cond = fct_recode(data$cond, "GEE" = "TCN", "GEA" = "TCR", "CE" = "SCN", "CEA" = "SCR")
# dataset_cond_levels = sprintf("%s_%s",rep("prolific",each=4),c("TCN","TCR","SCN","SCR"))
# data$dataset_cond = factor(data$dataset_cond,levels = dataset_cond_levels)
# data <- data %>%
#         separate(dataset_cond, c("dataset","cond"), sep = "_") %>%
#         mutate(cond = factor(cond, levels = c("TCN","TCR","SCN","SCR")))
#-----------------------------------------------------------------------------------
# saveRDS(data,"prolific data.RDS")
data <- readRDS("prolific data.RDS")
# valid_subj_accu_df <- data %>%
#                       filter(phase == "test", block %in% 7:9) %>%
#                       group_by(cond,subj) %>%
#                       summarize(Pr_corr_test = mean(corr == 1)) %>%
#                       group_by(cond) %>%
#                       filter(percent_rank(Pr_corr_test) > .15) %>%
#                       ungroup()
#
# data_cleaned <- data %>%
#                 semi_join(valid_subj_accu_df,by = "subj")
#---------------------------------------------------------
# test learning curves
learning_curve_df <- data %>%
filter(phase == "test") %>%
group_by(cond,subj,block) %>%
summarize(Pr_corr = mean(corr)) %>%
group_by(cond,block) %>%
summarize(Prcorr_mean = mean(Pr_corr),
# Prcorr_ci = list({
# boot_samples <- boot(Pr_corr,
#     function(x,i){mean(x[i])},
#     R=5000, ncpus=8)
# boot.ci(boot_samples, type = "basic")$basic[4:5]}
# ),
N_subj = n_distinct(subj)) %>%
# rowwise() %>%
# mutate(Prcorr_ci_lower = Prcorr_ci[1],
#        Prcorr_ci_upper = Prcorr_ci[2]) %>%
ungroup()
cond_labels <- c("GEE" = "Given Example\nEven\n", "CE" = "Choose Example\n",
"GEA" = "Given Example\nAdapted\n", "CEA" = "Choose Example\nAdaptive\n")
p <- ggplot(data = learning_curve_df,
aes(y=Prcorr_mean, x=block, color = cond)) +
geom_line(aes(group = cond),linewidth = .7) +
geom_point(aes(shape = cond),size = 3) +
# geom_errorbar(aes(ymin = Prcorr_ci_lower, ymax = Prcorr_ci_upper), width = .1) +
scale_color_manual(values = c("GEE" = "red", "GEA" = "gray", "CE" = "red","CEA" = "gray")) +
scale_shape_manual(name = "Condition", values = c(1,2,3,4), labels = cond_labels) +
scale_linetype_manual(name = "Condition", values = c("solid","dashed","dotted","dotdash"), labels = cond_labels) +
# facet_wrap(~ dataset) +
xlab("Block") +
ylab ("Mean Test Accuracy") +
# ggtitle(paste0("N_subj_TCN = ",N_subj_TCN,", ","N_subj_TCR = ", N_subj_TCR,", ",
#                "N_subj_SCN = ", N_subj_SCN,", ","N_subj_SCR = ", N_subj_SCR)) +
scale_x_continuous(breaks = 1:9) +
scale_y_continuous(limits = c(0.4,0.9)) +
theme_pubr(base_size = 36, legend = "right") +
theme(legend.text = element_text(hjust = 0.5),
legend.position = "none")
# guides(color = "none")
ggsave(paste0('test learning curves_demo',".jpg"),plot = p ,path = "figure",width = 12, height = 9)
