ond_labels <- c("GEE" = "Given Example\nEven", "CE" = "Choose Example")
version_labels <- c("before" = "Expt 1a", "after" = "Expt 1b")
cond_labels <- c("GEE" = "Given Example\nEven", "CE" = "Choose Example")
version_labels <- c("before" = "Expt 1a", "after" = "Expt 1b")
ggplot(training_accu_cat_df,
aes(x = cat, y = prop_cat, fill = cond)) +
geom_col(position = "dodge") +
scale_fill_manual(name = "Condition", labels = cond_labels) +
facet_grid(~ version, labeller = labeller(version = version_labels)) +
xlab("Category") +
ylab("Selection Proportion") +
coord_flip() +
theme_pubr(base_size = 25, legend = "right")
ggplot(training_accu_cat_df,
aes(x = cat, y = prop_cat, fill = cond)) +
geom_col(position = "dodge") +
scale_fill_manual(name = "Condition", values = c(1,2),labels = cond_labels) +
facet_grid(~ version, labeller = labeller(version = version_labels)) +
xlab("Category") +
ylab("Selection Proportion") +
coord_flip() +
theme_pubr(base_size = 25, legend = "right")
ggplot(training_accu_cat_df,
aes(x = cat, y = prop_cat, fill = cond)) +
geom_col(position = "dodge") +
scale_fill_manual(name = "Condition", values = c(1,2),labels = cond_labels) +
facet_grid(~ version, labeller = labeller(version = version_labels)) +
xlab("Category") +
ylab("Selection Proportion") +
coord_flip() +
theme_pubr(base_size = 25, legend = "top")
cond_labels <- c("GEE" = "Given Example Even", "CE" = "Choose Example")
version_labels <- c("before" = "Expt 1a", "after" = "Expt 1b")
ggplot(training_accu_cat_df,
aes(x = cat, y = prop_cat, fill = cond)) +
geom_col(position = "dodge") +
scale_fill_manual(name = "Condition", values = c(1,2),labels = cond_labels) +
facet_grid(~ version, labeller = labeller(version = version_labels)) +
xlab("Category") +
ylab("Selection Proportion") +
coord_flip() +
theme_pubr(base_size = 25, legend = "top")
ggplot(training_accu_cat_df,
aes(x = cat, y = prop_cat, fill = cond)) +
geom_col(position = "dodge") +
scale_fill_manual(name = "Condition", values = c("#F8766D","#619CFF"),labels = cond_labels) +
facet_grid(~ version, labeller = labeller(version = version_labels)) +
xlab("Category") +
ylab("Proportion of Category Examples Selected") +
coord_flip() +
theme_pubr(base_size = 25, legend = "top")
ggplot(training_accu_cat_df,
aes(x = cat, y = prop_cat, fill = cond)) +
geom_col(position = "dodge") +
scale_fill_manual(name = "Condition", values = c("#F8766D","#00BFC4"),labels = cond_labels) +
facet_grid(~ version, labeller = labeller(version = version_labels)) +
xlab("Category") +
ylab("Proportion of Category Examples Selected") +
coord_flip() +
theme_pubr(base_size = 25, legend = "top")
cond_labels <- c("GEE" = "Given Example Even", "CE" = "Choose Example")
version_labels <- c("before" = "Expt 1a", "after" = "Expt 1b")
# selection proportions across categories for training
training_accu_cat_df <- data %>%
filter(phase == "train") %>%
group_by(version,cond) %>%
mutate(n_trial = n()) %>%
group_by(version,cond,cat) %>%
summarize(prop_cat = n()/n_trial[1]) %>%
ungroup()
p <- ggplot(training_accu_cat_df,
aes(x = cat, y = prop_cat, fill = cond)) +
geom_col(position = "dodge") +
scale_fill_manual(name = "Condition", values = c("#F8766D","#00BFC4"),labels = cond_labels) +
facet_grid(~ version, labeller = labeller(version = version_labels)) +
xlab("Category") +
ylab("Proportion of Category Examples Selected") +
coord_flip() +
theme_pubr(base_size = 25, legend = "bottom")
ggsave(paste('cat selection prop',".jpg"),plot = p ,path = "figure",width = 12, height = 6)
training_accu_cat_df <- data %>%
filter(phase == "test") %>%
group_by(version,cond, cat) %>%
summarize(Pr_corr = mean(corr)) %>%
ungroup()
training_accu_cat_df <- data %>%
filter(phase == "test") %>%
group_by(version,cond, cat) %>%
summarize(Pr_corr = mean(corr)) %>%
ungroup()
training_accu_cat_df <- data %>%
filter(phase == "test", block_set == 3) %>%
group_by(version,cond, cat) %>%
summarize(Pr_corr = mean(corr)) %>%
ungroup()
ggplot(training_accu_cat_df,
aes(x = cat, y = prop_cat, group = cond)) +
geom_col(position = "dodge") +
scale_fill_manual(name = "Condition", values = c("#F8766D","#00BFC4"),labels = cond_labels) +
facet_grid(~ version, labeller = labeller(version = version_labels)) +
xlab("Category") +
ylab("Proportion of Category Examples Selected") +
coord_flip() +
theme_pubr(base_size = 25, legend = "bottom")
training_accu_cat_df <- data %>%
filter(phase == "test", block_set == 3) %>%
group_by(version,cond, cat) %>%
summarize(Pr_corr = mean(corr)) %>%
ungroup()
p <- ggplot(training_accu_cat_df,
aes(x = cat, y = Pr_corr, group = cond)) +
geom_col(position = "dodge") +
scale_fill_manual(name = "Condition", values = c("#F8766D","#00BFC4"),labels = cond_labels) +
facet_grid(~ version, labeller = labeller(version = version_labels)) +
xlab("Category") +
ylab("Proportion of Category Examples Selected") +
coord_flip() +
theme_pubr(base_size = 25, legend = "bottom")
ggsave(paste('cat selection prop',".jpg"),plot = p ,path = "figure",width = 12, height = 6)
cond_labels <- c("GEE" = "Given Example Even", "CE" = "Choose Example")
version_labels <- c("before" = "Expt 1a", "after" = "Expt 1b")
# selection proportions across categories for training
training_prop_select_df <- data %>%
filter(phase == "train") %>%
group_by(version,cond) %>%
mutate(n_trial = n()) %>%
group_by(version,cond,cat) %>%
summarize(prop_cat = n()/n_trial[1]) %>%
ungroup()
p <- ggplot(training_prop_select_df,
aes(x = cat, y = prop_cat, fill = cond)) +
geom_col(position = "dodge") +
scale_fill_manual(name = "Condition", values = c("#F8766D","#00BFC4"),labels = cond_labels) +
facet_grid(~ version, labeller = labeller(version = version_labels)) +
xlab("Category") +
ylab("Proportion of Category Examples Selected") +
coord_flip() +
theme_pubr(base_size = 25, legend = "bottom")
ggsave(paste('cat selection prop',".jpg"),plot = p ,path = "figure",width = 12, height = 6)
# final test accuracies across categories
training_accu_cat_df <- data %>%
filter(phase == "test", block_set == 3) %>%
group_by(version,cond, cat) %>%
summarize(Pr_corr = mean(corr)) %>%
ungroup()
p <- ggplot(training_accu_cat_df,
aes(x = cat, y = Pr_corr, fill = cond)) +
geom_col(position = "dodge") +
scale_fill_manual(name = "Condition", values = c("#F8766D","#00BFC4"),labels = cond_labels) +
facet_grid(~ version, labeller = labeller(version = version_labels)) +
xlab("Category") +
ylab("Proportion of Category Examples Selected") +
coord_flip() +
theme_pubr(base_size = 25, legend = "bottom")
ggsave(paste('final test accu cat',".jpg"),plot = p ,path = "figure",width = 12, height = 6)
training_prop_select_df <- data %>%
filter(phase == "train") %>%
group_by(version,cond) %>%
mutate(n_trial = n()) %>%
group_by(version,cond,cat) %>%
summarize(prop_cat = n()/n_trial[1]) %>%
ungroup()
p <- ggplot(training_prop_select_df,
aes(x = cat, y = prop_cat, fill = cond)) +
geom_col(position = "dodge") +
scale_fill_manual(name = "Condition", values = c("#F8766D","#00BFC4"),labels = cond_labels) +
facet_grid(~ version, labeller = labeller(version = version_labels)) +
xlab("Category") +
ylab("Proportion of Category Examples Selected") +
coord_flip() +
theme_pubr(base_size = 23, legend = "bottom")
ggsave(paste('cat selection prop',".jpg"),plot = p ,path = "figure",width = 12, height = 6)
# final test accuracies across categories
training_accu_cat_df <- data %>%
filter(phase == "test", block_set == 3) %>%
group_by(version,cond, cat) %>%
summarize(Pr_corr = mean(corr)) %>%
ungroup()
p <- ggplot(training_accu_cat_df,
aes(x = cat, y = Pr_corr, fill = cond)) +
geom_col(position = "dodge") +
scale_fill_manual(name = "Condition", values = c("#F8766D","#00BFC4"),labels = cond_labels) +
facet_grid(~ version, labeller = labeller(version = version_labels)) +
xlab("Category") +
ylab("Proportion of Category Examples Selected") +
coord_flip() +
theme_pubr(base_size = 23, legend = "bottom")
ggsave(paste('final test accu cat',".jpg"),plot = p ,path = "figure",width = 12, height = 6)
training_prop_select_df <- data %>%
filter(phase == "train") %>%
group_by(version,cond) %>%
mutate(n_trial = n()) %>%
group_by(version,cond,cat) %>%
summarize(prop_cat = n()/n_trial[1]) %>%
ungroup()
p <- ggplot(training_prop_select_df,
aes(x = cat, y = prop_cat, fill = cond)) +
geom_col(position = "dodge") +
scale_fill_manual(name = "Condition", values = c("#F8766D","#00BFC4"),labels = cond_labels) +
facet_grid(~ version, labeller = labeller(version = version_labels)) +
xlab("Category") +
ylab("Proportion of Category Examples Selected") +
coord_flip() +
theme_pubr(base_size = 20, legend = "bottom")
ggsave(paste('cat selection prop',".jpg"),plot = p ,path = "figure",width = 12, height = 6)
# final test accuracies across categories
training_accu_cat_df <- data %>%
filter(phase == "test", block_set == 3) %>%
group_by(version,cond, cat) %>%
summarize(Pr_corr = mean(corr)) %>%
ungroup()
p <- ggplot(training_accu_cat_df,
aes(x = cat, y = Pr_corr, fill = cond)) +
geom_col(position = "dodge") +
scale_fill_manual(name = "Condition", values = c("#F8766D","#00BFC4"),labels = cond_labels) +
facet_grid(~ version, labeller = labeller(version = version_labels)) +
xlab("Category") +
ylab("Proportion of Category Examples Selected") +
coord_flip() +
theme_pubr(base_size = 20, legend = "bottom")
ggsave(paste('final test accu cat',".jpg"),plot = p ,path = "figure",width = 12, height = 6)
training_prop_select_df <- data %>%
filter(phase == "train", block_set == 2) %>%
group_by(version,cond) %>%
mutate(n_trial = n()) %>%
group_by(version,cond,cat) %>%
summarize(prop_cat = n()/n_trial[1]) %>%
ungroup()
ggplot(training_prop_select_df,
aes(x = cat, y = prop_cat, fill = cond)) +
geom_col(position = "dodge") +
scale_fill_manual(name = "Condition", values = c("#F8766D","#00BFC4"),labels = cond_labels) +
facet_grid(~ version, labeller = labeller(version = version_labels)) +
xlab("Category") +
ylab("Proportion of Category Examples Selected") +
coord_flip() +
theme_pubr(base_size = 20, legend = "bottom")
# load libraries and data sets
library(tidyverse)
library(ggpubr)
library(ggridges)
source("../utils/performance-metrics.R")
data <- readRDS("data.RDS")
# ---- data cleaning ----------------------------------------------
data <- data %>%
mutate(cond = factor(cond, labels = c("GEE","CE"))) %>%
# filter(cond == "CE") %>%
mutate(block_set = case_when(
block %in% 1:3 ~ 1,
block %in% 4:6 ~ 2,
block %in% 7:9 ~ 3),
block_set = factor(block_set))
cat_levels = c("Andesite","Basalt","Diorite","Gabbro","Obsidian","Pegmatite","Peridotite","Pumice")
#---------------------------------------------------------
# proportions of diff cat selected defined on subj level
cat_prcorr <- data %>%
filter(phase == "test") %>%
group_by(version, cond, subj, cat) %>%
summarize(Prcorr_mean = mean(corr)) %>%
group_by(version, cond, subj) %>%
mutate(
Prcorr_jitter = Prcorr_mean + runif(n(), 0, 1e-8),
rank_cat = min_rank(Prcorr_jitter)
) %>%
select(version, cond, subj, cat, rank_cat)
prop_select_subj <- data %>%
left_join(cat_prcorr, by = c("version", "cond", "subj", "cat")) %>%
group_by(version, cond, subj) %>%
summarize(
n_rank_cat = n_distinct(rank_cat),
n_trial_train = sum(phase == "train"),
n_trial_train_diff = sum(phase == "train" & rank_cat <= 3),
prop_select_diff = n_trial_train_diff / n_trial_train,
PrCorr_final = mean(corr[phase == "test" & block_set == 3])
)
prop_subj <- prop_select_subj %>%
filter(cond == "CE") %>%
group_by(version) %>%
summarize(prop_subj_diff = sum(prop_select_diff > 0.375)/n())
with(filter(prop_select_subj, version == "before"),
t.test(prop_select_diff[cond == "CE"], prop_select_diff[cond == "GEE"])
)
library(tidyverse)
library(gridExtra)
library(magrittr)
library(ggpubr)
source("../utils/performance-metrics.R")
# # ---- Load the Data ----
# setwd("../data")
# files = dir(pattern = ".txt$") #revised.txt$
# data = do.call(bind_rows, lapply(files, read.table, fill = T))
# data[is.na(data)] <- NA
# nrows = sapply(files, function(f) nrow(read.table(f, fill = T)))
# setwd("../data analysis")
#
# # ---- define the data types ----
# colnames(data) = c("cond","subj","block","phase","trial","cat","token","resp","corr","rt_decision","rt_selection")
# file_version_idx = ifelse(grepl("revised",files),2,1)
# data$version = factor(rep(file_version_idx,each = nrows),labels = c("before","after"))
# data$cond = factor(data$cond,labels = c("random","student_chosen"))
# data$subj = as.integer(data$subj)
# data$block = as.integer(data$block)
# data$phase = factor(data$phase,labels = c("train","test"))
# data$trial = as.integer(data$trial)
# data$cat = factor(data$cat,labels = c("Andesite", "Basalt", "Diorite", "Gabbro", "Obsidian", "Pegmatite", "Peridotite", "Pumice"))
# data$resp = factor(data$resp,labels = c("Andesite", "Basalt", "Diorite", "Gabbro", "Obsidian", "Pegmatite", "Peridotite", "Pumice"))
# data$corr = as.integer(data$corr)
#
# #remove outlier
# data = filter(data,!(cond == "student_chosen" & subj %in% c(81,118)))
data <- readRDS("data.RDS")
#---------------------------------------------------------
# test learning curves
learning_curve_df <- data %>%
filter(phase == "test", version == "before") %>% #version == "after"  change version for different data sets
mutate(cond = factor(cond, labels = c("GEE", "CE"))) %>%
group_by(version,cond,subj,block) %>%
summarize(Pr_corr_sub = mean(corr)) %>%
ungroup() %>%
group_by(version,cond,block) %>%
summarize(Pr_corr_mean = mean(Pr_corr_sub),
N_subj = n_distinct(subj))
N_subj_R <- unique(learning_curve_df$N_subj[learning_curve_df$cond == "GEE"])
N_subj_SC <- unique(learning_curve_df$N_subj[learning_curve_df$cond == "CE"])
cond_labels <- c("GEE" = "Given Example\nEven", "CE" = "Choose Example")
p <- ggplot(data = learning_curve_df,
aes(y=Pr_corr_mean, x=block)) +
geom_line(aes(linetype = cond),linewidth = .7) +
geom_point(aes(shape = cond),size = 3) +
# geom_errorbar(aes(ymin = Pr_corr - SEM, ymax = Pr_corr + SEM), width = .1) +
scale_shape_manual(name = "Condition", values = c(1,2,3), labels = cond_labels) +
scale_linetype_manual(name = "Condition", values = c("solid","dashed","dotted"), labels = cond_labels) + #only two values are used
xlab("Block") +
ylab ("Mean Test Accuracy") +
# ggtitle(paste0("N_subj_R = ",N_subj_R,", ","N_subj_SC = ", N_subj_SC)) +
scale_x_continuous(breaks = 1:10) +
scale_y_continuous(limits = c(0,1)) +
theme_pubr(base_size = 25, legend = "right") +
theme(legend.text = element_text(hjust = 0.5))
ggsave(paste('test learning curve before',".jpg"),plot = p ,path = "figure",width = 9, height = 6)
#---------------------------------------------------------
cond_labels <- c("GEE" = "Given Example Even", "CE" = "Choose Example")
version_labels <- c("before" = "Expt 1a", "after" = "Expt 1b")
# selection proportions across categories for training
training_prop_select_df <- data %>%
filter(phase == "train") %>%
group_by(version,cond) %>%
mutate(n_trial = n()) %>%
group_by(version,cond,cat) %>%
summarize(prop_cat = n()/n_trial[1]) %>%
ungroup()
p <- ggplot(training_prop_select_df,
aes(x = cat, y = prop_cat, fill = cond)) +
geom_col(position = "dodge") +
scale_fill_manual(name = "Condition", values = c("#F8766D","#00BFC4"),labels = cond_labels) +
facet_grid(~ version, labeller = labeller(version = version_labels)) +
xlab("Category") +
ylab("Proportion of Category Examples Selected") +
coord_flip() +
theme_pubr(base_size = 20, legend = "bottom")
ggsave(paste('cat selection prop',".jpg"),plot = p ,path = "figure",width = 12, height = 6)
# final test accuracies across categories
training_accu_cat_df <- data %>%
filter(phase == "test", block_set == 3) %>%
group_by(version,cond, cat) %>%
summarize(Pr_corr = mean(corr)) %>%
ungroup()
library(tidyverse)
library(gridExtra)
library(magrittr)
library(ggpubr)
source("../utils/performance-metrics.R")
# # ---- Load the Data ----
# setwd("../data")
# files = dir(pattern = ".txt$") #revised.txt$
# data = do.call(bind_rows, lapply(files, read.table, fill = T))
# data[is.na(data)] <- NA
# nrows = sapply(files, function(f) nrow(read.table(f, fill = T)))
# setwd("../data analysis")
#
# # ---- define the data types ----
# colnames(data) = c("cond","subj","block","phase","trial","cat","token","resp","corr","rt_decision","rt_selection")
# file_version_idx = ifelse(grepl("revised",files),2,1)
# data$version = factor(rep(file_version_idx,each = nrows),labels = c("before","after"))
# data$cond = factor(data$cond,labels = c("random","student_chosen"))
# data$subj = as.integer(data$subj)
# data$block = as.integer(data$block)
# data$phase = factor(data$phase,labels = c("train","test"))
# data$trial = as.integer(data$trial)
# data$cat = factor(data$cat,labels = c("Andesite", "Basalt", "Diorite", "Gabbro", "Obsidian", "Pegmatite", "Peridotite", "Pumice"))
# data$resp = factor(data$resp,labels = c("Andesite", "Basalt", "Diorite", "Gabbro", "Obsidian", "Pegmatite", "Peridotite", "Pumice"))
# data$corr = as.integer(data$corr)
#
# #remove outlier
# data = filter(data,!(cond == "student_chosen" & subj %in% c(81,118)))
data <- readRDS("data.RDS")
View(data)
cond_labels <- c("GEE" = "Given Example Even", "CE" = "Choose Example")
version_labels <- c("before" = "Expt 1a", "after" = "Expt 1b")
# selection proportions across categories for training
training_prop_select_df <- data %>%
filter(phase == "train") %>%
group_by(version,cond) %>%
mutate(n_trial = n()) %>%
group_by(version,cond,cat) %>%
summarize(prop_cat = n()/n_trial[1]) %>%
ungroup()
p <- ggplot(training_prop_select_df,
aes(x = cat, y = prop_cat, fill = cond)) +
geom_col(position = "dodge") +
scale_fill_manual(name = "Condition", values = c("#F8766D","#00BFC4"),labels = cond_labels) +
facet_grid(~ version, labeller = labeller(version = version_labels)) +
xlab("Category") +
ylab("Proportion of Category Examples Selected") +
coord_flip() +
theme_pubr(base_size = 20, legend = "bottom")
ggsave(paste('cat selection prop',".jpg"),plot = p ,path = "figure",width = 12, height = 6)
# final test accuracies across categories
training_accu_cat_df <- data %>%
filter(phase == "test", block %in% 7:9) %>%
group_by(version,cond, cat) %>%
summarize(Pr_corr = mean(corr)) %>%
ungroup()
p <- ggplot(training_accu_cat_df,
aes(x = cat, y = Pr_corr, fill = cond)) +
geom_col(position = "dodge") +
scale_fill_manual(name = "Condition", values = c("#F8766D","#00BFC4"),labels = cond_labels) +
facet_grid(~ version, labeller = labeller(version = version_labels)) +
xlab("Category") +
ylab("Mean Classification Accuracy over Test Blocks 7-9") +
coord_flip() +
theme_pubr(base_size = 20, legend = "bottom")
ggsave(paste('final test accu cat',".jpg"),plot = p ,path = "figure",width = 12, height = 6)
setwd("C:/Users/super/Desktop/lab/LearnStrategy/data analysis_expt2/bayesian statistical tests")
graphics.off()
rm(list=ls())
set.seed(47405)
# Libraries
# library(pkgbuild)
library(tidyverse)
library(brms)
library(gridExtra)
library(ggpubr)
library(ggridges)
library(parallel)
source("../../utils/beta-binom.R")
# Load experimental data
epsilon <- 1e-6
df <- readRDS("../prolific data.RDS") %>%
filter(phase == "test") %>%
mutate(subj = factor(subj),
cond = recode_factor(cond, "random" = "GEE" , "student_chosen" = "CE"),
block_set = case_match(block,
1:3 ~ 1,4:6 ~ 2,7:9 ~ 3)
) %>%
group_by(cond, subj, block_set, cat) %>%
summarize(N_trials = n(),
N_corr = sum(corr)
) %>%
ungroup() %>%
mutate(block_set_fct = factor(block_set, labels = c("1-3", "4-6", "7-9")))
# load brms fit objects
load(file = "brms_fit_objects.Rdata")
fit = fit_object[[3]]
expose_functions(fit_object[[1]], vectorize = TRUE)
summary(fit)
summary(fit)
posterior_draw_df <- t(posterior_predict(fit)) %>% #posterior_epred
as_tibble() %>%
setNames(paste0("sample", 1:ncol(.)))
posterior_samples_quartile_contrast <- fit$data %>%
bind_cols(posterior_draw_df) %>%
pivot_longer(cols = starts_with("sample"), names_prefix = "sample",
names_to = "sample", values_to = "N_corr_pred") %>%
mutate(sample = as.integer(sample)) %>%
group_by(cond,subj,sample) %>%
summarize(PrCorr_obs = sum(N_corr)/sum(N_trials),
PrCorr_pred = sum(N_corr_pred)/sum(N_trials))%>%
group_by(cond,sample) %>%
reframe(
quartile = c("lq", "m", "uq"),
Pr_corr_pred = quantile(PrCorr_pred, probs = c(0.25, 0.5, 0.75)),
Pr_corr_obs = quantile(PrCorr_obs, probs = c(0.25, 0.5, 0.75))
)  %>%
group_by(sample, quartile) %>%
summarize(Pr_corr_pred_CEvsGEE = Pr_corr_pred[cond == "CE"] - Pr_corr_pred[cond == "GEE"],
Pr_corr_obs_CEvsGEE = Pr_corr_obs[cond == "CE"] - Pr_corr_obs[cond == "GEE"],
Pr_corr_pred_GEAvsGEE = Pr_corr_pred[cond == "GEA"] - Pr_corr_pred[cond == "GEE"],
Pr_corr_obs_GEAvsGEE = Pr_corr_obs[cond == "GEA"] - Pr_corr_obs[cond == "GEE"],
Pr_corr_pred_CEAvsCE = Pr_corr_pred[cond == "CEA"] - Pr_corr_pred[cond == "CE"],
Pr_corr_obs_CEAvsCE = Pr_corr_obs[cond == "CEA"] - Pr_corr_obs[cond == "CE"]) %>%
ungroup() %>%
pivot_longer(cols = starts_with("Pr_corr"),
names_to = c(".value", "contrast"),
names_pattern = "(Pr_corr_pred|Pr_corr_obs)_(.*)")
p <- ggplot(posterior_samples_quartile_contrast,
aes(x = Pr_corr_pred, y = quartile, fill = factor(stat(quantile)))
) +
geom_density_ridges_gradient(scale = 0.8,
calc_ecdf = TRUE, quantiles = c(0.025, 0.975)) +
geom_vline(xintercept = 0, linetype = "dashed") +
scale_fill_manual(values = c("lightgray","darkgray", "lightgray")) +
guides(fill = "none") +
scale_x_continuous(name = "Difference in posterior distribution of final test accuracy",
breaks = seq(-0.2, 0.2, 0.05)) +
scale_y_discrete(name = "", labels = c("lower quartile", "median", "upper quartile"),
expand = expansion(mult = c(0, 0.05))) +
facet_wrap(~contrast, nrow = 2,
labeller = as_labeller(function(labels) gsub("vs", " - ", labels))) +
theme_pubr(base_size = 20) +
theme(axis.text.x = element_text(angle = 315, vjust = -1, hjust = 1))
ggsave("posterior distribution in final accuracy.png", plot = p, path = "figure/cond_contrast", width = 12, height = 8)
