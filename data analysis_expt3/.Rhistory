summarize(Pr_corr_sub = mean(corr)) %>%
ungroup() %>%
group_by(version,cond,block) %>%
summarize(Pr_corr_mean = mean(Pr_corr_sub),
N_subj = n_distinct(subj))
# N_subj_R <- unique(learning_curve_df$N_subj[learning_curve_df$cond == "GEE"])
# N_subj_SC <- unique(learning_curve_df$N_subj[learning_curve_df$cond == "CE"])
cond_labels <- c("GEE" = "Given Example Even", "CE" = "Choose Example")
version_labels <- c("before" = "Expt 1a", "after" = "Expt 1b")
p <- ggplot(data = filter(learning_curve_df, version == "before"),
aes(y=Pr_corr_mean, x=block)) +
geom_line(aes(linetype = cond),linewidth = .7) +
geom_point(aes(shape = cond),size = 3) +
# geom_errorbar(aes(ymin = Pr_corr - SEM, ymax = Pr_corr + SEM), width = .1) +
scale_shape_manual(name = "Condition", values = c(1,2,3), labels = cond_labels) +
scale_linetype_manual(name = "Condition", values = c("solid","dashed","dotted"), labels = cond_labels) + #only two values are used
xlab("Block") +
ylab ("Mean Test Accuracy") +
# facet_grid(~version, labeller = labeller(version = version_labels)) +
# ggtitle(paste0("N_subj_R = ",N_subj_R,", ","N_subj_SC = ", N_subj_SC)) +
scale_x_continuous(breaks = 1:10) +
scale_y_continuous(limits = c(0,1)) +
theme_pubr(base_size = 20, legend = "right") +
theme(legend.text = element_text(hjust = 0.5),
legend.position = "none")
ggsave(paste('test learning curve before',".jpg"),plot = p ,path = "figure",width = 9, height = 6)
p <- ggplot(data = filter(learning_curve_df, version == "before"),
aes(y=Pr_corr_mean, x=block)) +
geom_line(aes(linetype = cond),linewidth = .7) +
geom_point(aes(shape = cond),size = 3) +
# geom_errorbar(aes(ymin = Pr_corr - SEM, ymax = Pr_corr + SEM), width = .1) +
scale_shape_manual(name = "Condition", values = c(1,2,3), labels = cond_labels) +
scale_linetype_manual(name = "Condition", values = c("solid","dashed","dotted"), labels = cond_labels) + #only two values are used
xlab("Block") +
ylab ("Mean Test Accuracy") +
# facet_grid(~version, labeller = labeller(version = version_labels)) +
# ggtitle(paste0("N_subj_R = ",N_subj_R,", ","N_subj_SC = ", N_subj_SC)) +
scale_x_continuous(breaks = 1:10) +
scale_y_continuous(limits = c(0,1)) +
theme_pubr(base_size = 30, legend = "right") +
theme(legend.text = element_text(hjust = 0.5),
legend.position = "none")
ggsave(paste('test learning curve before',".jpg"),plot = p ,path = "figure",width = 9, height = 6)
p <- ggplot(data = filter(learning_curve_df, version == "before"),
aes(y=Pr_corr_mean, x=block)) +
geom_line(aes(linetype = cond),linewidth = .7) +
geom_point(aes(shape = cond),size = 3) +
# geom_errorbar(aes(ymin = Pr_corr - SEM, ymax = Pr_corr + SEM), width = .1) +
scale_shape_manual(name = "Condition", values = c(1,2,3), labels = cond_labels) +
scale_linetype_manual(name = "Condition", values = c("solid","dashed","dotted"), labels = cond_labels) + #only two values are used
xlab("Block") +
ylab ("Mean Test Accuracy") +
# facet_grid(~version, labeller = labeller(version = version_labels)) +
# ggtitle(paste0("N_subj_R = ",N_subj_R,", ","N_subj_SC = ", N_subj_SC)) +
scale_x_continuous(breaks = 1:10) +
scale_y_continuous(limits = c(0,1)) +
theme_pubr(base_size = 25, legend = "right") +
theme(legend.text = element_text(hjust = 0.5),
legend.position = "none")
ggsave(paste('test learning curve before',".jpg"),plot = p ,path = "figure",width = 9, height = 9)
p <- ggplot(data = filter(learning_curve_df, version == "before"),
aes(y=Pr_corr_mean, x=block)) +
geom_line(aes(linetype = cond),linewidth = .7) +
geom_point(aes(shape = cond),size = 3) +
# geom_errorbar(aes(ymin = Pr_corr - SEM, ymax = Pr_corr + SEM), width = .1) +
scale_shape_manual(name = "Condition", values = c(1,2,3), labels = cond_labels) +
scale_linetype_manual(name = "Condition", values = c("solid","dashed","dotted"), labels = cond_labels) + #only two values are used
xlab("Block") +
ylab ("Mean Test Accuracy") +
# facet_grid(~version, labeller = labeller(version = version_labels)) +
# ggtitle(paste0("N_subj_R = ",N_subj_R,", ","N_subj_SC = ", N_subj_SC)) +
scale_x_continuous(breaks = 1:10) +
scale_y_continuous(limits = c(0,1)) +
theme_pubr(base_size = 30, legend = "right") +
theme(legend.text = element_text(hjust = 0.5),
legend.position = "none")
ggsave(paste('test learning curve before',".jpg"),plot = p ,path = "figure",width = 12, height = 9)
p <- ggplot(data = filter(learning_curve_df, version == "before"),
aes(y=Pr_corr_mean, x=block)) +
geom_line(aes(linetype = cond),linewidth = .7) +
geom_point(aes(shape = cond),size = 3) +
# geom_errorbar(aes(ymin = Pr_corr - SEM, ymax = Pr_corr + SEM), width = .1) +
scale_shape_manual(name = "Condition", values = c(1,2,3), labels = cond_labels) +
scale_linetype_manual(name = "Condition", values = c("solid","dashed","dotted"), labels = cond_labels) + #only two values are used
xlab("Block") +
ylab ("Mean Test Accuracy") +
# facet_grid(~version, labeller = labeller(version = version_labels)) +
# ggtitle(paste0("N_subj_R = ",N_subj_R,", ","N_subj_SC = ", N_subj_SC)) +
scale_x_continuous(breaks = 1:10) +
scale_y_continuous(limits = c(0,1)) +
theme_pubr(base_size = 36, legend = "right") +
theme(legend.text = element_text(hjust = 0.5),
legend.position = "none")
ggsave(paste('test learning curve before',".jpg"),plot = p ,path = "figure",width = 12, height = 9)
p <- ggplot(data = filter(learning_curve_df, version == "after"),
aes(y=Pr_corr_mean, x=block)) +
geom_line(aes(linetype = cond),linewidth = .7) +
geom_point(aes(shape = cond),size = 3) +
# geom_errorbar(aes(ymin = Pr_corr - SEM, ymax = Pr_corr + SEM), width = .1) +
scale_shape_manual(name = "Condition", values = c(1,2,3), labels = cond_labels) +
scale_linetype_manual(name = "Condition", values = c("solid","dashed","dotted"), labels = cond_labels) + #only two values are used
xlab("Block") +
ylab ("Mean Test Accuracy") +
# facet_grid(~version, labeller = labeller(version = version_labels)) +
# ggtitle(paste0("N_subj_R = ",N_subj_R,", ","N_subj_SC = ", N_subj_SC)) +
scale_x_continuous(breaks = 1:10) +
scale_y_continuous(limits = c(0,1)) +
theme_pubr(base_size = 36, legend = "right") +
theme(legend.text = element_text(hjust = 0.5),
legend.position = "none")
ggsave(paste('test learning curve after',".jpg"),plot = p ,path = "figure",width = 12, height = 9)
setwd("C:/Users/super/Desktop/lab/LearnStrategy/data analysis_expt2")
library(tidyverse)
library(ggridges)
library(ggpubr)
# ---- Load the Data ----
setwd("../data_expt2")
# survey_file <- dir(pattern = "survey_data.csv")
files <- dir(pattern = "LearnStrategy.*\\.csv$")
data <- do.call(bind_rows, lapply(files, read.csv, nrows = 290)) #skip = 1, nrows = 289
grid_table <- do.call(bind_rows, lapply(files, read.csv, header = F,skip = 292, nrows = 48)) %>%
select(c(1:2,18:21)) %>%
setNames(c("subj","cond","cat","token","row","col"))
# survey_data1 <- read.csv("survey_data1.csv")
# survey_data2 <- read.csv("survey_data2.csv")
setwd("../data analysis_expt2")
# setwd("../data_expt2/pilot")
# survey_file <- dir(pattern = "survey_data.csv")
# files_pilot <- dir(pattern = "LearnStrategy.*\\.csv$")
# data_pilot <- do.call(bind_rows, lapply(files_pilot, read.csv, skip = 1, nrows = 289))
# # survey_data1 <- read.csv("survey_data1.csv")
# # survey_data2 <- read.csv("survey_data2.csv")
# setwd("../../data analysis_expt2")
# survey_data_cleaned1 <- survey_data1 %>%
#                         select(subj,cond,score)
# survey_data_cleaned2 <- select(survey_data2, participant, condition, Q1, SC0) %>%
#                        rename(subj = participant, cond = condition, score = SC0, strategy = Q1) %>%
#                        filter(!is.na(subj) & !is.na(score)) %>%
#                        mutate(subj = subj + max(survey_data_cleaned1$subj)) %>%
#                        mutate(strategy = lapply(str_split(strategy, ","), function(x) {
#                               if (length(x) == 1 && x == "") numeric(0) else as.numeric(x)
#                               })
#                               )
# survey_data_cleaned <- full_join(survey_data_cleaned1,survey_data_cleaned2,by = join_by(subj, cond)) %>%
#                        mutate(score = coalesce(score.x,score.y),.keep = "unused")
# data_pilot_cleaned <- select(data_pilot,participant,condition,block, phase, trial, cat, token, row, col, resp, corr, t_select, t_resp) %>%
#                       rename(subj = participant,cond = condition) %>%
#                       filter(!is.na(trial) & !is.na(subj)) %>%
#                       mutate(subj = as.character(subj),
#                              cond = paste0('sona_',cond),
#                              resp = lead(resp)) #data correction
data <- select(data,participant,condition,block, phase, trial, cat, token, cat_rec, token_rec, row, col, resp, corr, t_select, t_resp) %>%
rename(subj = participant,cond = condition) %>%
filter(!is.na(trial) & !is.na(subj))
# mutate(dataset_cond = paste0('prolific_',cond))
# bind_rows(data_pilot_cleaned)
# ---- data cleaning ----------------------------------------------
data$phase = factor(data$phase,labels = c("train","test"))
data$cat = factor(data$cat,labels = c("Andesite", "Basalt", "Diorite", "Gabbro", "Obsidian", "Pegmatite", "Peridotite", "Pumice"))
data$resp = factor(data$resp,labels = c("Andesite", "Basalt", "Diorite", "Gabbro", "Obsidian", "Pegmatite", "Peridotite", "Pumice"))
data$cat_rec = factor(data$cat_rec,labels = c("Andesite", "Basalt", "Diorite", "Gabbro", "Obsidian", "Pegmatite", "Peridotite", "Pumice"))
data$cond = fct_recode(data$cond, "GEE" = "TCN", "GEA" = "TCR", "CE" = "SCN", "CEA" = "SCR")
# dataset_cond_levels = sprintf("%s_%s",rep("prolific",each=4),c("TCN","TCR","SCN","SCR"))
# data$dataset_cond = factor(data$dataset_cond,levels = dataset_cond_levels)
# data <- data %>%
#         separate(dataset_cond, c("dataset","cond"), sep = "_") %>%
#         mutate(cond = factor(cond, levels = c("TCN","TCR","SCN","SCR")))
#-----------------------------------------------------------------------------------
# saveRDS(data,"prolific data.RDS")
data <- readRDS("prolific data.RDS")
# valid_subj_accu_df <- data %>%
#                       filter(phase == "test", block %in% 7:9) %>%
#                       group_by(cond,subj) %>%
#                       summarize(Pr_corr_test = mean(corr == 1)) %>%
#                       group_by(cond) %>%
#                       filter(percent_rank(Pr_corr_test) > .15) %>%
#                       ungroup()
#
# data_cleaned <- data %>%
#                 semi_join(valid_subj_accu_df,by = "subj")
#---------------------------------------------------------
# test learning curves
learning_curve_df <- data %>%
filter(phase == "test") %>%
group_by(cond,subj,block) %>%
summarize(Pr_corr = mean(corr)) %>%
group_by(cond,block) %>%
summarize(Prcorr_mean = mean(Pr_corr),
# Prcorr_ci = list({
# boot_samples <- boot(Pr_corr,
#     function(x,i){mean(x[i])},
#     R=5000, ncpus=8)
# boot.ci(boot_samples, type = "basic")$basic[4:5]}
# ),
N_subj = n_distinct(subj)) %>%
# rowwise() %>%
# mutate(Prcorr_ci_lower = Prcorr_ci[1],
#        Prcorr_ci_upper = Prcorr_ci[2]) %>%
ungroup()
cond_labels <- c("GEE" = "Given Example\nEven\n", "CE" = "Choose Example\n",
"GEA" = "Given Example\nAdapted\n", "CEA" = "Choose Example\nAdaptive\n")
p <- ggplot(data = learning_curve_df,
aes(y=Prcorr_mean, x=block, color = cond)) +
geom_line(aes(group = cond),linewidth = .7) +
geom_point(aes(shape = cond),size = 3) +
# geom_errorbar(aes(ymin = Prcorr_ci_lower, ymax = Prcorr_ci_upper), width = .1) +
scale_color_manual(values = c("GEE" = "red", "GEA" = "red", "CE" = "gray","CEA" = "gray")) +
scale_shape_manual(name = "Condition", values = c(1,2,3,4), labels = cond_labels) +
scale_linetype_manual(name = "Condition", values = c("solid","dashed","dotted","dotdash"), labels = cond_labels) +
# facet_wrap(~ dataset) +
xlab("Block") +
ylab ("Mean Test Accuracy") +
# ggtitle(paste0("N_subj_TCN = ",N_subj_TCN,", ","N_subj_TCR = ", N_subj_TCR,", ",
#                "N_subj_SCN = ", N_subj_SCN,", ","N_subj_SCR = ", N_subj_SCR)) +
scale_x_continuous(breaks = 1:9) +
scale_y_continuous(limits = c(0.4,0.9)) +
theme_pubr(base_size = 36, legend = "right") +
theme(legend.text = element_text(hjust = 0.5)) +
guides(color = "none")
ggsave(paste0('test learning curves_demo',".jpg"),plot = p ,path = "figure",width = 12, height = 9)
p <- ggplot(data = learning_curve_df,
aes(y=Prcorr_mean, x=block, color = cond)) +
geom_line(aes(group = cond),linewidth = .7) +
geom_point(aes(shape = cond),size = 3) +
# geom_errorbar(aes(ymin = Prcorr_ci_lower, ymax = Prcorr_ci_upper), width = .1) +
scale_color_manual(values = c("GEE" = "red", "GEA" = "red", "CE" = "gray","CEA" = "gray")) +
scale_shape_manual(name = "Condition", values = c(1,2,3,4), labels = cond_labels) +
scale_linetype_manual(name = "Condition", values = c("solid","dashed","dotted","dotdash"), labels = cond_labels) +
# facet_wrap(~ dataset) +
xlab("Block") +
ylab ("Mean Test Accuracy") +
# ggtitle(paste0("N_subj_TCN = ",N_subj_TCN,", ","N_subj_TCR = ", N_subj_TCR,", ",
#                "N_subj_SCN = ", N_subj_SCN,", ","N_subj_SCR = ", N_subj_SCR)) +
scale_x_continuous(breaks = 1:9) +
scale_y_continuous(limits = c(0.4,0.9)) +
theme_pubr(base_size = 36, legend = "right") +
theme(legend.text = element_text(hjust = 0.5),
legend.position = "none")
# guides(color = "none")
ggsave(paste0('test learning curves_demo',".jpg"),plot = p ,path = "figure",width = 12, height = 9)
cond_labels <- c("GEE" = "Given Example\nEven\n", "CE" = "Choose Example\n",
"GEA" = "Given Example\nAdapted\n", "CEA" = "Choose Example\nAdaptive\n")
p <- ggplot(data = learning_curve_df,
aes(y=Prcorr_mean, x=block, color = cond)) +
geom_line(aes(group = cond),linewidth = .7) +
geom_point(aes(shape = cond),size = 3) +
# geom_errorbar(aes(ymin = Prcorr_ci_lower, ymax = Prcorr_ci_upper), width = .1) +
scale_color_manual(values = c("GEE" = "gray", "GEA" = "gray", "CE" = "red","CEA" = "red")) +
scale_shape_manual(name = "Condition", values = c(1,2,3,4), labels = cond_labels) +
scale_linetype_manual(name = "Condition", values = c("solid","dashed","dotted","dotdash"), labels = cond_labels) +
# facet_wrap(~ dataset) +
xlab("Block") +
ylab ("Mean Test Accuracy") +
# ggtitle(paste0("N_subj_TCN = ",N_subj_TCN,", ","N_subj_TCR = ", N_subj_TCR,", ",
#                "N_subj_SCN = ", N_subj_SCN,", ","N_subj_SCR = ", N_subj_SCR)) +
scale_x_continuous(breaks = 1:9) +
scale_y_continuous(limits = c(0.4,0.9)) +
theme_pubr(base_size = 36, legend = "right") +
theme(legend.text = element_text(hjust = 0.5),
legend.position = "none")
# guides(color = "none")
ggsave(paste0('test learning curves_demo',".jpg"),plot = p ,path = "figure",width = 12, height = 9)
setwd("C:/Users/super/Desktop/lab/LearnStrategy/data analysis_expt3")
library(tidyverse)
library(gridExtra)
library(ggpubr)
library(boot)
source("../utils/performance-metrics.R")
# # ---- Load the Data ----
setwd("../data_expt3")
files1 = dir(path = "CCP", pattern = ".csv$",full.names = TRUE)
files2 = dir(path = "GCP", pattern = ".csv$",full.names = TRUE)
files3 = dir(path = "GEA", pattern = ".csv$",full.names = TRUE)
files4 = dir(path = "GEE", pattern = ".csv$",full.names = TRUE)
files_mod = dir(path = "data_mod", pattern = ".csv$",full.names = TRUE)
files_extra = dir(path = "extra subjects", pattern = ".csv$",full.names = TRUE)
files = c(files1,files2,files3,files4,files_mod,files_extra) #files_extra
data <- do.call(bind_rows,
lapply(files, read.csv, fill = T,
colClasses = c(webaudio = "character",
webcam = "character",
mobile = "character",
fullscreen = "character",
microphone = "character",
success = "character",
timeout = "character",
corr = "character",
ref_cat_num = "character",
paired_cat_num = "character"
)
)
)
data[is.na(data)] <- NA
setwd("../data analysis_expt3")
saveRDS(data, "data_full.RDS")
data_full <- readRDS("data_full.RDS")
# # ---- select variables of interest ----
data <- data_full %>%
filter(trialType %in% c("class_response", "cat_selection", "paired_cat_display")) %>%
select(subjID, condition, stimID, cycle, phase, trial, cat, resp, token, corr,
rt, ref_cat_num, paired_cat_num, starts_with("text"), time_obs, time_resp) %>%
mutate(cond = factor(condition, labels = c("GEE","GEA","GCP","CCP")),
condition = NULL,
stimID = as.integer(stimID),
phase = factor(phase,levels = c("train","test")),
cat = as.factor(cat),
resp = as.factor(resp),
corr = as.logical(corr),
rt = as.numeric(rt)
)
#---------------------------------------------------------
# test learning curves
learning_curve_df <- data %>%
filter(phase == "test") %>%
group_by(cond,subjID,cycle) %>%
summarize(Pr_corr = mean(corr)) %>%
group_by(cond,cycle) %>%
summarize(Prcorr_mean = mean(Pr_corr),
# Prcorr_ci = list({
#   boot_samples <- boot(Pr_corr,
#                        function(x,i){median(x[i])},
#                        R=5000, ncpus=8)
#   boot.ci(boot_samples, type = "basic")$basic[4:5]
#   }),
N_subj = n_distinct(subjID)) %>%
ungroup()
cond_labels <- c("GEE" = "Given Example\nEven\n", "GEA" = "Given Example\nAdapted\n",
"GCP" = "Given Category\nPaired\n", "CCP" = "Choose Category\nPaired\n")
p <- ggplot(data = learning_curve_df,
aes(y=Prcorr_mean, x=cycle, color = cond)) +
geom_line(aes(group = cond), linewidth = .7) +
geom_point(aes(shape = cond),size = 3) +
# geom_errorbar(aes(ymin = Prcorr_ci_lower, ymax = Prcorr_ci_upper), width = .1) +
scale_color_manual(values = c("GEE" = "gray", "GEA" = "gray", "GCP" = "red","CCP" = "red")) +
scale_shape_manual(name = "Condition", values = c(1,2,3,4), labels = cond_labels) +
# scale_linetype_manual(name = "Condition", values = c("solid","dashed","dotted","dotdash"), labels = cond_labels) +
xlab("Learning Cycle") +
ylab ("Mean Test Accuracy") +
scale_x_continuous(breaks = 0:4) +
scale_y_continuous(limits = c(0,1)) +
theme_pubr(base_size = 36, legend = "none") +
theme(legend.text = element_text(hjust = 0.5)) +
guides(color = "none")
ggsave(paste('test learning curves_demo',".jpg"),plot = p ,path = "../data analysis_expt3/figure",width = 12, height = 9)
p <- ggplot(data = learning_curve_df,
aes(y=Prcorr_mean, x=cycle, color = cond)) +
geom_line(aes(group = cond), linewidth = .7) +
geom_point(aes(shape = cond),size = 3) +
# geom_errorbar(aes(ymin = Prcorr_ci_lower, ymax = Prcorr_ci_upper), width = .1) +
scale_color_manual(values = c("GEE" = "red", "GEA" = "red", "GCP" = "gray","CCP" = "gray")) +
scale_shape_manual(name = "Condition", values = c(1,2,3,4), labels = cond_labels) +
# scale_linetype_manual(name = "Condition", values = c("solid","dashed","dotted","dotdash"), labels = cond_labels) +
xlab("Learning Cycle") +
ylab ("Mean Test Accuracy") +
scale_x_continuous(breaks = 0:4) +
scale_y_continuous(limits = c(0,1)) +
theme_pubr(base_size = 36, legend = "none") +
theme(legend.text = element_text(hjust = 0.5)) +
guides(color = "none")
ggsave(paste('test learning curves_demo',".jpg"),plot = p ,path = "../data analysis_expt3/figure",width = 12, height = 9)
p <- ggplot(data = learning_curve_df,
aes(y=Prcorr_mean, x=cycle, color = cond)) +
geom_line(aes(group = cond), linewidth = .7) +
geom_point(aes(shape = cond),size = 3) +
# geom_errorbar(aes(ymin = Prcorr_ci_lower, ymax = Prcorr_ci_upper), width = .1) +
scale_color_manual(values = c("GEE" = "red", "GEA" = "gray", "GCP" = "red","CCP" = "gray")) +
scale_shape_manual(name = "Condition", values = c(1,2,3,4), labels = cond_labels) +
# scale_linetype_manual(name = "Condition", values = c("solid","dashed","dotted","dotdash"), labels = cond_labels) +
xlab("Learning Cycle") +
ylab ("Mean Test Accuracy") +
scale_x_continuous(breaks = 0:4) +
scale_y_continuous(limits = c(0,1)) +
theme_pubr(base_size = 36, legend = "none") +
theme(legend.text = element_text(hjust = 0.5)) +
guides(color = "none")
ggsave(paste('test learning curves_demo',".jpg"),plot = p ,path = "../data analysis_expt3/figure",width = 12, height = 9)
library(tidyverse)
library(gridExtra)
library(ggpubr)
library(effsize)
source("../utils/performance-metrics.R")
# # ---- Load the Data ----
data_orig <- readRDS("data_original.RDS")
# # ---- select variables of interest ----
data <- data_orig %>%
filter(trialType %in% c("class_response", "cat_selection", "paired_cat_display")) %>%
select(subjID, condition, stimID, cycle, phase, trialType, trial, cat, resp, token, corr,
rt, ref_cat_num, paired_cat_num, starts_with("text"), time_obs, time_resp) %>%
mutate(cond = factor(condition, labels = c("GEE","GEA","GCP","CCP")),
condition = NULL,
stimID = as.integer(stimID),
phase = factor(phase,levels = c("train","test")),
cat = as.factor(cat),
resp = as.factor(resp),
corr = as.logical(corr),
rt = as.numeric(rt)
)
cat_levels = c("Andesite","Basalt", "Diorite", "Gabbro",
"Obsidian", "Pegmatite", "Peridotite", "Pumice")
cat_pairs_full <- expand_grid(cat1 = cat_levels,cat2 = cat_levels) %>%
filter(cat1 != cat2) %>%
rowwise() %>%
mutate(cat_pair = paste(sort(c(cat1, cat2)), collapse = "_")) %>%
distinct(cat_pair)
cat_pairs_selected_temp <- data %>%
filter(cond %in% c("GCP", "CCP"), trialType == "cat_selection") %>%
select(cond, subjID, cycle, trial, ref_cat_num, paired_cat_num) %>%
mutate(ref_cat = factor(ref_cat_num,labels = cat_levels),
paired_cat = factor(paired_cat_num,labels = cat_levels),
ref_cat_num = NULL,
paired_cat_num = NULL) %>%
rowwise() %>%
mutate(cat_pair = paste(sort(c(ref_cat, paired_cat)), collapse = "_")) %>%
group_by(cond, subjID, cat_pair) %>%
summarize(count = n())
# frequency of cat pair selections by subject
cat_pairs_selected <- expand_grid(cat_pair = cat_pairs_full$cat_pair, subjID = unique(cat_pairs_selected_temp$subjID)) %>%
left_join(cat_pairs_selected_temp) %>%
replace_na(list(count = 0)) %>%
group_by(subjID) %>%
mutate(cond = replace_na(cond, unique(na.omit(cond)))) %>%
arrange(cond, subjID, desc(count)) %>%
ungroup()
# average number of distinct pairs across subjects by condition
num_distinct_pair_across_subj <- cat_pairs_selected %>%
group_by(cond, subjID) %>%
summarize(n_pair = sum(count > 0))
with(num_distinct_pair_across_subj, t.test(n_pair[cond == "CCP"],n_pair[cond == "GCP"], var.equal = T))
with(num_distinct_pair_across_subj, cohen.d(n_pair ~ fct_drop(cond)))
# total number of selections for possible cat pairs across subjects in each condition
count_cat_pair_across_subj <- cat_pairs_selected %>%
group_by(cond, cat_pair) %>%
summarize(count = sum(count))
# average number of cat pairs selected across subjects by cond
num_cat_pair_by_cond <- cat_pairs_selected %>%
group_by(cond, cat_pair) %>%
summarize(mean_count = mean(count))
#Proportions of participants who observed the unordered cat pairs by cond
num_cat_pair_rep <- num_cat_pair_by_cond %>%
pivot_wider(names_from = cond, values_from = mean_count, names_glue = "{.value}_{cond}") %>%
ungroup() %>%
arrange(desc(mean_count_GCP)) %>%
slice_head(n = 8) %>%
pivot_longer(starts_with("mean_count"), names_to = "cond", values_to = "mean_count", names_prefix = "mean_count_") %>%
mutate(cat_pair = ordered(cat_pair, levels = rev(unique(cat_pair))
))
cond_labels <- c("CCP" = "Paired Category Active", "GCP" = "Paired Category Adaptive")
p <- ggplot(data = num_cat_pair_rep,
mapping = aes(x = cat_pair, y = mean_count, fill = cond)) +
geom_col(color = "black",
width = 0.8, position = "dodge") +
coord_flip() +
xlab("") +
ylab("Mean Frequency of Presentation\nfor Selected Category Pairs") +
scale_y_continuous(expand = c(0,0), breaks = seq(0,1.6,0.2)) +
scale_x_discrete() +
scale_fill_discrete(name = "Condition", labels = cond_labels) +
theme_pubr(base_size = 30, legend = "right")
ggsave(filename = "figure/Propsubj_cat_pair.png", p, width = 16, height = 8)
cond_labels <- c("CCP" = "Paired Category Active", "GCP" = "Paired Category Adaptive")
p <- ggplot(data = num_cat_pair_rep,
mapping = aes(x = cat_pair, y = mean_count, fill = cond)) +
geom_col(color = "black",
width = 0.8, position = "dodge") +
coord_flip() +
xlab("") +
ylab("Mean Frequency of Presentation\nfor Selected Category Pairs") +
scale_y_continuous(expand = c(0,0), breaks = seq(0,1.6,0.2)) +
scale_x_discrete() +
scale_fill_discrete(name = "Condition", labels = cond_labels) +
theme_pubr(base_size = 30, legend = "bottom")
ggsave(filename = "figure/Propsubj_cat_pair.png", p, width = 16, height = 8)
cond_labels <- c("GCP" = "Paired Category Adaptive", "CCP" = "Paired Category Active")
p <- ggplot(data = num_cat_pair_rep,
mapping = aes(x = cat_pair, y = mean_count, fill = cond)) +
geom_col(color = "black",
width = 0.8, position = "dodge") +
coord_flip() +
xlab("") +
ylab("Mean Frequency of Presentation\nfor Selected Category Pairs") +
scale_y_continuous(expand = c(0,0), breaks = seq(0,1.6,0.2)) +
scale_x_discrete() +
scale_fill_discrete(name = "Condition", labels = cond_labels) +
theme_pubr(base_size = 30, legend = "bottom")
ggsave(filename = "figure/Propsubj_cat_pair.png", p, width = 16, height = 8)
View(num_cat_pair_rep)
cond_labels <- c("GCP" = "Paired Category Adaptive", "CCP" = "Paired Category Active")
p <- ggplot(data = num_cat_pair_rep,
mapping = aes(x = cat_pair, y = mean_count, fill = ordered(cond))) +
geom_col(color = "black",
width = 0.8, position = "dodge") +
coord_flip() +
xlab("") +
ylab("Mean Frequency of Presentation\nfor Selected Category Pairs") +
scale_y_continuous(expand = c(0,0), breaks = seq(0,1.6,0.2)) +
scale_x_discrete() +
scale_fill_discrete(name = "Condition", labels = cond_labels) +
theme_pubr(base_size = 30, legend = "bottom")
ggsave(filename = "figure/Propsubj_cat_pair.png", p, width = 16, height = 8)
cond_labels <- c("GCP" = "Paired Category Adaptive", "CCP" = "Paired Category Active")
p <- ggplot(data = num_cat_pair_rep,
mapping = aes(x = cat_pair, y = mean_count, fill = cond)) +
geom_col(color = "black",
width = 0.8, position = "dodge") +
coord_flip() +
xlab("") +
ylab("Mean Frequency of Presentation\nfor Selected Category Pairs") +
scale_y_continuous(expand = c(0,0), breaks = seq(0,1.6,0.2)) +
scale_x_discrete() +
scale_fill_discrete(name = "Condition", labels = cond_labels) +
theme_pubr(base_size = 30, legend = "bottom")
ggsave(filename = "figure/Propsubj_cat_pair.png", p, width = 16, height = 8)
