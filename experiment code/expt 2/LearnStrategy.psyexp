<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2023.2.3">
  <Settings>
    <Param val="3" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="ptb" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="$end_message" valType="str" updates="None" name="End Message"/>
    <Param val="{'participant': '', 'condition': '[&quot;SCN&quot;,&quot;SCR&quot;,&quot;TCN&quot;,&quot;TCR&quot;]'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="$incomplete_url" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="['Instructions/train4.png', 'Instructions/train8SCN.png', 'Instructions/train8SCR.png', 'Instructions/W.png', 'stimuli/rock_image_info.xlsx', 'rock_images/I_Andesite_01.jpg', 'rock_images/I_Andesite_02.jpg', 'rock_images/I_Andesite_03.jpg', 'rock_images/I_Andesite_04.jpg', 'rock_images/I_Andesite_05.jpg', 'rock_images/I_Andesite_06.jpg', 'rock_images/I_Andesite_07.jpg', 'rock_images/I_Andesite_09.jpg', 'rock_images/I_Andesite_10.jpg', 'rock_images/I_Andesite_11.jpg', 'rock_images/I_Andesite_14.jpg', 'rock_images/I_Andesite_16.jpg', 'rock_images/I_Basalt_01.jpg', 'rock_images/I_Basalt_02.jpg', 'rock_images/I_Basalt_04.jpg', 'rock_images/I_Basalt_05.jpg', 'rock_images/I_Basalt_06.jpg', 'rock_images/I_Basalt_08.jpg', 'rock_images/I_Basalt_09.jpg', 'rock_images/I_Basalt_10.jpg', 'rock_images/I_Basalt_11.jpg', 'rock_images/I_Basalt_12.jpg', 'rock_images/I_Basalt_14.jpg', 'rock_images/I_Basalt_16.jpg', 'rock_images/I_Diorite_02.jpg', 'rock_images/I_Diorite_06.jpg', 'rock_images/I_Diorite_07.jpg', 'rock_images/I_Diorite_08.jpg', 'rock_images/I_Diorite_09.jpg', 'rock_images/I_Diorite_10.jpg', 'rock_images/I_Diorite_11.jpg', 'rock_images/I_Diorite_12.jpg', 'rock_images/I_Diorite_13.jpg', 'rock_images/I_Diorite_14.jpg', 'rock_images/I_Diorite_15.jpg', 'rock_images/I_Diorite_16.jpg', 'rock_images/I_Gabbro_01.jpg', 'rock_images/I_Gabbro_03.jpg', 'rock_images/I_Gabbro_05.jpg', 'rock_images/I_Gabbro_08.jpg', 'rock_images/I_Gabbro_09.jpg', 'rock_images/I_Gabbro_10.jpg', 'rock_images/I_Gabbro_11.jpg', 'rock_images/I_Gabbro_12.jpg', 'rock_images/I_Gabbro_13.jpg', 'rock_images/I_Gabbro_14.jpg', 'rock_images/I_Gabbro_15.jpg', 'rock_images/I_Gabbro_16.jpg', 'rock_images/I_Obsidian_02.jpg', 'rock_images/I_Obsidian_04.jpg', 'rock_images/I_Obsidian_05.jpg', 'rock_images/I_Obsidian_06.jpg', 'rock_images/I_Obsidian_07.jpg', 'rock_images/I_Obsidian_08.jpg', 'rock_images/I_Obsidian_09.jpg', 'rock_images/I_Obsidian_10.jpg', 'rock_images/I_Obsidian_11.jpg', 'rock_images/I_Obsidian_12.jpg', 'rock_images/I_Obsidian_14.jpg', 'rock_images/I_Obsidian_16.jpg', 'rock_images/I_Pegmatite_03.jpg', 'rock_images/I_Pegmatite_05.jpg', 'rock_images/I_Pegmatite_06.jpg', 'rock_images/I_Pegmatite_07.jpg', 'rock_images/I_Pegmatite_08.jpg', 'rock_images/I_Pegmatite_09.jpg', 'rock_images/I_Pegmatite_10.jpg', 'rock_images/I_Pegmatite_11.jpg', 'rock_images/I_Pegmatite_12.jpg', 'rock_images/I_Pegmatite_13.jpg', 'rock_images/I_Pegmatite_15.jpg', 'rock_images/I_Pegmatite_16.jpg', 'rock_images/I_Peridotite_02.jpg', 'rock_images/I_Peridotite_04.jpg', 'rock_images/I_Peridotite_05.jpg', 'rock_images/I_Peridotite_06.jpg', 'rock_images/I_Peridotite_07.jpg', 'rock_images/I_Peridotite_08.jpg', 'rock_images/I_Peridotite_10.jpg', 'rock_images/I_Peridotite_12.jpg', 'rock_images/I_Peridotite_13.jpg', 'rock_images/I_Peridotite_14.jpg', 'rock_images/I_Peridotite_15.jpg', 'rock_images/I_Peridotite_16.jpg', 'rock_images/I_Pumice_02.jpg', 'rock_images/I_Pumice_03.jpg', 'rock_images/I_Pumice_04.jpg', 'rock_images/I_Pumice_05.jpg', 'rock_images/I_Pumice_06.jpg', 'rock_images/I_Pumice_08.jpg', 'rock_images/I_Pumice_09.jpg', 'rock_images/I_Pumice_10.jpg', 'rock_images/I_Pumice_13.jpg', 'rock_images/I_Pumice_14.jpg', 'rock_images/I_Pumice_15.jpg', 'rock_images/I_Pumice_16.jpg', 'stimuli/train_instructionsSCN.xlsx', 'stimuli/train_instructionsSCR.xlsx', 'stimuli/train_instructionsTCN.xlsx', 'stimuli/train_instructionsTCR.xlsx', 'Instructions/train3TC.png', 'Instructions/train6TC.png', 'Instructions/train7TC.png', 'Instructions/train6SC.png', 'Instructions/train7SC.png', 'Instructions/test1.png', 'Instructions/test2.png', 'Instructions/test3.png', 'Instructions/train1.png', 'Instructions/train2.png', 'Instructions/train3SC.png', 'Instructions/train5.png', 'stimuli/test_instructions.xlsx', 'img/leftarrow.png', 'img/next.png', 'img/rightarrow.png']" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="True" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="2" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="True" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="" valType="str" updates="None" name="Use version"/>
    <Param val="[1280, 720]" valType="list" updates="None" name="Window size (pixels)"/>
    <Param val="none" valType="str" updates="None" name="backgroundFit"/>
    <Param val="" valType="str" updates="None" name="backgroundImg"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="{'participant': 'priority.CRITICAL', 'condition': 'priority.CRITICAL', 'block': 'priority.CRITICAL', 'phase': 'priority.CRITICAL', 'trial': 'priority.CRITICAL', 'cat': 'priority.CRITICAL', 'token': 'priority.CRITICAL', 'row': 'priority.CRITICAL', 'col': 'priority.CRITICAL', 'resp': 'priority.CRITICAL', 'corr': 'priority.CRITICAL', 't_resp': 'priority.CRITICAL', 't_select': 'priority.CRITICAL', 'cat_rec': 'priority.CRITICAL', 'token_rec': 'priority.CRITICAL'}" valType="dict" updates="None" name="colPriority"/>
    <Param val="white" valType="color" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="LearnStrategy" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="data" valType="code" updates="None" name="logging level"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="neon.local" valType="str" updates="None" name="plCompanionAddress"/>
    <Param val="scene_camera.json" valType="file" updates="None" name="plCompanionCameraCalibration"/>
    <Param val="8080" valType="num" updates="None" name="plCompanionPort"/>
    <Param val="True" valType="bool" updates="None" name="plCompanionRecordingEnabled"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="priority" valType="str" updates="None" name="sortColumns"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
    <Param val="pyglet" valType="str" updates="None" name="winBackend"/>
  </Settings>
  <Routines>
    <Routine name="instPrep">
      <RoutineSettingsComponent name="instPrep" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="instPrep" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="instrPrecode" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="cur_row_train = 0&amp;#10;show_instructions_train = 1&amp;#10;if expInfo['condition'] in ['TCN', 'TCR']:&amp;#10;    max_slides_train = 8 - 1&amp;#10;elif expInfo['condition'] == 'SCN':&amp;#10;    max_slides_train = 9 - 1&amp;#10;elif expInfo['condition'] == 'SCR':&amp;#10;    max_slides_train = 9 - 1&amp;#10;&amp;#10;instruct_filename = 'stimuli/train_instructions' + expInfo['condition'] + '.xlsx'&amp;#10;arrowSize = (0.15, 0.15)&amp;#10;arrowPos_back = (-0.5,-0.38)&amp;#10;arrowPos_next = (0.5,-0.38)" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="cur_row_train = 0;&amp;#10;show_instructions_train = 1;&amp;#10;if (['TCN', 'TCR'].includes(expInfo['condition'])) {&amp;#10;    max_slides_train = 8 - 1;&amp;#10;} else if (expInfo['condition'] === 'SCN') {&amp;#10;    max_slides_train = 9 - 1;&amp;#10;} else if (expInfo['condition'] === 'SCR') {&amp;#10;    max_slides_train = 9 - 1;&amp;#10;}&amp;#10;instruct_filename = ((&quot;stimuli/train_instructions&quot; + expInfo[&quot;condition&quot;]) + &quot;.xlsx&quot;);&amp;#10;arrowSize = [0.15, 0.15];&amp;#10;arrowPos_back = [(- 0.5), (- 0.38)];&amp;#10;arrowPos_next = [0.5, (- 0.38)];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if (instruct_mouse_test.isPressedIn(rightArrow)) {&amp;#10;    cur_row_train += 1;&amp;#10;} else {&amp;#10;    if (instruct_mouse_test.isPressedIn(leftArrow)) {&amp;#10;        cur_row_train -= 1;&amp;#10;    }&amp;#10;}&amp;#10;if ((cur_row_train &lt; 0)) {&amp;#10;    cur_row_train = 0;&amp;#10;}&amp;#10;if ((cur_row_train &gt; max_slides_train)) {&amp;#10;    TrainInstructions_controller.finished = 1;&amp;#10;    show_instructions_train = 0;&amp;#10;    cur_row_train = (max_slides_train - 1);&amp;#10;}&amp;#10;cur_row_train_string = cur_row_train.toString();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if(instruct_mouse_test.isPressedIn(rightArrow)):&amp;#10;    cur_row_train += 1&amp;#10;elif(instruct_mouse_test.isPressedIn(leftArrow)):&amp;#10;    cur_row_train -= 1&amp;#10;&amp;#10;if(cur_row_train &lt; 0):&amp;#10;    cur_row_train = 0&amp;#10;&amp;#10;if(cur_row_train &gt; max_slides_train):&amp;#10;    TrainInstructions_controller.finished = 1&amp;#10;    show_instructions_train = 0&amp;#10;    &amp;#10;    cur_row_train = max_slides_train - 1&amp;#10;&amp;#10;cur_row_train_string = str(cur_row_train)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="instrPrecode" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Thankyou">
      <RoutineSettingsComponent name="Thankyou" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="Thankyou" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Thanks for participating" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="feedback_neutral">
      <RoutineSettingsComponent name="feedback_neutral" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="feedback_neutral" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="full_screen" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="if frameN &gt; 10:&amp;#10;    if not psychoJS.window._windowAlreadyInFullScreen:&amp;#10;        alert(&quot;looks like you exited full screen mode. You must stay in full screen mode to be eligible to participate&quot;)&amp;#10;        quitPsychoJS('',false)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (frameN &gt; 10) {&amp;#10;    if (! psychoJS.window._windowAlreadyInFullScreen) {&amp;#10;    alert(&quot;looks like you exited full screen mode. You must stay in full screen mode to be eligible to participate&quot;);&amp;#10;    quitPsychoJS('',false);&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="full_screen" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="fb_text_t" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="fb_text_t" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Okay" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="feedback_corrective">
      <RoutineSettingsComponent name="feedback_corrective" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="feedback_corrective" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="full_screen_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="if frameN &gt; 10:&amp;#10;    if not psychoJS.window._windowAlreadyInFullScreen:&amp;#10;        alert(&quot;looks like you exited full screen mode. You must stay in full screen mode to be eligible to participate&quot;)&amp;#10;        quitPsychoJS('',false)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (frameN &gt; 10) {&amp;#10;    if (! psychoJS.window._windowAlreadyInFullScreen) {&amp;#10;    alert(&quot;looks like you exited full screen mode. You must stay in full screen mode to be eligible to participate&quot;);&amp;#10;    quitPsychoJS('',false);&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="full_screen_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="fb_selection" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="corr_flag = (cat_mouse_l.clicked_name.slice((- 1))[0] === (trial_rock_cat + &quot;_rect&quot;));&amp;#10;if (corr_flag) {&amp;#10;    fb_text = &quot;Correct!&quot;;&amp;#10;    fb_col = &quot;green&quot;;&amp;#10;} else {&amp;#10;    fb_text = &quot;Incorrect!&quot;;&amp;#10;    fb_col = &quot;red&quot;;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="corr_flag = cat_mouse_l.clicked_name[-1] == trial_rock_cat + '_rect'&amp;#10;if corr_flag:&amp;#10;    fb_text = 'Correct!'&amp;#10;    fb_col = 'green'&amp;#10;else:&amp;#10;    fb_text = 'Incorrect!'&amp;#10;    fb_col = 'red'" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="fb_selection" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="trial_rock_train_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$directory_path + '/' + trial_rock_file" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="trial_rock_train_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.1)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="trial_rock_size" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="fb_text_l" plugin="None">
        <Param val="$fb_col" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="fb_text_l" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.22)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$fb_text" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="fb_text_l_2" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="fb_text_l_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.28)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$'This rock is ' + trial_rock_cat" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="next" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="img/next.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="next" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="next_buttonSize" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <MouseComponent name="fb_mouse" plugin="None">
        <Param val="next" valType="list" updates="constant" name="clickable"/>
        <Param val="" valType="list" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="valid click" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="fb_mouse" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="never" valType="str" updates="None" name="saveMouseState"/>
        <Param val="" valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="mouse onset" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <CodeComponent name="store_trial_vars_train_4" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;corr&quot;, +corr_flag);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="thisExp.addData('corr', int(corr_flag))&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="store_trial_vars_train_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Classification_train">
      <RoutineSettingsComponent name="Classification_train" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="Classification_train" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="full_screen_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="if frameN &gt; 10:&amp;#10;    if not psychoJS.window._windowAlreadyInFullScreen:&amp;#10;        alert(&quot;looks like you exited full screen mode. You must stay in full screen mode to be eligible to participate&quot;)&amp;#10;        quitPsychoJS('',false)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (frameN &gt; 10) {&amp;#10;    if (! psychoJS.window._windowAlreadyInFullScreen) {&amp;#10;    alert(&quot;looks like you exited full screen mode. You must stay in full screen mode to be eligible to participate&quot;);&amp;#10;    quitPsychoJS('',false);&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="full_screen_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="trial_rock_config" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if (['SCN','SCR'].includes(expInfo['condition'])){&amp;#10;    rock_width = [];&amp;#10;    rock_height = [];&amp;#10;    aspect_ratio = [];&amp;#10;    trial_rock_file = filename_clicked;&amp;#10;    trial_rock_cat = cat_clicked;&amp;#10;    [rock_width, rock_height] = aspectRatio_clicked;&amp;#10;}&amp;#10;aspect_ratio = (rock_width / rock_height);&amp;#10;trial_rock_height = 0.55;&amp;#10;trial_rock_width = (trial_rock_height * aspect_ratio);&amp;#10;trial_rock_size = [trial_rock_width, trial_rock_height];" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if expInfo['condition'] in ['SCN','SCR']:&amp;#10;    trial_rock_file = filename_clicked&amp;#10;    rock_width,rock_height = aspectRatio_clicked&amp;#10;    aspect_ratio = rock_width/rock_height&amp;#10;&amp;#10;trial_rock_height = 0.55&amp;#10;trial_rock_width = trial_rock_height * aspect_ratio&amp;#10;trial_rock_size = [trial_rock_width,trial_rock_height]&amp;#10;&amp;#10;&amp;#10;&amp;#10;  &amp;#10;    " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="trial_rock_config" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="prog_bar_train" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="n_trials_total = 16*2&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="n_trials_total = (16 * 2);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="prog_total = (blocks.nTotal * n_trials_total);&amp;#10;prog_cur = (((blocks.thisN * n_trials_total) + train_trials.thisN) + 2);&amp;#10;prog_var = (prog_cur / prog_total);&amp;#10;trial_counter_txt = &quot;Trial # &quot; + (train_trials.thisN + 1).toString() + &quot;/&quot; + train_trials.nTotal.toString();&amp;#10;trial_rock_image = directory_path + &quot;/&quot; + trial_rock_file;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="prog_total = blocks.nTotal * n_trials_total&amp;#10;prog_cur = blocks.thisN * n_trials_total + train_trials.thisN + 2&amp;#10;prog_var = prog_cur/prog_total&amp;#10;trial_counter_txt = &quot;Trial # &quot; + str(train_trials.thisN + 1) + &quot;/&quot; + str(train_trials.nTotal)&amp;#10;trial_rock_image = directory_path + '/' + trial_rock_file&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="prog_bar_train" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="buttons_config" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="buttons_nrow = 2&amp;#10;buttons_ncol = 4&amp;#10;buttons_ntotal = buttons_nrow * buttons_ncol&amp;#10;xbound = [-0.4, 0.4]&amp;#10;ybound = [-0.25, -0.4]&amp;#10;buttonSize = (0.22,0.08)&amp;#10;xPos = []&amp;#10;yPos = []&amp;#10;buttonPos = []&amp;#10;for i_button in range(buttons_ntotal):&amp;#10;    i_button_x = i_button % buttons_ncol&amp;#10;    i_button_y = i_button // buttons_ncol&amp;#10;    xPos = xbound[0] + abs(xbound[0] - xbound[1])/(buttons_ncol - 1)*i_button_x&amp;#10;    yPos = ybound[0] - abs(ybound[0] - ybound[1])/(buttons_nrow - 1)*i_button_y&amp;#10;    buttonPos.append([xPos,yPos])" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="buttons_nrow = 2;&amp;#10;buttons_ncol = 4;&amp;#10;buttons_ntotal = (buttons_nrow * buttons_ncol);&amp;#10;xbound = [(- 0.4), 0.4];&amp;#10;ybound = [(- 0.25), (- 0.4)];&amp;#10;buttonSize = [0.22, 0.08];&amp;#10;xPos = [];&amp;#10;yPos = [];&amp;#10;buttonPos = [];&amp;#10;for (var i_button = 0; i_button &lt; buttons_ntotal; i_button++) {&amp;#10;    let i_button_x = i_button % buttons_ncol;&amp;#10;    let i_button_y = Math.floor(i_button / buttons_ncol);&amp;#10;    xPos = (xbound[0] + ((Math.abs((xbound[0] - xbound[1])) / (buttons_ncol - 1)) * i_button_x));&amp;#10;    yPos = (ybound[0] - ((Math.abs((ybound[0] - ybound[1])) / (buttons_nrow - 1)) * i_button_y));&amp;#10;    buttonPos.push([xPos, yPos]);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="buttons_config" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="draw_button_panel" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="cat_button_clickable = []&amp;#10;cat_button_text = []&amp;#10;Button_rect =  []&amp;#10;Button_txt = []&amp;#10;for i_button in range(buttons_ntotal):&amp;#10;    cat_name = category_names[i_button]&amp;#10;    Button_rect = visual.TextBox(&amp;#10;         win, text=None, placeholder='Type here...', font='Arial',&amp;#10;         pos=buttonPos[i_button],letterHeight=0.03,&amp;#10;         size=buttonSize, borderWidth=4.0,&amp;#10;         color=None, colorSpace='rgb',&amp;#10;         opacity=None,&amp;#10;         bold=False, italic=False,&amp;#10;         lineSpacing=1.0, speechPoint=None,&amp;#10;         padding=0.0, alignment='center',&amp;#10;         anchor='center', overflow='visible',&amp;#10;         fillColor=None, borderColor='black',&amp;#10;         flipHoriz=False, flipVert=False, languageStyle='LTR',&amp;#10;         editable=False,&amp;#10;         name=cat_name + '_rect',&amp;#10;         depth=-6, autoLog=False)&amp;#10;    Button_txt = visual.TextStim(&amp;#10;        win=win, name=cat_name + '_txt',&amp;#10;        text=cat_name,&amp;#10;        font='Open Sans',&amp;#10;        pos=buttonPos[i_button], height=0.04, wrapWidth=None, ori=0.0, &amp;#10;        color='black', colorSpace='rgb', opacity=None, &amp;#10;        languageStyle='LTR',&amp;#10;        depth=-7.0)&amp;#10;    cat_button_clickable.append(Button_rect) &amp;#10;    cat_button_text.append(Button_txt) " valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="cat_button_clickable = [];&amp;#10;cat_button_text = [];&amp;#10;Button_rect = [];&amp;#10;Button_txt = [];&amp;#10;for (var i_button = 0; i_button &lt; buttons_ntotal; i_button++) {&amp;#10;    cat_name = category_names[i_button];&amp;#10;    Button_rect = new visual.TextBox({&quot;win&quot;: psychoJS.window, &quot;name&quot;: (cat_name + &quot;_rect&quot;), &quot;text&quot;: '', &quot;placeholder&quot;: 'Type here...', &quot;font&quot;: 'Arial', &quot;pos&quot;: buttonPos[i_button], &quot;letterHeight&quot;: 0.03, &quot;lineSpacing&quot;: 1.0, &quot;size&quot;: buttonSize, &quot;units&quot;: undefined, &quot;color&quot;: null, &quot;colorSpace&quot;: 'rgb', &quot;fillColor&quot;: undefined, &quot;borderColor&quot;: 'black', &quot;borderWidth&quot;: 0.007, &quot;languageStyle&quot;: 'LTR', &quot;bold&quot;: false, &quot;italic&quot;: false, &quot;opacity&quot;: undefined, &quot;padding&quot;: 0.0, &quot;alignment&quot;: 'center', &quot;overflow&quot;: 'visible', &quot;editable&quot;: false, &quot;multiline&quot;: true, &quot;anchor&quot;: 'center', &quot;depth&quot;: (-6.0)});&amp;#10;    Button_txt = new visual.TextStim({&quot;win&quot;: psychoJS.window, &quot;name&quot;: (cat_name + &quot;_txt&quot;), &quot;text&quot;: cat_name, &quot;font&quot;: &quot;Open Sans&quot;, &quot;pos&quot;: buttonPos[i_button], &quot;height&quot;: 0.04, &quot;wrapWidth&quot;: null, &quot;ori&quot;: 0.0, &quot;color&quot;: &quot;black&quot;, &quot;colorSpace&quot;: &quot;rgb&quot;, &quot;opacity&quot;: null, &quot;languageStyle&quot;: &quot;LTR&quot;, &quot;depth&quot;: (- 7.0)});&amp;#10;    cat_button_clickable.push(Button_rect);&amp;#10;    cat_button_text.push(Button_txt);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="rect = [];&amp;#10;txt = [];&amp;#10;for (var i_button = 0; i_button &lt; buttons_ntotal; i_button++) {&amp;#10;    rect = cat_button_clickable[i_button];&amp;#10;    txt = cat_button_text[i_button];&amp;#10;    rect.setAutoDraw(true);&amp;#10;    txt.setAutoDraw(true);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="rect = []&amp;#10;txt = []&amp;#10;for i_button in range(buttons_ntotal):&amp;#10;    rect = cat_button_clickable[i_button]&amp;#10;    txt = cat_button_text[i_button]&amp;#10;    rect.setAutoDraw(True)&amp;#10;    txt.setAutoDraw(True)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="for (var i_button = 0; i_button &lt; buttons_ntotal; i_button++) {&amp;#10;    rect = cat_button_clickable[i_button];&amp;#10;    txt = cat_button_text[i_button];&amp;#10;    rect.setAutoDraw(false);&amp;#10;    txt.setAutoDraw(false);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="for i_button in range(buttons_ntotal):&amp;#10;    rect = cat_button_clickable[i_button]&amp;#10;    txt = cat_button_text[i_button]&amp;#10;    rect.setAutoDraw(False)&amp;#10;    txt.setAutoDraw(False)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="draw_button_panel" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="rock_classification" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="button = []&amp;#10;button_text = []&amp;#10;for i_button in range(buttons_ntotal):&amp;#10;    button = cat_button_clickable[i_button]&amp;#10;    button_text = cat_button_text[i_button]&amp;#10;    if button.contains(cat_mouse_l):&amp;#10;        button.borderColor = 'red'&amp;#10;        button_text.color = 'red'&amp;#10;    else:&amp;#10;        button.borderColor = 'black'&amp;#10;        button_text.color = 'black'" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="button = [];&amp;#10;button_text = [];&amp;#10;for (var i_button = 0; i_button &lt; buttons_ntotal; i_button++) {&amp;#10;    button = cat_button_clickable[i_button];&amp;#10;    button_text = cat_button_text[i_button];&amp;#10;    if (button.contains(cat_mouse_l)) {&amp;#10;        button.borderColor = &quot;red&quot;;&amp;#10;        button_text.color = &quot;red&quot;;&amp;#10;    } else {&amp;#10;        button.borderColor = &quot;black&quot;;&amp;#10;        button_text.color = &quot;black&quot;;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="rock_classification" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="trial_rock_train" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$trial_rock_image" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="trial_rock_train" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.1)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="trial_rock_size" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <MouseComponent name="cat_mouse_l" plugin="None">
        <Param val="...cat_button_clickable" valType="list" updates="constant" name="clickable"/>
        <Param val="" valType="list" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="valid click" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="cat_mouse_l" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="on valid click" valType="str" updates="None" name="saveMouseState"/>
        <Param val="" valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="mouse onset" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <TextComponent name="progress_bar_text" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="progress_bar_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.55, 0.42)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Progress" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="train_trial_counter" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="train_trial_counter" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.55, 0.42)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$trial_counter_txt" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="prog_bar_border" plugin="None">
        <Param val="center-left" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="color" updates="constant" name="lineColor"/>
        <Param val="4" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="prog_bar_border" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.4, 0.42)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.8, 0.03)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="prog_bar_rect" plugin="None">
        <Param val="center-left" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="black" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="color" updates="constant" name="lineColor"/>
        <Param val="4" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="prog_bar_rect" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.4, 0.42)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(prog_var * 0.8, 0.03)" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <CodeComponent name="store_trial_vars_train_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="cat_resp = cat_mouse_l.clicked_name[0].split(&quot;_&quot;)[0];&amp;#10;cat_resp_num = category_names.findIndex(element =&gt; element === cat_resp) + 1;&amp;#10;psychoJS.experiment.addData(&quot;resp&quot;, cat_resp_num);&amp;#10;psychoJS.experiment.addData(&quot;t_resp&quot;, util.round(cat_mouse_l.time[0], 3));" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="cat_resp = cat_mouse_l.clicked_name[0].split(&quot;_&quot;)[0]&amp;#10;thisExp.addData('resp', cat_resp)&amp;#10;thisExp.addData('t_resp', round(cat_mouse_l.time[0],3))&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="store_trial_vars_train_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Classification_test">
      <RoutineSettingsComponent name="Classification_test" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="Classification_test" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="full_screen_4" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="if frameN &gt; 10:&amp;#10;    if not psychoJS.window._windowAlreadyInFullScreen:&amp;#10;        alert(&quot;looks like you exited full screen mode. You must stay in full screen mode to be eligible to participate&quot;)&amp;#10;        quitPsychoJS('',false)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (frameN &gt; 10) {&amp;#10;    if (! psychoJS.window._windowAlreadyInFullScreen) {&amp;#10;    alert(&quot;looks like you exited full screen mode. You must stay in full screen mode to be eligible to participate&quot;);&amp;#10;    quitPsychoJS('',false);&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="full_screen_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="draw_button_panel_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="rect = [];&amp;#10;txt = [];&amp;#10;for (var i_cat = 0; i_cat &lt; buttons_ntotal; i_cat++) {&amp;#10;    rect = cat_button_clickable[i_cat];&amp;#10;    txt = cat_button_text[i_cat];&amp;#10;    rect.setAutoDraw(true);&amp;#10;    txt.setAutoDraw(true);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="rect = []&amp;#10;txt = []&amp;#10;for i_cat in range(buttons_ntotal):&amp;#10;    rect = cat_button_clickable[i_cat]&amp;#10;    txt = cat_button_text[i_cat]&amp;#10;    rect.setAutoDraw(True)&amp;#10;    txt.setAutoDraw(True)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="for (var i_cat = 0; i_cat &lt; buttons_ntotal; i_cat++) {&amp;#10;    rect = cat_button_clickable[i_cat];&amp;#10;    txt = cat_button_text[i_cat];&amp;#10;    rect.setAutoDraw(false);&amp;#10;    txt.setAutoDraw(false);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="for i_cat in range(buttons_ntotal):&amp;#10;    rect = cat_button_clickable[i_cat]&amp;#10;    txt = cat_button_text[i_cat]&amp;#10;    rect.setAutoDraw(False)&amp;#10;    txt.setAutoDraw(False)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="draw_button_panel_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="rock_classification_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="button = []&amp;#10;button_text = []&amp;#10;for i_button in range(buttons_ntotal):&amp;#10;    button = cat_button_clickable[i_button]&amp;#10;    button_text = cat_button_text[i_button]&amp;#10;    if button.contains(cat_mouse_l):&amp;#10;        button.borderColor = 'red'&amp;#10;        button_text.color = 'red'&amp;#10;    else:&amp;#10;        button.borderColor = 'black'&amp;#10;        button_text.color = 'black'" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="button = [];&amp;#10;button_text = [];&amp;#10;for (var i_button = 0; i_button &lt; buttons_ntotal; i_button++) {&amp;#10;    button = cat_button_clickable[i_button];&amp;#10;    button_text = cat_button_text[i_button];&amp;#10;    if (button.contains(cat_mouse_l)) {&amp;#10;        button.borderColor = &quot;red&quot;;&amp;#10;        button_text.color = &quot;red&quot;;&amp;#10;    } else {&amp;#10;        button.borderColor = &quot;black&quot;;&amp;#10;        button_text.color = &quot;black&quot;;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="rock_classification_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="extract_trial_rock_info_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="trial_image = test_images[blocks.thisN][test_trials.thisN];&amp;#10;trial_rock_info = extract_rock_info(trial_image.name);&amp;#10;trial_cat = trial_rock_info[&quot;type&quot;];&amp;#10;trial_token =trial_rock_info[&quot;token&quot;];&amp;#10;[rock_width, rock_height] = trial_image.size;&amp;#10;aspect_ratio = (rock_width / rock_height);&amp;#10;trial_rock_height = 0.6;&amp;#10;trial_rock_width = (trial_rock_height * aspect_ratio);&amp;#10;trial_rock_size = [trial_rock_width, trial_rock_height];" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="trial_image = test_images[blocks.thisN][test_trials.thisN]&amp;#10;trial_cat = extract_rock_info(trial_image)[&quot;type&quot;]&amp;#10;trial_token = extract_rock_info(trial_image)[&quot;token&quot;]&amp;#10;rock_width,rock_height = trial_rock_test.aspectRatio&amp;#10;aspect_ratio = rock_width/rock_height&amp;#10;&amp;#10;trial_rock_height = 0.6&amp;#10;trial_rock_width = trial_rock_height * aspect_ratio&amp;#10;trial_rock_size = [trial_rock_width,trial_rock_height]&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;  &amp;#10;    " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="extract_trial_rock_info_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="prog_bar_test" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="prog_total = (blocks.nTotal * n_trials_total);&amp;#10;prog_cur = ((((blocks.thisN * n_trials_total) + train_trials.nTotal) + test_trials.thisN) + 2);&amp;#10;prog_var = (prog_cur / prog_total);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="prog_total = blocks.nTotal * n_trials_total&amp;#10;prog_cur = blocks.thisN * n_trials_total + train_trials.nTotal + test_trials.thisN + 2&amp;#10;prog_var = prog_cur/prog_total&amp;#10;&amp;#10;  &amp;#10;    " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="prog_bar_test" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="trial_rock_test" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$directory_path + '/' + trial_image.name" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="trial_rock_test" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.1)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="trial_rock_size" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="progress_bar_text_3" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="progress_bar_text_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.55, 0.42)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Progress" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="test_trial_counter" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="test_trial_counter" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.55, 0.42)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$&quot;Trial # &quot; + str(test_trials.thisN + 1) + &quot;/&quot; + str(test_trials.nTotal)" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="prog_bar_border_2" plugin="None">
        <Param val="center-left" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="color" updates="constant" name="lineColor"/>
        <Param val="4" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="prog_bar_border_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.4, 0.42)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.8, 0.03)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="prog_bar_rect_2" plugin="None">
        <Param val="center-left" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="black" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="color" updates="constant" name="lineColor"/>
        <Param val="2" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="prog_bar_rect_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.4, 0.42)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(prog_var * 0.8, 0.03)" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <MouseComponent name="cat_mouse_t" plugin="None">
        <Param val="...cat_button_clickable" valType="list" updates="constant" name="clickable"/>
        <Param val="" valType="list" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="valid click" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="cat_mouse_t" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="on valid click" valType="str" updates="None" name="saveMouseState"/>
        <Param val="" valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="mouse onset" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <CodeComponent name="store_trial_vars_test" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;block&quot;, (blocks.thisN + 1));&amp;#10;psychoJS.experiment.addData(&quot;phase&quot;, 2);&amp;#10;psychoJS.experiment.addData(&quot;trial&quot;, (test_trials.thisN + 1));&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="thisExp.addData('block', blocks.thisN + 1)&amp;#10;thisExp.addData('phase', 2)&amp;#10;thisExp.addData('trial', test_trials.thisN + 1)&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="trial_cat_num = category_names.findIndex(element =&gt; element === trial_cat) + 1;&amp;#10;cat_resp = cat_mouse_t.clicked_name.slice((- 1))[0].split(&quot;_&quot;)[0];&amp;#10;cat_resp_num = category_names.findIndex(element =&gt; element === cat_resp) + 1;&amp;#10;&amp;#10;psychoJS.experiment.addData(&quot;cat&quot;, trial_cat_num);&amp;#10;psychoJS.experiment.addData(&quot;token&quot;, trial_token);&amp;#10;psychoJS.experiment.addData(&quot;resp&quot;, cat_resp_num);&amp;#10;psychoJS.experiment.addData(&quot;corr&quot;, +(cat_resp === trial_cat));&amp;#10;psychoJS.experiment.addData(&quot;t_resp&quot;, util.round(cat_mouse_t.time[0], 3));&amp;#10;&amp;#10;cat_list.push(trial_cat);&amp;#10;resp_list.push(cat_resp);&amp;#10;accuracy_dict[trial_cat].push(cat_resp == trial_cat);" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="thisExp.addData('cat', trial_cat)&amp;#10;thisExp.addData('token', trial_token)&amp;#10;cat_resp = cat_mouse_t.clicked_name[-1].split(&quot;_&quot;)[0]&amp;#10;thisExp.addData('resp', cat_resp)&amp;#10;thisExp.addData('corr', int(cat_resp === trial_cat))&amp;#10;thisExp.addData('t_resp', round(cat_mouse_t.time[0],3))&amp;#10;&amp;#10;cat_list.append(trial_cat)&amp;#10;resp_list.append(cat_resp)&amp;#10;accuracy_dict[trial_cat].append(cat_resp == trial_cat)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="store_trial_vars_test" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="train_instructions">
      <RoutineSettingsComponent name="train_instructions" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="train_instructions" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="full_screen_5" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="if frameN &gt; 10:&amp;#10;    if not psychoJS.window._windowAlreadyInFullScreen:&amp;#10;        alert(&quot;looks like you exited full screen mode. You must stay in full screen mode to be eligible to participate&quot;)&amp;#10;        quitPsychoJS('',false)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (frameN &gt; 10) {&amp;#10;    if (! psychoJS.window._windowAlreadyInFullScreen) {&amp;#10;    alert(&quot;looks like you exited full screen mode. You must stay in full screen mode to be eligible to participate&quot;);&amp;#10;    quitPsychoJS('',false);&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="full_screen_5" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="instruction_image_train" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$train_slide" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="instruction_image_train" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1.1, 0.62)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="leftArrow" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="img/leftarrow.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="leftArrow" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="arrowPos_back" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="arrowSize" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="rightArrow" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="img/rightarrow.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="rightArrow" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="arrowPos_next" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="arrowSize" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <MouseComponent name="instruct_mouse_train" plugin="None">
        <Param val="leftArrow,rightArrow" valType="list" updates="constant" name="clickable"/>
        <Param val="" valType="list" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="valid click" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="instruct_mouse_train" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="never" valType="str" updates="None" name="saveMouseState"/>
        <Param val="" valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="mouse onset" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <TextComponent name="instruct_counter_train" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="instruct_counter_train" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.45)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(cur_row_train + 1) + '/' + str(max_slides_train + 1)" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="test_instructions">
      <RoutineSettingsComponent name="test_instructions" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="test_instructions" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="full_screen_6" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="if frameN &gt; 10:&amp;#10;    if not psychoJS.window._windowAlreadyInFullScreen:&amp;#10;        alert(&quot;looks like you exited full screen mode. You must stay in full screen mode to be eligible to participate&quot;)&amp;#10;        quitPsychoJS('',false)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (frameN &gt; 10) {&amp;#10;    if (! psychoJS.window._windowAlreadyInFullScreen) {&amp;#10;    alert(&quot;looks like you exited full screen mode. You must stay in full screen mode to be eligible to participate&quot;);&amp;#10;    quitPsychoJS('',false);&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="full_screen_6" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="instruction_image_test" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$test_slide" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="instruction_image_test" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1.1, 0.62)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="leftArrow_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="img/leftarrow.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="leftArrow_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="arrowPos_back" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="arrowSize" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="rightArrow_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="img/rightarrow.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="rightArrow_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="arrowPos_next" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="arrowSize" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <MouseComponent name="instruct_mouse_test" plugin="None">
        <Param val="leftArrow_2,rightArrow_2" valType="list" updates="constant" name="clickable"/>
        <Param val="" valType="list" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="valid click" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="instruct_mouse_test" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="never" valType="str" updates="None" name="saveMouseState"/>
        <Param val="" valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="mouse onset" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <TextComponent name="instruct_counter_test" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="instruct_counter_test" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.45)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(cur_row_test + 1) + '/' + str(max_slides_test + 1)" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="test_instrPrep">
      <RoutineSettingsComponent name="test_instrPrep" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="test_instrPrep" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="instrPrecode_test" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="cur_row_test = 0&amp;#10;show_instructions_test = 1&amp;#10;max_slides_test = 3 -1&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="cur_row_test = 0;&amp;#10;show_instructions_test = 1;&amp;#10;max_slides_test = (3 - 1);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if (instruct_mouse_test.isPressedIn(rightArrow_2)) {&amp;#10;    cur_row_test += 1;&amp;#10;} else {&amp;#10;    if (instruct_mouse_test.isPressedIn(leftArrow_2)) {&amp;#10;        cur_row_test -= 1;&amp;#10;    }&amp;#10;}&amp;#10;if ((cur_row_test &lt; 0)) {&amp;#10;    cur_row_test = 0;&amp;#10;}&amp;#10;if ((cur_row_test &gt; max_slides_test)) {&amp;#10;    testInstructions_controller.finished = 1;&amp;#10;    show_instructions_test = 0;&amp;#10;    cur_row_test = (max_slides_test - 1);&amp;#10;}&amp;#10;cur_row_test_string = cur_row_test.toString();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if(instruct_mouse_test.isPressedIn(rightArrow_2)):&amp;#10;    cur_row_test += 1&amp;#10;elif(instruct_mouse_test.isPressedIn(leftArrow_2)):&amp;#10;    cur_row_test -= 1&amp;#10;  &amp;#10;if(cur_row_test &lt; 0):&amp;#10;    cur_row_test = 0&amp;#10;    &amp;#10;if(cur_row_test &gt; max_slides_test):&amp;#10;    testInstructions_controller.finished = 1&amp;#10;    show_instructions_test = 0&amp;#10;    &amp;#10;    cur_row_test = max_slides_test - 1&amp;#10;&amp;#10;cur_row_test_string = str(cur_row_test)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="instrPrecode_test" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="fixation">
      <RoutineSettingsComponent name="fixation" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="fixation" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="['TCN','TCR'].includes(expInfo['condition'])" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="full_screen_7" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="if frameN &gt; 10:&amp;#10;    if not psychoJS.window._windowAlreadyInFullScreen:&amp;#10;        alert(&quot;looks like you exited full screen mode. You must stay in full screen mode to be eligible to participate.&quot;)&amp;#10;        quitPsychoJS('',false)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (frameN &gt; 10) {&amp;#10;    if (! psychoJS.window._windowAlreadyInFullScreen) {&amp;#10;    alert(&quot;looks like you exited full screen mode. You must stay in full screen mode to be eligible to participate.&quot;);&amp;#10;    quitPsychoJS('',false);&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="full_screen_7" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="fix_end_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="if fix_circle.contains(fix_mouse):&amp;#10;    continueRoutine = False&amp;#10;    &amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (fix_circle.contains(fix_mouse)) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="fix_end_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="fix_text" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="fix_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.1)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="move your mouse to the dot at the center to continue" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="fix_circle" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="black" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="fix_circle" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.03, 0.03)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <MouseComponent name="fix_mouse" plugin="None">
        <Param val="" valType="list" updates="constant" name="clickable"/>
        <Param val="" valType="list" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="never" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="fix_mouse" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="never" valType="str" updates="None" name="saveMouseState"/>
        <Param val="" valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="mouse onset" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
    </Routine>
    <Routine name="Selection_train">
      <RoutineSettingsComponent name="Selection_train" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="Selection_train" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="full_screen_8" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="if frameN &gt; 10:&amp;#10;    if not psychoJS.window._windowAlreadyInFullScreen:&amp;#10;        alert(&quot;looks like you exited full screen mode. You must stay in full screen mode to be eligible to participate&quot;)&amp;#10;        quitPsychoJS('',false)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (frameN &gt; 10) {&amp;#10;    if (! psychoJS.window._windowAlreadyInFullScreen) {&amp;#10;    alert(&quot;looks like you exited full screen mode. You must stay in full screen mode to be eligible to participate&quot;);&amp;#10;    quitPsychoJS('',false);&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="full_screen_8" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="rock_selection" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="for i_rock in range(num_rows*num_cols):&amp;#10;    MousePos = learn_mouse.getPos()&amp;#10;    rock = rock_grid[i_rock]&amp;#10;    rect = rock_rect_grid[i_rock]&amp;#10;    rockPos = rock.pos&amp;#10;    if eventfun.xydist(MousePos,rockPos) &lt; max(rockSize)*.5:&amp;#10;        rock.size = [.15,.15]&amp;#10;        rect.lineColor = &quot;red&quot;&amp;#10;    else:&amp;#10;        rock.size = gridSize&amp;#10;        rect.lineColor = &quot;black&quot;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="MousePos = [];&amp;#10;rock = [];&amp;#10;rect = [];&amp;#10;rockPos = [];&amp;#10;for (var i_rock = 0; i_rock &lt; num_rows * num_cols; i_rock++) {&amp;#10;    MousePos = learn_mouse.getPos();&amp;#10;    rock = rock_grid[i_rock];&amp;#10;    rockPos = rock.pos;&amp;#10;    if (EuclidDist(MousePos, rockPos) &lt; Math.max(...gridSize) * 0.5) {&amp;#10;        rock.size = rockSize_large;&amp;#10;    } else {&amp;#10;        rock.size = gridSize;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="aspectRatio_clicked = [];&amp;#10;rock_clicked = [];&amp;#10;filename_clicked = [];&amp;#10;cat_clicked = [];&amp;#10;token_clicked = [];&amp;#10;row_clicked = [];&amp;#10;col_clicked = [];&amp;#10;for (var i_rock = 0; i_rock &lt; num_rows * num_cols; i_rock++) {&amp;#10;    let rock = rock_grid[i_rock];&amp;#10;    let irow = rock_rows[i_rock];&amp;#10;    let icol = rock_cols[i_rock];&amp;#10;    let rock_fileInfo = grid_image_fileInfo[irow][icol];&amp;#10;    let rock_aspect_ratio = rock_fileInfo.size;&amp;#10;    let rock_filename = rock_fileInfo.name;&amp;#10;    let cat = extract_rock_info(rock_filename)[&quot;type&quot;];&amp;#10;    let token = extract_rock_info(rock_filename)[&quot;token&quot;];&amp;#10;    if (learn_mouse.isPressedIn(rock)) {&amp;#10;        aspectRatio_clicked = rock_aspect_ratio;&amp;#10;        rock_clicked = rock;&amp;#10;        filename_clicked = rock_filename;&amp;#10;        cat_clicked = cat;&amp;#10;        token_clicked = token;&amp;#10;        row_clicked = irow + 1;&amp;#10;        col_clicked = icol + 1;&amp;#10;    }&amp;#10;}" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="irow = []&amp;#10;icol = []&amp;#10;rock_aspect_ratio = []&amp;#10;rock_filename = []&amp;#10;cat = []&amp;#10;token = []&amp;#10;aspectRatio_clicked = []&amp;#10;rock_clicked = []&amp;#10;filename_clicked = []&amp;#10;cat_clicked = []&amp;#10;token_clicked = []&amp;#10;row_clicked = []&amp;#10;col_clicked = []&amp;#10;for i_rock in range(num_rows*num_cols):&amp;#10;    rock = rock_grid[i_rock]&amp;#10;    irow = rock_rows[i_rock]&amp;#10;    icol = rock_cols[i_rock]&amp;#10;    rock_aspect_ratio = rocks_orig_size[i_rock]&amp;#10;    rock_filename = grid_image_files[irow][icol]&amp;#10;    cat = extract_rock_info(rock_filename)[&quot;type&quot;]&amp;#10;    token = extract_rock_info(rock_filename)[&quot;token&quot;]&amp;#10;    if learn_mouse.isPressedIn(rock):&amp;#10;        aspectRatio_clicked = rock_aspect_ratio&amp;#10;        rock_clicked = rock&amp;#10;        filename_clicked = rock_filename&amp;#10;        cat_clicked = cat&amp;#10;        token_clicked = token&amp;#10;        row_clicked = irow + 1&amp;#10;        col_clicked = icol + 1&amp;#10;            &amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="rock_selection" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="draw_rock_grid" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="trial_image_name = [];&amp;#10;grid_image_fileName = [];&amp;#10;for (var i_rock = 0; i_rock &lt; num_rows * num_cols; i_rock++) {&amp;#10;    rock_rect = rock_rect_grid[i_rock];&amp;#10;    rock_image = rock_grid[i_rock];&amp;#10;    rock_image.setAutoDraw(true);&amp;#10;    if (expInfo[&quot;condition&quot;] === 'SCR') {&amp;#10;        trial_image_name = train_block_images[train_trials.thisN].name;&amp;#10;        grid_image_fileName = rock_fileName_grid[i_rock];&amp;#10;        if (grid_image_fileName === trial_image_name) {&amp;#10;            rock_rect.setAutoDraw(true);&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="for i_rock in range(num_rows * num_cols):&amp;#10;    rock_rect = rock_rect_grid[i_rock]&amp;#10;    rock_image = rock_grid[i_rock]&amp;#10;    rock_image.setAutoDraw(True)&amp;#10;    if expInfo['condition'] == 'SCR':&amp;#10;        trial_image = train_block_images[train_trials.thisN]&amp;#10;        if trial_image.name in rock_image.image:&amp;#10;            rock_rect.setAutoDraw(True)&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="for (var i_rock = 0; i_rock &lt; num_rows * num_cols; i_rock++) {&amp;#10;    rock_rect = rock_rect_grid[i_rock];&amp;#10;    rock_image = rock_grid[i_rock];&amp;#10;    rock_image.setAutoDraw(false);&amp;#10;    if (expInfo[&quot;condition&quot;] === 'SCR') {&amp;#10;        trial_image_name = train_block_images[train_trials.thisN].name;&amp;#10;        grid_image_fileName = rock_fileName_grid[i_rock];&amp;#10;        if (grid_image_fileName === trial_image_name) {&amp;#10;            rock_rect.setAutoDraw(false);&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;&amp;#10;//cat = extract_rock_info(trial_image_name)[&quot;type&quot;];&amp;#10;//token = extract_rock_info(trial_image_name)[&quot;token&quot;];&amp;#10;//console.log(trial_image_name, cat, token);" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="for i_rock in range(num_rows * num_cols):&amp;#10;    rock_rect = rock_rect_grid[i_rock]&amp;#10;    rock_image = rock_grid[i_rock]&amp;#10;    rock_image.setAutoDraw(False)&amp;#10;    if expInfo['condition'] == 'SCR':&amp;#10;        trial_image = train_block_images[train_trials.thisN]&amp;#10;        if trial_image.name in rock_image.image:&amp;#10;            rock_rect.setAutoDraw(False)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="draw_rock_grid" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="draw_color_gradient" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="color_gradient = visual.ImageStim(&amp;#10;        win=win,&amp;#10;        name='color_gradient', &amp;#10;        image='img/color_gradient.png', mask=None, anchor='center',&amp;#10;        ori=0.0, pos=(0.68, 0), size=(0.16, 0.8),&amp;#10;        color='white', colorSpace='rgb', opacity=None,&amp;#10;        flipHoriz=False, flipVert=False,&amp;#10;        texRes=128.0, interpolate=True, depth=-3.0)" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="color_gradient = new visual.ImageStim({&quot;win&quot;: psychoJS.window, &quot;name&quot;: &quot;color_gradient&quot;, &quot;image&quot;: &quot;img/color_gradient.png&quot;, &quot;mask&quot;: null, &quot;anchor&quot;: &quot;center&quot;, &quot;ori&quot;: 0.0, &quot;pos&quot;: [0.68, 0], &quot;size&quot;: [0.16, 0.8], &quot;color&quot;: &quot;white&quot;, &quot;colorSpace&quot;: &quot;rgb&quot;, &quot;opacity&quot;: null, &quot;flipHoriz&quot;: false, &quot;flipVert&quot;: false, &quot;texRes&quot;: 128.0, &quot;interpolate&quot;: true, &quot;depth&quot;: (- 3.0)});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((blocks.thisN &gt; 0)) {&amp;#10;    color_gradient.setAutoDraw(true);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if blocks.thisN &gt; 0:&amp;#10;    color_gradient.setAutoDraw(True)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((blocks.thisN &gt; 0)) {&amp;#10;    color_gradient.setAutoDraw(false);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if blocks.thisN &gt; 0:&amp;#10;    color_gradient.setAutoDraw(False)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="draw_color_gradient" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="rock_grid_text" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="rock_grid_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Click on the rock you want to study next" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <MouseComponent name="learn_mouse" plugin="None">
        <Param val="...rock_grid" valType="list" updates="constant" name="clickable"/>
        <Param val="" valType="list" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="valid click" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="learn_mouse" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="on valid click" valType="str" updates="None" name="saveMouseState"/>
        <Param val="" valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="mouse onset" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <CodeComponent name="store_trial_vars_train" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;block&quot;, (blocks.thisN + 1));&amp;#10;psychoJS.experiment.addData(&quot;phase&quot;, 1);&amp;#10;psychoJS.experiment.addData(&quot;trial&quot;, (train_trials.thisN + 1));&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="thisExp.addData('block', blocks.thisN + 1)&amp;#10;thisExp.addData('phase', 1)&amp;#10;thisExp.addData('trial', train_trials.thisN + 1)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="cat_clicked_num = category_names.findIndex(cat =&gt; cat === cat_clicked) + 1;&amp;#10;psychoJS.experiment.addData(&quot;cat&quot;, cat_clicked_num);&amp;#10;psychoJS.experiment.addData(&quot;token&quot;, token_clicked);&amp;#10;psychoJS.experiment.addData(&quot;row&quot;, row_clicked);&amp;#10;psychoJS.experiment.addData(&quot;col&quot;, col_clicked);&amp;#10;psychoJS.experiment.addData(&quot;t_select&quot;, util.round(learn_mouse.time[0], 3));&amp;#10;if (expInfo[&quot;condition&quot;] === 'SCR'){&amp;#10;    cat_rec = extract_rock_info(trial_image_name)[&quot;type&quot;];&amp;#10;    cat_rec_num = category_names.findIndex(cat =&gt; cat === cat_rec) + 1;&amp;#10;    token_rec = extract_rock_info(trial_image_name)[&quot;token&quot;];&amp;#10;    psychoJS.experiment.addData(&quot;cat_rec&quot;, cat_rec_num);&amp;#10;    psychoJS.experiment.addData(&quot;token_rec&quot;, token_rec);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="thisExp.addData('cat', cat_clicked)&amp;#10;thisExp.addData('token', token_clicked)&amp;#10;thisExp.addData('row', row_clicked)&amp;#10;thisExp.addData('col', col_clicked)&amp;#10;thisExp.addData('t_select', round(learn_mouse.time[0],3))&amp;#10;if expInfo[&quot;condition&quot;] == 'SCR':&amp;#10;    rock_info = extract_rock_info(trial_image_name)&amp;#10;    cat_rec = rock_info[&quot;type&quot;]&amp;#10;    cat_rec_num = category_names.index(cat_rec) + 1&amp;#10;    token_rec = rock_info[&quot;token&quot;]&amp;#10;    psychoJS.experiment.addData(&quot;cat_rec&quot;, cat_rec_num)&amp;#10;    psychoJS.experiment.addData(&quot;token_rec&quot;, token_rec)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="store_trial_vars_train" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Sampling_train">
      <RoutineSettingsComponent name="Sampling_train" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="Sampling_train" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="full_screen_9" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="if frameN &gt; 10:&amp;#10;    if not psychoJS.window._windowAlreadyInFullScreen:&amp;#10;        alert(&quot;looks like you exited full screen mode. You must stay in full screen mode to be eligible to participate&quot;)&amp;#10;        quitPsychoJS('',false)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (frameN &gt; 10) {&amp;#10;    if (! psychoJS.window._windowAlreadyInFullScreen) {&amp;#10;    alert(&quot;looks like you exited full screen mode. You must stay in full screen mode to be eligible to participate&quot;);&amp;#10;    quitPsychoJS('',false);&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="full_screen_9" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="draw_rock_grid_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="for (let rock_image of rock_grid) {&amp;#10;    rock_image.setAutoDraw(true);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="for rock_image in rock_grid:&amp;#10;    rock_image.setAutoDraw(True)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="for (let rock_image of rock_grid) {&amp;#10;    rock_image.setAutoDraw(false);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="for rock_image in rock_grid:&amp;#10;    rock_image.setAutoDraw(False)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="draw_rock_grid_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="prompt_mouseover" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="if rock_grid_rect_2.contains(learn_mouse_2):&amp;#10;        rock_grid_text_color = 'red'&amp;#10;        rock_grid_rect_color = 'red'&amp;#10;    else:&amp;#10;        rock_grid_text_color = 'black'&amp;#10;        rock_grid_rect_color = 'black'" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (rock_grid_rect_2.contains(learn_mouse_2)) {&amp;#10;        rock_grid_text_color = 'red';&amp;#10;        rock_grid_rect_color = 'red';&amp;#10;    } else {&amp;#10;        rock_grid_text_color = 'black';&amp;#10;        rock_grid_rect_color = 'black';&amp;#10;    }" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="prompt_mouseover" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="rock_grid_rect_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$rock_grid_rect_color" valType="color" updates="set every frame" name="lineColor"/>
        <Param val="2" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="rock_grid_rect_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.42, 0.05)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="rock_grid_text_2" plugin="None">
        <Param val="$rock_grid_text_color" valType="color" updates="set every frame" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="rock_grid_text_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Click here to continue" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="extract_trial_rock_info" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="trial_image = train_block_images[train_trials.thisN];&amp;#10;trial_rock_info = extract_rock_info(trial_image.name);&amp;#10;trial_cat = trial_rock_info[&quot;type&quot;];&amp;#10;trial_token = trial_rock_info[&quot;token&quot;];&amp;#10;[rock_width, rock_height] = trial_image.size;&amp;#10;&amp;#10;trial_rock_file = trial_image.name;&amp;#10;trial_rock_cat = trial_cat;&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="trial_image = train_block_images[train_trials.thisN]&amp;#10;trial_cat = extract_rock_info(trial_image)[&quot;type&quot;]&amp;#10;trial_token = extract_rock_info(trial_image)[&quot;token&quot;]&amp;#10;rock_width,rock_height = trial_rock_train.aspectRatio&amp;#10;&amp;#10;trial_rock_file = trial_image&amp;#10;trial_rock_cat = trial_cat&amp;#10;rock_width,rock_height = trial_rock_test.aspectRatio" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="extract_trial_rock_info" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <MouseComponent name="learn_mouse_2" plugin="None">
        <Param val="rock_grid_rect_2" valType="list" updates="constant" name="clickable"/>
        <Param val="" valType="list" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="any click" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="learn_mouse_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="on click" valType="str" updates="None" name="saveMouseState"/>
        <Param val="" valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="mouse onset" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <CodeComponent name="store_trial_vars_train_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;block&quot;, (blocks.thisN + 1));&amp;#10;psychoJS.experiment.addData(&quot;phase&quot;, 1);&amp;#10;psychoJS.experiment.addData(&quot;trial&quot;, (train_trials.thisN + 1));&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="thisExp.addData('block', blocks.thisN + 1)&amp;#10;thisExp.addData('phase', 1)&amp;#10;thisExp.addData('trial', train_trials.thisN + 1)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="trial_cat_num = category_names.findIndex(element =&gt; element === trial_cat) + 1;&amp;#10;psychoJS.experiment.addData(&quot;cat&quot;, trial_cat_num);&amp;#10;psychoJS.experiment.addData(&quot;token&quot;, trial_token);&amp;#10;psychoJS.experiment.addData(&quot;row&quot;, (- 1));&amp;#10;psychoJS.experiment.addData(&quot;col&quot;, (- 1));&amp;#10;psychoJS.experiment.addData(&quot;t_select&quot;, util.round(learn_mouse_2.time[0], 3));&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="thisExp.addData('cat', trial_cat)&amp;#10;thisExp.addData('token', trial_token)&amp;#10;thisExp.addData('row', -1)&amp;#10;thisExp.addData('col', -1)&amp;#10;thisExp.addData('t_select', round(learn_mouse_2.time[0],3))" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="store_trial_vars_train_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="debrief">
      <RoutineSettingsComponent name="debrief" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="debrief" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <ImageComponent name="debrief_report" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="Instructions/debrief.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="debrief_report" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1.4, 0.8)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="next_end_expt" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="img/next.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="next_end_expt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="next_buttonSize" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <MouseComponent name="next_mouse_end_expt" plugin="None">
        <Param val="next_end_expt" valType="list" updates="constant" name="clickable"/>
        <Param val="" valType="list" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="valid click" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="next_mouse_end_expt" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="never" valType="str" updates="None" name="saveMouseState"/>
        <Param val="" valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="mouse onset" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <CodeComponent name="end_expt_var" plugin="None">
        <Param val="end_message = ' After you click &quot;ok&quot;, you will be redirected to a short survey.'&amp;#10;redirect_url = 'https://iu.co1.qualtrics.com/jfe/form/SV_cBXYDpPQBCfKI2G?participant=' + expInfo['participant'] + '&amp;condition=' + expInfo['condition']" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="let end_message = &quot; After you click \&quot;ok\&quot;, you will be redirected to a short survey.&quot;;&amp;#10;let incomplete_url = &quot;https://app.prolific.com/submissions/complete?cc=C15JKIPY&quot;;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="let complete_url = &quot;https://iu.co1.qualtrics.com/jfe/form/SV_cBXYDpPQBCfKI2G?participant=&quot; + expInfo[&quot;participant&quot;] + &quot;&amp;condition=&quot; + expInfo[&quot;condition&quot;] + &quot;&amp;bonus=&quot; + hasBonus;&amp;#10;psychoJS.setRedirectUrls(complete_url, incomplete_url);" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="end_expt_var" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="expt_setup">
      <RoutineSettingsComponent name="expt_setup" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="expt_setup" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="function_def" plugin="None">
        <Param val="import random&amp;#10;import numpy as np&amp;#10;import os&amp;#10;import psychopy.event as eventfun&amp;#10;import math&amp;#10;&amp;#10;def shuffle_nested_list(nested_list):&amp;#10;    # Convert nested list to numpy array&amp;#10;    arr = np.array(nested_list)&amp;#10;    &amp;#10;    # Flatten the array, shuffle it, and then reshape&amp;#10;    flattened_arr = arr.flatten()&amp;#10;    np.random.shuffle(flattened_arr)&amp;#10;    reshaped_arr = flattened_arr.reshape(arr.shape)&amp;#10;    &amp;#10;    # Convert reshaped array back to a nested list&amp;#10;    shuffled_list = reshaped_arr.tolist()&amp;#10;    return shuffled_list&amp;#10;    &amp;#10;def extract_rock_info(fileName):&amp;#10;    # Split by underscores and get the middle part (rock type)&amp;#10;    rock_type = fileName.split(&quot;_&quot;)[1]&amp;#10;    &amp;#10;    # Split by dot to remove file extension and get the token part&amp;#10;    token = fileName.split(&quot;.&quot;)[0].split(&quot;_&quot;)[-1]&amp;#10;    &amp;#10;    # Check if rock_type starts with uppercase and token is two-digit&amp;#10;    if rock_type[0].isupper() and rock_type[1:].islower() and token.isdigit():&amp;#10;        rock_info = {'type':rock_type,'token':token}&amp;#10;        return rock_info&amp;#10;    return None&amp;#10;&amp;#10;def prop_to_count(proportions, target_sum):&amp;#10;    &amp;#10;    # Step 1: Calculate raw values and round them&amp;#10;    raw_values = [prop * target_sum for prop in proportions]&amp;#10;    rounded_values = [round(value) for value in raw_values]&amp;#10;&amp;#10;    # Step 2: Calculate the difference from the target sum&amp;#10;    current_sum = sum(rounded_values)&amp;#10;    difference = target_sum - current_sum&amp;#10;&amp;#10;    # Step 3 &amp; 4: Adjust the numbers to reach the target sum&amp;#10;    while difference != 0:&amp;#10;        for i in range(len(rounded_values)):&amp;#10;            if difference == 0:&amp;#10;                break&amp;#10;            # Find if we need to increment or decrement&amp;#10;            if difference &gt; 0 and raw_values[i] - rounded_values[i] &gt; 0:&amp;#10;                # Increment the value if it was rounded down&amp;#10;                rounded_values[i] += 1&amp;#10;                difference -= 1&amp;#10;            elif difference &lt; 0 and raw_values[i] - rounded_values[i] &lt; 0:&amp;#10;                # Decrement the value if it was rounded up and is greater than 0&amp;#10;                if rounded_values[i] &gt; 0:&amp;#10;                    rounded_values[i] -= 1&amp;#10;                    difference += 1&amp;#10;&amp;#10;    return rounded_values&amp;#10;&amp;#10;&amp;#10;            &amp;#10;            &amp;#10;            &amp;#10;        &amp;#10;" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="function isUpper(str) {return /^[A-Z]+$/.test(str); }&amp;#10;function isLower(str) {return /^[a-z]+$/.test(str); }&amp;#10;function reshapeArray(flatArray, dimensions) {&amp;#10;    function reshape(currentArray, dims) {&amp;#10;        if (dims.length === 1) {&amp;#10;            return currentArray.splice(0, dims[0]);&amp;#10;        }&amp;#10;&amp;#10;        let result = [];&amp;#10;        for (let i = 0; i &lt; dims[0]; i++) {&amp;#10;            result.push(reshape([...currentArray], dims.slice(1)));&amp;#10;            currentArray.splice(0, dims[1]);&amp;#10;        }&amp;#10;        return result;&amp;#10;    }&amp;#10;&amp;#10;    return reshape([...flatArray], dimensions);&amp;#10;}&amp;#10;function ArraySize(arr) {&amp;#10;    let dimensions = [];&amp;#10;&amp;#10;    while(Array.isArray(arr)) {&amp;#10;        dimensions.push(arr.length);&amp;#10;        arr = arr[0];&amp;#10;    }&amp;#10;&amp;#10;    return dimensions;&amp;#10;}&amp;#10;function shuffleListElement(nestedList) {&amp;#10;    const flatList = nestedList.flat(Infinity);&amp;#10;    for (let i = flatList.length - 1; i &gt; 0; i--) {&amp;#10;        const j = Math.floor(Math.random() * (i + 1));&amp;#10;        [flatList[i], flatList[j]] = [flatList[j], flatList[i]];&amp;#10;    }&amp;#10;    return reshapeArray(flatList, ArraySize(nestedList));&amp;#10;}&amp;#10;function getRandomSample(list, numSamples) {&amp;#10;  let sample_list = [];&amp;#10;  let tempList = [...list]; &amp;#10;  for (let i = 0; i &lt; numSamples; i++) {&amp;#10;    // If the temporary list is exhausted, refill and shuffle it&amp;#10;    if (tempList.length === 0) {&amp;#10;      tempList = [...list];&amp;#10;      shuffleListElement(tempList);&amp;#10;    }&amp;#10;    // Pick an element and remove it from the temporary array&amp;#10;    const randomIndex = Math.floor(Math.random() * tempList.length);&amp;#10;    sample_list.push(tempList.splice(randomIndex, 1)[0]);&amp;#10;  }&amp;#10;  return sample_list;&amp;#10;}&amp;#10;&amp;#10;function extract_rock_info(fileName) {&amp;#10;    var rock_type,token,rock_info;&amp;#10;    rock_type = fileName.split(&quot;_&quot;)[1];&amp;#10;    token = fileName.split(&quot;.&quot;)[0].split(&quot;_&quot;).slice((- 1))[0];&amp;#10;    if (isUpper(rock_type[0]) &amp;&amp; isLower(rock_type.slice(1)) &amp;&amp; !isNaN(token)) {&amp;#10;        rock_info = {&quot;type&quot;: rock_type, &quot;token&quot;: token};&amp;#10;        return rock_info;&amp;#10;    }&amp;#10;    return null;&amp;#10;}&amp;#10;&amp;#10;function EuclidDist(p1, p2) {&amp;#10;  let sum = 0;&amp;#10;  for (let i = 0; i &lt; p1.length; i++) {&amp;#10;    sum += Math.pow((p2[i] - p1[i]), 2);&amp;#10;  }&amp;#10;  return Math.sqrt(sum);&amp;#10;}&amp;#10;//function standardize(xlist) {&amp;#10;//    var n_elem, ylist;&amp;#10;//    n_elem = xlist.length;&amp;#10;//    for (var i, _pj_c = 0, _pj_a = util.range(n_elem), _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;//        i = _pj_a[_pj_c];&amp;#10;//        ylist.push(((xlist[i] - Math.min(...xlist)) / (Math.max(...xlist) - Math.min(...xlist))));&amp;#10;//    }&amp;#10;//    return ylist;&amp;#10;//}&amp;#10;function prop_to_count(proportions, target_sum) {&amp;#10;    var current_sum, current_diff, target_values, current_values, maxIterations, iteration;&amp;#10;    target_values = proportions.map(prop =&gt; prop * target_sum);&amp;#10;    current_values = target_values.map(value =&gt; util.round(value));&amp;#10;    current_sum = util.sum(current_values);&amp;#10;    current_diff = target_values.map((num, index) =&gt; num - current_values[index]);&amp;#10;    maxIterations = 1000; // Set a maximum number of iterations to prevent infinite loop&amp;#10;    iteration = 0;&amp;#10;    function findRandomIndexOfExtreme(list, extremeFunc) {&amp;#10;      const extremeVal = extremeFunc(...list);&amp;#10;      const extremeIndices = list&amp;#10;          .map((value, index) =&gt; value === extremeVal ? index : -1)&amp;#10;          .filter(index =&gt; index !== -1);&amp;#10;      return extremeIndices[Math.floor(Math.random() * extremeIndices.length)];&amp;#10;    };&amp;#10;&amp;#10;    while (current_sum !== target_sum &amp;&amp; iteration &lt; maxIterations) {&amp;#10;            while (current_sum &gt; target_sum){&amp;#10;                let i = findRandomIndexOfExtreme(current_diff, Math.min);&amp;#10;                current_values[i] -= 1;&amp;#10;                current_diff[i] += 1;&amp;#10;                current_sum -= 1;&amp;#10;            }&amp;#10;            while (current_sum &lt; target_sum){&amp;#10;                let i = findRandomIndexOfExtreme(current_diff, Math.max);&amp;#10;                current_values[i] += 1;&amp;#10;                current_diff[i] -= 1;&amp;#10;                current_sum += 1;&amp;#10;            }&amp;#10;        }&amp;#10;        iteration++;&amp;#10;    return current_values;&amp;#10;};&amp;#10;//function ComputePredictAccuracy(train_dict, probe_dict, stim_dict) {&amp;#10;//    var corr_cat, probe_coord, probes_pred_corr, train_plus_stim_dict, sum_sim_corr, sum_sim_total, train_cat, train_coord, train_dist;&amp;#10;//    probes_pred_corr = [];&amp;#10;//    for (var j = 0; j &lt; probe_dict.length; j++) {&amp;#10;//        j = _pj_a[_pj_c];&amp;#10;//        probe_coord = probe_dict[j].coord;&amp;#10;//        corr_cat = probe_dict[j].cat;&amp;#10;//        sum_sim_corr = 0;&amp;#10;//        sum_sim_total = 0;&amp;#10;//        train_plus_stim_dict = train_dict.concat(stim_dict);//assumes the length of stim_dict to be 1&amp;#10;//        for (var i = 0; i &lt; train_plus_stim_dict.length; i++) {&amp;#10;//            train_coord = train_plus_stim_dict[i].coord;&amp;#10;//            train_dist = EuclidDist(train_coord, probe_coord);&amp;#10;//            train_cat = train_plus_stim_dict[i].cat;&amp;#10;//            sum_sim_total += Math.exp((- train_dist));&amp;#10;//            if ((train_cat === corr_cat)) {&amp;#10;//                sum_sim_corr += Math.exp((- train_dist));&amp;#10;//            }&amp;#10;//        }&amp;#10;//        probes_pred_corr.push((sum_sim_corr / sum_sim_total));&amp;#10;//    }&amp;#10;//    return util.average(probes_pred_corr);&amp;#10;//}&amp;#10;&amp;#10;function partitionList(originalList, separatePairs) {&amp;#10;    const separateNumbers = [...new Set(separatePairs.flat())];&amp;#10;    var filteredList, partition;&amp;#10;    filteredList = originalList.filter(n =&gt; !separateNumbers.includes(n));&amp;#10;    partitions = [[], []];&amp;#10;    separatePairs.forEach(pair =&gt; {&amp;#10;        if (Math.random() &lt; 0.5) {&amp;#10;            partitions[0].push(pair[0]);&amp;#10;            partitions[1].push(pair[1]);&amp;#10;        } else {&amp;#10;            partitions[0].push(pair[1]);&amp;#10;            partitions[1].push(pair[0]);&amp;#10;        }&amp;#10;    });&amp;#10;    filteredList = shuffleListElement(filteredList);&amp;#10;    filteredList.forEach((num, i) =&gt; {&amp;#10;        partitions[i % 2].push(num);&amp;#10;    });&amp;#10;&amp;#10;    return partitions;&amp;#10;}&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="next_buttonSize = [0.24, 0.08]" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="next_buttonSize = [0.24, 0.08];" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="function_def" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="def_rock_params" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="# define experiment parameters&amp;#10;gridSize = (0.11,0.11)&amp;#10;gridSize_large = [dim * 1.3 for dim in gridSize]&amp;#10;rockSize_large = [dim * 1.2 for dim in rockSize]&amp;#10;category_names = [&quot;Andesite&quot;, &quot;Basalt&quot;, &quot;Diorite&quot;, &quot;Gabbro&quot;, &quot;Obsidian&quot;, &quot;Pegmatite&quot;, &quot;Peridotite&quot;, &quot;Pumice&quot;]&amp;#10;substring_map = {&amp;#10;    'Basalt': [('14', '16')],&amp;#10;    'Gabbro': [('03', '12'), ('14', '15')],&amp;#10;    'Pegmatite': [('09', '10')]&amp;#10;}&amp;#10;num_cats = len(category_names)&amp;#10;nblock = 9&amp;#10;num_rows = 6&amp;#10;num_cols = num_cats&amp;#10;&amp;#10;# define grid display parameters&amp;#10;x_bound = (-.55,.55)&amp;#10;y_bound = (-.39,.39)&amp;#10;y_padding = 0.02&amp;#10;grid_image_pos = []&amp;#10;for irow in range(num_rows):&amp;#10;    grid_image_row = []&amp;#10;    for icol in  range(num_cols):&amp;#10;        x_pos = x_bound[0] + icol * (x_bound[1] - x_bound[0])/(num_cols - 1)&amp;#10;        y_pos = y_bound[0] + irow * (y_bound[1] - y_bound[0])/(num_rows - 1)&amp;#10;        if y_pos &gt; 0:&amp;#10;            y_pos = y_pos + y_padding&amp;#10;        else:&amp;#10;            y_pos = y_pos - y_padding&amp;#10;        grid_image_row.append([x_pos,y_pos])&amp;#10;    grid_image_pos.append(grid_image_row)" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="// define experiment parameters&amp;#10;gridSize = [0.11,0.11];&amp;#10;gridSize_large = gridSize.map(element =&gt; element * 1.3);&amp;#10;rockSize_large = gridSize.map(element =&gt; element * 1.2);&amp;#10;category_names = [&quot;Andesite&quot;, &quot;Basalt&quot;, &quot;Diorite&quot;, &quot;Gabbro&quot;, &quot;Obsidian&quot;, &quot;Pegmatite&quot;, &quot;Peridotite&quot;, &quot;Pumice&quot;];&amp;#10;substring_map = {&amp;#10;    'Basalt': [['14', '16']],&amp;#10;    'Gabbro': [['03', '12'], ['14', '15']],&amp;#10;    'Pegmatite': [['09', '10']]&amp;#10;};&amp;#10;num_cats = category_names.length;&amp;#10;nblock = 9;&amp;#10;num_rows = 6;&amp;#10;num_cols = num_cats;&amp;#10;&amp;#10;// define grid display parameters&amp;#10;x_bound = [(- 0.55), 0.55];&amp;#10;y_bound = [(- 0.39), 0.39];&amp;#10;y_padding = 0.02;&amp;#10;grid_image_pos = [];&amp;#10;grid_image_row = [];&amp;#10;x_pos = [];&amp;#10;y_pos = [];&amp;#10;for (var irow = 0; irow&lt; num_rows; irow++) {&amp;#10;    grid_image_row = [];&amp;#10;    for (var icol = 0; icol&lt; num_cols; icol++) {&amp;#10;        x_pos = (x_bound[0] + ((icol * (x_bound[1] - x_bound[0])) / (num_cols - 1)));&amp;#10;        y_pos = (y_bound[0] + ((irow * (y_bound[1] - y_bound[0])) / (num_rows - 1)));&amp;#10;        if (y_pos &gt; 0){&amp;#10;            y_pos = y_pos + y_padding}&amp;#10;        else{&amp;#10;            y_pos = y_pos - y_padding};&amp;#10;        grid_image_row.push([x_pos, y_pos]);&amp;#10;    }&amp;#10;    grid_image_pos.push(grid_image_row);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="// partition token indices into training and test sets &amp;#10;cat_token_index_train = [];&amp;#10;cat_token_index_test = [];&amp;#10;file_names = rockInfo_dict.map(file =&gt; file.name);&amp;#10;&amp;#10;&amp;#10;for (let cat_name of category_names) {&amp;#10;    let file_names_cat = file_names.filter(file =&gt; file.includes(cat_name));&amp;#10;    let separatePairs = [];&amp;#10;    &amp;#10;    if (substring_map[cat_name]) {&amp;#10;        for (let substring of substring_map[cat_name]) {&amp;#10;            let rockIndex = [null, null];&amp;#10;            rockIndex[0] = file_names_cat.map((file, index) =&gt; file.includes(substring[0]) ? index : null).filter(index =&gt; index !== null)[0];&amp;#10;            rockIndex[1] = file_names_cat.map((file, index) =&gt; file.includes(substring[1]) ? index : null).filter(index =&gt; index !== null)[0];&amp;#10;            separatePairs.push(rockIndex);&amp;#10;        }&amp;#10;    }&amp;#10;    &amp;#10;    let indexList = Array.from({length: 12}, (_, index) =&gt; index);&amp;#10;    const [part1, part2] = partitionList(indexList, separatePairs); // Assuming partitionList function is defined&amp;#10;    &amp;#10;    cat_token_index_train.push(part1);&amp;#10;    cat_token_index_test.push(part2);&amp;#10;}&amp;#10;//console.log('cat_token_index_train:',cat_token_index_train);&amp;#10;//console.log('cat_token_index_test:',cat_token_index_test);&amp;#10;&amp;#10;// define grid image files&amp;#10;image_fileInfo_dict_ordered = [];&amp;#10;cat_name =[];&amp;#10;token_idx=[];&amp;#10;for (var irow = 0; irow &lt; num_rows; irow++) {&amp;#10;    let row_image_fileInfo = [];&amp;#10;    for (var icat = 0; icat &lt; num_cats; icat++) {&amp;#10;        cat_name = category_names[icat];&amp;#10;        let rockInfo_dict_cat = rockInfo_dict.filter(file =&gt; file.name.includes(cat_name));&amp;#10;        token_idx = cat_token_index_train[icat][irow];&amp;#10;        row_image_fileInfo.push(rockInfo_dict_cat[token_idx]);&amp;#10;    }&amp;#10;    image_fileInfo_dict_ordered.push(row_image_fileInfo);&amp;#10;}&amp;#10;grid_image_fileInfo = shuffleListElement(image_fileInfo_dict_ordered);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# partition token indices into training and test sets&amp;#10;cat_token_index_train = []&amp;#10;cat_token_index_test = []&amp;#10;for cat_name in category_names:&amp;#10;    file_names_cat = [file.name for file in rockInfo_dict if cat_name in file.name]&amp;#10;    separatePairs = []&amp;#10;    if cat_name in substring_map:&amp;#10;        for substrings in substring_map[cat_name]:&amp;#10;            rockIndex = [None, None]&amp;#10;            rockIndex[0] = [index for index, file in enumerate(file_names_cat) if substrings[0] in file.name]&amp;#10;            rockIndex[1] = [index for index, file in enumerate(file_names_cat) if substrings[1] in file.name]&amp;#10;            separatePairs.append(rockIndex)&amp;#10;&amp;#10;    IndexList = list(range(12))&amp;#10;    [part1, part2] = partitionList(IndexList, separatePairs)&amp;#10;    cat_token_index_train.append(part1)&amp;#10;    cat_token_index_test.append(part2)&amp;#10;&amp;#10;# define grid image files&amp;#10;image_files_ordered = []&amp;#10;for irow in range(num_rows):&amp;#10;    row_image_files = []&amp;#10;    for icat in range(num_cats):&amp;#10;        cat_name = category_names[icat]&amp;#10;        rockInfo_dict_cat = [file for file in rockInfo_dict if cat_name in file.name]&amp;#10;        token_idx = cat_token_index_train[icat][irow]&amp;#10;        row_image_files.append(rockInfo_dict_cat[token_idx])&amp;#10;    image_files_ordered.append(row_image_files)&amp;#10;     &amp;#10;grid_image_files = shuffle_nested_list(image_files_ordered)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="def_rock_params" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="def_rock_grid" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="rock_grid = [];&amp;#10;rock_rect_grid = [];&amp;#10;rock_fileName_grid = [];&amp;#10;rock_info_grid = [];&amp;#10;rock_cat_num = [];&amp;#10;rock_token = [];&amp;#10;rock_rows = [];&amp;#10;rock_cols = [];&amp;#10;rock_pos = [];&amp;#10;image_fileInfo = [];&amp;#10;image_fileName = [];&amp;#10;rock_info = [];&amp;#10;rock_name = [];&amp;#10;rock_rect_name = [];&amp;#10;rock_image = [];&amp;#10;rock_rect = [];&amp;#10;for (var irow = 0; irow &lt; num_rows; irow++) {&amp;#10;    for (var icol = 0; icol &lt; num_cols; icol++) {&amp;#10;        rock_pos = grid_image_pos[irow][icol];&amp;#10;        image_fileInfo = grid_image_fileInfo[irow][icol];&amp;#10;        image_fileName = image_fileInfo.name;&amp;#10;        rock_info = extract_rock_info(image_fileName);&amp;#10;        rock_name = ((rock_info.type + &quot;_&quot;) + rock_info.token);&amp;#10;        rock_rect_name = ((rock_name + &quot;_&quot;) + &quot;rect&quot;);&amp;#10;        rock_image = new visual.ImageStim({&quot;win&quot;: psychoJS.window, &quot;name&quot;: rock_name, &quot;image&quot;: ((directory_path + &quot;/&quot;) + image_fileName), &quot;mask&quot;: null, &quot;anchor&quot;: &quot;center&quot;, &quot;ori&quot;: 0.0, &quot;pos&quot;: rock_pos, &quot;size&quot;: gridSize, &quot;color&quot;: [1, 1, 1], &quot;colorSpace&quot;: &quot;rgb&quot;, &quot;opacity&quot;: null, &quot;flipHoriz&quot;: false, &quot;flipVert&quot;: false, &quot;texRes&quot;: 128.0, &quot;interpolate&quot;: true, &quot;depth&quot;: (- 1.0)});&amp;#10;        rock_rect = new visual.TextBox({&quot;win&quot;: psychoJS.window, &quot;name&quot;: rock_rect_name, &quot;text&quot;: '', &quot;placeholder&quot;: 'Type here...', &quot;font&quot;: 'Arial', &quot;pos&quot;: rock_pos, &quot;letterHeight&quot;: 0, &quot;lineSpacing&quot;: 1.0, &quot;size&quot;: gridSize_large, &quot;units&quot;: undefined, &quot;color&quot;: null, &quot;colorSpace&quot;: 'rgb', &quot;fillColor&quot;: null, &quot;borderColor&quot;: &quot;black&quot;, &quot;borderWidth&quot;: 0.008, &quot;languageStyle&quot;: 'LTR', &quot;bold&quot;: false, &quot;italic&quot;: false, &quot;opacity&quot;: 1, &quot;padding&quot;: 0.0, &quot;alignment&quot;: 'center', &quot;overflow&quot;: 'visible', &quot;editable&quot;: false, &quot;multiline&quot;: true, &quot;anchor&quot;: 'center', &quot;depth&quot;: (-5.0)});        &amp;#10;        rock_grid.push(rock_image);&amp;#10;        rock_rect_grid.push(rock_rect);&amp;#10;        rock_fileName_grid.push(image_fileName);&amp;#10;        rock_rows.push(irow);&amp;#10;        rock_cols.push(icol);&amp;#10;        // save rock info for data export&amp;#10;        rock_cat_num = category_names.findIndex(cat =&gt; cat === rock_info.type) + 1;&amp;#10;        rock_token = rock_info.token;&amp;#10;        rock_info_grid.push({row:irow+1, col:icol+1, cat:rock_cat_num, token:rock_token});&amp;#10;    }&amp;#10;}" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="rock_grid = []&amp;#10;rock_rect_grid = []&amp;#10;rock_rows = []&amp;#10;rock_cols = []&amp;#10;rock_pos = []&amp;#10;image_file = []&amp;#10;rock_info = []&amp;#10;rock_name = []&amp;#10;rock_rect_name = []&amp;#10;rock_image = []&amp;#10;rock_rect = []&amp;#10;for irow in range(num_rows):&amp;#10;    for icol in range(num_cols):&amp;#10;        rock_pos = grid_image_pos[irow][icol]&amp;#10;        image_file = grid_image_files[irow][icol]&amp;#10;        rock_info = extract_rock_info(image_file)&amp;#10;        rock_name = rock_info[&quot;type&quot;] + &quot;_&quot; + rock_info[&quot;token&quot;]&amp;#10;        rock_rect_name = rock_name + &quot;_&quot; + &quot;rect&quot;&amp;#10;        rock_image = visual.ImageStim(&amp;#10;                        win=win,&amp;#10;                        name=rock_name, &amp;#10;                        image=directory_path+'/'+image_file, mask=None, anchor='center',&amp;#10;                        ori=0.0, pos=rock_pos, size = gridSize,&amp;#10;                        color=[1,1,1], colorSpace='rgb', opacity=None,&amp;#10;                        flipHoriz=False, flipVert=False,&amp;#10;                        texRes=128.0, interpolate=True, depth=-1.0)&amp;#10;        rock_rect = visual.Rect(&amp;#10;                        win=win, name=rock_rect_name,&amp;#10;                        width=0.15, height=0.15,&amp;#10;                        ori=0.0, pos=rock_pos, anchor='center',&amp;#10;                        lineWidth=4.0, colorSpace='rgb', lineColor=[0.5,0.5,0], fillColor=None,&amp;#10;                        opacity=1, depth=-5.0, interpolate=True)&amp;#10;        rock_grid.append(rock_image)&amp;#10;        rock_rect_grid.append(rock_rect)&amp;#10;        rock_rows.append(irow)&amp;#10;        rock_cols.append(icol)&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="if (typeof rock_info_grid !== 'undefined'){&amp;#10;psychoJS.experiment.nextEntry();&amp;#10;    for (let rock_index = 0; rock_index &lt; rock_info_grid.length; rock_index++) {&amp;#10;        let row = rock_info_grid[rock_index];&amp;#10;        for (let key in row) {&amp;#10;            psychoJS.experiment.addData(key, row[key]);&amp;#10;        }&amp;#10;        psychoJS.experiment.nextEntry();&amp;#10;    }&amp;#10;}" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="def_rock_grid" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="sample_rocks_train" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if (['TCR','TCN','SCR'].includes(expInfo[&quot;condition&quot;])){&amp;#10;    logical_order = [];&amp;#10;    permutation = [];&amp;#10;    logical_cat=[];&amp;#10;    for (var icat = 0; icat &lt; num_cats; icat++) {&amp;#10;        logical_cat = [];&amp;#10;        for (var irep = 0; irep &lt; 3; irep++) {&amp;#10;            permutation = shuffleListElement(util.range(num_rows));&amp;#10;            logical_cat.push(...permutation);&amp;#10;        }&amp;#10;        logical_order.push(logical_cat);&amp;#10;    }&amp;#10;    train_images = [];&amp;#10;    seq_idx = [];&amp;#10;    block_images = [];&amp;#10;    file_names_cat = [];&amp;#10;    logical_idx1 = [];&amp;#10;    logical_idx2 = [];&amp;#10;    tokens_idx1 = [];&amp;#10;    tokens_idx2 = [];&amp;#10;    for (var iblock = 0; iblock &lt; nblock; iblock++) {&amp;#10;        seq_idx = [];&amp;#10;        seq_idx.push((iblock * 2));&amp;#10;        seq_idx.push(((iblock * 2) + 1));&amp;#10;        block_images = [];&amp;#10;        for (var icat = 0; icat &lt; num_cats; icat++) {&amp;#10;            logical_idx1 = logical_order[icat][seq_idx[0]];&amp;#10;            logical_idx2 = logical_order[icat][seq_idx[1]];&amp;#10;            cat_name = category_names[icat];&amp;#10;            let rockInfo_dict_cat = rockInfo_dict.filter(file =&gt; file.name.includes(cat_name));&amp;#10;            tokens_idx1 = cat_token_index_train[icat][logical_idx1];&amp;#10;            tokens_idx2 = cat_token_index_train[icat][logical_idx2];&amp;#10;            block_images.push(rockInfo_dict_cat[tokens_idx1]);&amp;#10;            block_images.push(rockInfo_dict_cat[tokens_idx2]);&amp;#10;        }&amp;#10;        block_images = shuffleListElement(block_images);&amp;#10;        train_images.push(block_images);&amp;#10;    }&amp;#10;}" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if expInfo['condition'] in ['TCR', 'TCN', 'SCR']:&amp;#10;    logical_order = []&amp;#10;    for icat in range(num_cats):&amp;#10;        logical_cat = []&amp;#10;        for irep in range(3):&amp;#10;            permutation = np.random.permutation(num_rows)&amp;#10;            logical_cat.extend(permutation)&amp;#10;    logical_order.append(logical_cat)&amp;#10;&amp;#10;    train_images = []&amp;#10;    for iblock in range(nblock):&amp;#10;        seq_idx = []&amp;#10;        seq_idx.append(iblock*2)&amp;#10;        seq_idx.append(iblock*2 + 1)&amp;#10;        block_images = []&amp;#10;        for icat in range(num_cats):&amp;#10;            logical_idx1 = logical_order[icat][seq_idx[0]]&amp;#10;            logical_idx2 = logical_order[icat][seq_idx[1]]&amp;#10;            cat_name = category_names[icat]&amp;#10;            file_names_cat = [item for item in file_names if cat_name in item]&amp;#10;            tokens_idx1 = cat_token_index_train[icat][logical_idx1]&amp;#10;            tokens_idx2 = cat_token_index_train[icat][logical_idx2]&amp;#10;            block_images.append(file_names_cat[tokens_idx1])&amp;#10;            block_images.append(file_names_cat[tokens_idx2])&amp;#10;        block_images = shuffleListElement(block_images)&amp;#10;        train_images.append(block_images)&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="sample_rocks_train" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="sample_rocks_test" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="logical_order = [];&amp;#10;permutation = [];&amp;#10;logical_cat=[];&amp;#10;for (var icat = 0; icat &lt; num_cats; icat++) {&amp;#10;    logical_cat = [];&amp;#10;    for (var irep = 0; irep &lt; 3; irep++) {&amp;#10;        permutation = shuffleListElement(util.range(num_rows));&amp;#10;        logical_cat.push(...permutation);&amp;#10;    }&amp;#10;    logical_order.push(logical_cat);&amp;#10;}&amp;#10;test_images = [];&amp;#10;seq_idx = [];&amp;#10;block_images = [];&amp;#10;logical_idx1 = [];&amp;#10;logical_idx2 = [];&amp;#10;tokens_idx1 = [];&amp;#10;tokens_idx2 = [];&amp;#10;for (var iblock = 0; iblock &lt; nblock; iblock++) {&amp;#10;    seq_idx = [];&amp;#10;    seq_idx.push((iblock * 2));&amp;#10;    seq_idx.push(((iblock * 2) + 1));&amp;#10;    block_images = [];&amp;#10;    for (var icat = 0; icat &lt; num_cats; icat++) {&amp;#10;        logical_idx1 = logical_order[icat][seq_idx[0]];&amp;#10;        logical_idx2 = logical_order[icat][seq_idx[1]];&amp;#10;        cat_name = category_names[icat];&amp;#10;        let rockInfo_dict_cat = rockInfo_dict.filter(file =&gt; file.name.includes(cat_name));&amp;#10;        tokens_idx1 = cat_token_index_test[icat][logical_idx1];&amp;#10;        tokens_idx2 = cat_token_index_test[icat][logical_idx2];&amp;#10;        block_images.push(rockInfo_dict_cat[tokens_idx1]);&amp;#10;        block_images.push(rockInfo_dict_cat[tokens_idx2]);&amp;#10;    }&amp;#10;    block_images = shuffleListElement(block_images);&amp;#10;    test_images.push(block_images);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="logical_order = []&amp;#10;for _ in range(num_cats):&amp;#10;    logical_cat = []&amp;#10;    for _ in range(3):&amp;#10;        permutation = np.random.permutation(num_rows)&amp;#10;        logical_cat.extend(permutation)&amp;#10;    logical_order.append(logical_cat)&amp;#10;&amp;#10;test_images = []&amp;#10;for iblock in range(nblock):&amp;#10;    seq_idx = []&amp;#10;    seq_idx.append(iblock*2)&amp;#10;    seq_idx.append(iblock*2 + 1)&amp;#10;    block_images = []&amp;#10;    for icat in range(num_cats):&amp;#10;        logical_idx1 = logical_order[icat][seq_idx[0]]&amp;#10;        logical_idx2 = logical_order[icat][seq_idx[1]]&amp;#10;        cat_name = category_names[icat]&amp;#10;        file_names_cat = [item for item in file_names if cat_name in item]&amp;#10;        tokens_idx1 = cat_token_index_test[icat][logical_idx1]&amp;#10;        tokens_idx2 = cat_token_index_test[icat][logical_idx2]&amp;#10;        block_images.append(file_names_cat[tokens_idx1])&amp;#10;        block_images.append(file_names_cat[tokens_idx2])&amp;#10;    block_images = shuffleListElement(block_images)&amp;#10;    test_images.append(block_images)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="sample_rocks_test" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="load_image_info">
      <RoutineSettingsComponent name="load_image_info" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="load_image_info" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="read_file_info" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="directory_path = &quot;rock_images&quot;;&amp;#10;rockInfo_dict = [];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="rockInfo_dict.push({'name':file_name,'size':[width,height]});" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="read_file_info" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="condition_switch">
      <RoutineSettingsComponent name="condition_switch" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="condition_switch" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="select_cond" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if (['TCN','TCR'].includes(expInfo['condition'])) {&amp;#10;    nrep_sampling = 1;&amp;#10;    nrep_selection = 0;&amp;#10;} else if (['SCN','SCR'].includes(expInfo['condition'])) {&amp;#10;    nrep_sampling = 0;&amp;#10;    nrep_selection = 1;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if expInfo['condition'] in ['TCN','TCR']:&amp;#10;    nrep_sampling = 1&amp;#10;    nrep_selection = 0&amp;#10;elif expInfo['condition'] in ['SCN','SCR']:&amp;#10;    nrep_sampling = 0&amp;#10;    nrep_selection = 1" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="select_cond" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="end_of_trainingProcess">
      <RoutineSettingsComponent name="end_of_trainingProcess" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="end_of_trainingProcess" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="testInstr_skip" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((blocks.thisN === 0)) {&amp;#10;    testInstr_nrep = 9999;&amp;#10;} else {&amp;#10;    testInstr_nrep = 0;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if blocks.thisN == 0:&amp;#10;    testInstr_nrep = 9999&amp;#10;else:&amp;#10;    testInstr_nrep = 0" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="testInstr_skip" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="start_of_trainingProcess">
      <RoutineSettingsComponent name="start_of_trainingProcess" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="start_of_trainingProcess" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="full_screen_10" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="if frameN &gt; 10:&amp;#10;    if not psychoJS.window._windowAlreadyInFullScreen:&amp;#10;        alert(&quot;looks like you exited full screen mode. You must stay in full screen mode to be eligible to participate&quot;)&amp;#10;        quitPsychoJS('',false)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (frameN &gt; 10) {&amp;#10;    if (! psychoJS.window._windowAlreadyInFullScreen) {&amp;#10;    alert(&quot;looks like you exited full screen mode. You must stay in full screen mode to be eligible to participate&quot;);&amp;#10;    quitPsychoJS('',false);&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="full_screen_10" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="block_prompt_train" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="block_prompt_train" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$'Starting Training Block ' + str(blocks.thisN + 1) +  ' of ' + str(blocks.nTotal)" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="adjust_rocks_train_block" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="train_block_images = [];&amp;#10;if (['SCR','TCR'].includes(expInfo['condition'])) {&amp;#10;    if ((blocks.thisN === 0)) {&amp;#10;        train_block_images = train_images[blocks.thisN];&amp;#10;    } else {&amp;#10;        let train_images_flat = train_images.flat();&amp;#10;        let prc_list_thisblock = Object.values(prc_dict_thisblock);&amp;#10;        let num_items_cats = prop_to_count(prc_list_thisblock, (2 * num_cats));&amp;#10;        for (let icat = 0; icat &lt; num_cats; icat++) {&amp;#10;            let cat_name = category_names[icat];&amp;#10;            let train_images_cat = train_images_flat.filter(file =&gt; file.name.includes(cat_name));&amp;#10;            let train_images_cat_sampled = getRandomSample(train_images_cat, num_items_cats[icat]);&amp;#10;            train_block_images.push(...train_images_cat_sampled);&amp;#10;        }&amp;#10;        train_block_images = shuffleListElement(train_block_images);&amp;#10;    }&amp;#10;} else if (expInfo['condition'] === 'TCN'){&amp;#10;    train_block_images = train_images[blocks.thisN];&amp;#10;}" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if expInfo['condition'] in ['SCR', 'TCR']:&amp;#10;    train_block_images = []&amp;#10;    if blocks.thisN == 0:&amp;#10;        train_block_images = train_images[blocks.thisN]&amp;#10;    else:&amp;#10;        prc_list_thisblock = list(prc_dict_thisblock.values())&amp;#10;        num_items_cats = prop_to_count(prc_list_thisblock,2*num_cats)&amp;#10;        cat_name = []&amp;#10;        file_namesizes_cat = []&amp;#10;        file_sampled_cat = []&amp;#10;        for icat in range(num_cats):&amp;#10;            cat_name = category_names[icat]&amp;#10;            file_namesizes_cat = [file for file in file_namesizes if cat_name in file.name]&amp;#10;            file_sampled_cat = getRandomSample(file_namesizes_cat,num_items_cats[icat])&amp;#10;            train_block_images.extend(file_sampled_cat)&amp;#10;        train_block_images = shuffleListElement(train_block_images)&amp;#10;elif expInfo['condition'] === 'TCN':&amp;#10;    train_block_images = train_images[blocks.thisN]" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="adjust_rocks_train_block" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="config_rock_grid" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="cat_rock = [];&amp;#10;color_val = [];&amp;#10;color_rgb = [];&amp;#10;color_min = [-1, 1, -1];&amp;#10;color_max = [1, -1, -1];&amp;#10;if ((expInfo[&quot;condition&quot;] === &quot;SCN&quot; &amp;&amp; blocks.thisN &gt; 0)) {&amp;#10;    for (var i; i &lt; num_rows * num_cols; i++) {&amp;#10;        cat_rock = rock_info_grid[i].type;&amp;#10;        color_val = diff_dict_block[cat_rock];&amp;#10;        if (color_val !== null){&amp;#10;          color_rgb = util.range(3).map(i =&gt; color_min[i] + color_val * (color_max[i] - color_min[i]));&amp;#10;          rock_rect_grid[i].borderColor = color_rgb;&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="cat_rock = []&amp;#10;color_val = []&amp;#10;color_rgb = []&amp;#10;color_min = [0,1,0]&amp;#10;color_max = [1,0,0]&amp;#10;if blocks.thisN &gt; 0:&amp;#10;    for i in range(num_rows*num_cols):&amp;#10;        cat_rock = rock_info_grid[i][&quot;type&quot;]&amp;#10;        color_val = diff_dict_block[cat_rock]&amp;#10;        color_rgb = map(lambda i: color_min[i] + color_val * (color_max - color_min),range(3))&amp;#10;        rock_rect_grid[i].borderColor = color_rgb&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="config_rock_grid" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="end_of_testProcess">
      <RoutineSettingsComponent name="end_of_testProcess" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="end_of_testProcess" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="full_screen_11" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="if frameN &gt; 10:&amp;#10;    if not psychoJS.window._windowAlreadyInFullScreen:&amp;#10;        alert(&quot;looks like you exited full screen mode. You must stay in full screen mode to be eligible to participate&quot;)&amp;#10;        quitPsychoJS('',false)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (frameN &gt; 10) {&amp;#10;    if (! psychoJS.window._windowAlreadyInFullScreen) {&amp;#10;    alert(&quot;looks like you exited full screen mode. You must stay in full screen mode to be eligible to participate&quot;);&amp;#10;    quitPsychoJS('',false);&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="full_screen_11" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="format_accuracy_summary" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="prc_corr_block_last3 = []&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="prc_corr_block_last3 = [];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="prc_corr = [];&amp;#10;corr_table = &quot;&quot;;&amp;#10;for (let cat_name of category_names) {&amp;#10;    prc_corr = util.round(util.average(accuracy_dict[cat_name]) * 100);&amp;#10;    corr_table = corr_table + cat_name + &quot;: &quot; + prc_corr.toString() + &quot;%\n\n&quot;;&amp;#10;};&amp;#10;prc_corr_list = Object.values(accuracy_dict).flat();&amp;#10;prc_corr_block = util.round(util.average(prc_corr_list) * 100);&amp;#10;corr_overall = 'You got ' + prc_corr_block.toString() + '% of trials correct.';&amp;#10;&amp;#10;if (blocks.thisN &gt;= blocks.nTotal - 3){&amp;#10;    prc_corr_block_last3.push(prc_corr_block);&amp;#10;}&amp;#10;if (blocks.thisN === blocks.nTotal - 1){&amp;#10;    prc_corr_total_last3 = util.average(prc_corr_block_last3);&amp;#10;    hasBonus = (prc_corr_total_last3/100 &gt;= 0.65)? 1: 0;&amp;#10;}&amp;#10;&amp;#10;psychoJS.experiment.addData(&quot;Bonus&quot;, hasBonus);" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="prc_corr = [];&amp;#10;corr_table = &quot;&quot;;&amp;#10;for cat_name in category_names:&amp;#10;    prc_corr = round(average(accuracy_dict[cat_name])*100)&amp;#10;    corr_table = corr_table + cat_name + ': ' + str(prc_corr) + '%\n\n'&amp;#10;prc_corr_list = list(accuracy_dict.values())&amp;#10;prc_corr_block = round(average(prc_corr_list)*100)&amp;#10;corr_overall = 'you got ' + str(prc_corr_block) + '% of trials correct.'&amp;#10;&amp;#10;if blocks.thisN &gt;= blocks.nTotal - 3:&amp;#10;    prc_corr_block_last3.append(prc_corr_block)  &amp;#10;if blocks.thisN == blocks.nTotal - 1:&amp;#10;    prc_corr_total_last3 = sum(prc_corr_block_last3) / len(prc_corr_block_last3)&amp;#10;    hasBonus = 1 if prc_corr_total_last3/100 &gt;= 0.65 else 0&amp;#10;    &amp;#10;thisExp.addData(&quot;Bonus&quot;, hasBonus)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="format_accuracy_summary" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="end_block_msg_2" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="end_block_msg_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$'End Block ' + str(blocks.thisN + 1)" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="feedbackSC1" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="feedbackSC1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="0.5" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.5" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Summary of classification accuracy for each category:&amp;#10;" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="feedbackSC2" plugin="None">
        <Param val="red" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="feedbackSC2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.05)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="0.5" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.5" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$corr_table&amp;#10;" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="feedbackTC1" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="feedbackTC1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="0.5" valType="code" updates="None" name="startEstim"/>
        <Param val="condition" valType="str" updates="None" name="startType"/>
        <Param val="['TCN','TCR'].includes(expInfo['condition'])  &amp;&amp;  t &gt;= 0.5" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$corr_overall&amp;#10;" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="next_block_fb" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="img/next.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="next_block_fb" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="next_buttonSize" valType="list" updates="constant" name="size"/>
        <Param val="0.5" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.5" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <MouseComponent name="next_mouse_block_fb" plugin="None">
        <Param val="next_block_fb" valType="list" updates="constant" name="clickable"/>
        <Param val="" valType="list" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="valid click" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="next_mouse_block_fb" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="never" valType="str" updates="None" name="saveMouseState"/>
        <Param val="" valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.5" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="mouse onset" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <CodeComponent name="compute_diff_indices" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="PS_dict_blocks = {};&amp;#10;for cat_name in category_names:&amp;#10;    PS_dict_blocks[cat_name] = []" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="PS_dict_blocks = {};&amp;#10;category_names.forEach(cat_name =&gt; {&amp;#10;    PS_dict_blocks[cat_name] = [];&amp;#10;});" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if (['SCR','TCR'].includes(expInfo['condition'])) {&amp;#10;    RC_thisblock = [];&amp;#10;    prc_dict_thisblock = {};&amp;#10;    for (let icat = 0; icat &lt; num_cats; icat++) {&amp;#10;        cat_name = category_names[icat];&amp;#10;        let num_item_cat = cat_list.filter(x =&gt; x === cat_name).length;&amp;#10;        let num_item_resp = resp_list.filter(y =&gt; y === cat_name).length;&amp;#10;        let num_item_total = cat_list.length;&amp;#10;        let num_item_cat_resp = cat_list.filter((x, index) =&gt; x === cat_name &amp;&amp; resp_list[index] === cat_name).length;&amp;#10;        let H_rate = (num_item_cat_resp / num_item_cat);&amp;#10;        let FA_rate = ((num_item_resp - num_item_cat_resp) / (num_item_total - num_item_cat));&amp;#10;        let PS = (H_rate - FA_rate);&amp;#10;        PS_dict_blocks[cat_name].push(PS);&amp;#10;        let PS_sum = 0;&amp;#10;        let weight_sum = 0;&amp;#10;        let lambda = 0.5;&amp;#10;        for (let iblock = 0; iblock &lt;= blocks.thisN; iblock++) {&amp;#10;            let block_weight = Math.exp(lambda * (iblock - blocks.thisN));&amp;#10;            weight_sum += block_weight;&amp;#10;            PS_sum += (block_weight * PS_dict_blocks[cat_name][iblock]);&amp;#10;        }&amp;#10;        RC_thisblock.push((1 - PS_sum/weight_sum + 0.125));&amp;#10;    }&amp;#10;    let sumRC = RC_thisblock.reduce((a, b) =&gt; a + b, 0);&amp;#10;    for (let icat = 0; icat &lt; num_cats; icat++) {&amp;#10;        cat_name = category_names[icat];&amp;#10;        prc_dict_thisblock[cat_name] = RC_thisblock[icat] / sumRC;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if expInfo['condition'] in ['SCR', 'TCR']:&amp;#10;    RC_thisblock = [];&amp;#10;    prc_dict_thisblock = {};&amp;#10;    for icat in range(num_cats):&amp;#10;        cat_name = category_names[icat]&amp;#10;        num_item_cat = sum(x == cat_name for x in cat_list)&amp;#10;        num_item_resp = sum(y == cat_name for y in resp_list)&amp;#10;        num_item_total = len(cat_list)&amp;#10;        num_item_cat_resp = sum((x == cat_name) and (y == cat_name) for x, y in zip(cat_list, resp_list))&amp;#10;        H_rate = num_item_cat_resp/num_item_cat&amp;#10;        FA_rate = (num_item_resp - num_item_cat_resp)/(num_item_total - num_item_cat)&amp;#10;        # the exact formula can be changed&amp;#10;        PS = H_rate - FA_rate&amp;#10;        PS_dict_blocks[cat_name].append(PS)&amp;#10;        PS_sum = 0&amp;#10;        weight_sum = 0&amp;#10;        decay_rate = 0.5;&amp;#10;        for iblock in range(blocks.thisN + 1):&amp;#10;            block_weight = math.exp(decay_rate*(iblock - blocks.thisN))&amp;#10;            weight_sum += block_weight&amp;#10;            PS_sum += block_weight * PS_dict_blocks[cat_name][iblock]&amp;#10;        RC_thisblock.append(1 - PS_sum/weight_sum + 0.125)&amp;#10;&amp;#10;    for icat in range(num_cats):&amp;#10;        cat_name = category_names[icat]&amp;#10;        prc_dict_thisblock[cat_name] = RC_thisblock[icat] / sum(RC_thisblock)&amp;#10;    &amp;#10;&amp;#10;    &amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="compute_diff_indices" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="start_of_testProcess">
      <RoutineSettingsComponent name="start_of_testProcess" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="start_of_testProcess" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="full_screen_12" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="if frameN &gt; 10:&amp;#10;    if not psychoJS.window._windowAlreadyInFullScreen:&amp;#10;        alert(&quot;looks like you exited full screen mode. You must stay in full screen mode to be eligible to participate&quot;)&amp;#10;        quitPsychoJS('',false)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (frameN &gt; 10) {&amp;#10;    if (! psychoJS.window._windowAlreadyInFullScreen) {&amp;#10;    alert(&quot;looks like you exited full screen mode. You must stay in full screen mode to be eligible to participate&quot;);&amp;#10;    quitPsychoJS('',false);&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="full_screen_12" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="block_prompt_test" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="block_prompt_test" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$'Starting Test Block ' + str(blocks.thisN + 1) +  ' of ' + str(blocks.nTotal)" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="initialize_accuracy_list" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="accuracy_dict = {};&amp;#10;category_names.forEach(cat_name =&gt; {&amp;#10;    accuracy_dict[cat_name] = [];&amp;#10;});" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="accuracy_dict = {}&amp;#10;for cat_name in category_names:&amp;#10;    accuracy_dict[cat_name] = []" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="initialize_accuracy_list" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="initialize_response_tracker" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="resp_list = [];&amp;#10;cat_list = [];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="resp_list = []&amp;#10;cat_list = []" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="initialize_response_tracker" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="testBlock_end_msg">
      <RoutineSettingsComponent name="testBlock_end_msg" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="testBlock_end_msg" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="end_block_msg" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="end_block_msg" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val=".5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$'End Block ' + str(blocks.thisN + 1)" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="fixation_buffer">
      <RoutineSettingsComponent name="fixation_buffer" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="fixation_buffer" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="train_trials.thisN != 0" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="full_screen_13" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="if frameN &gt; 10:&amp;#10;    if not psychoJS.window._windowAlreadyInFullScreen:&amp;#10;        alert(&quot;looks like you exited full screen mode. You must stay in full screen mode to be eligible to participate&quot;)&amp;#10;        quitPsychoJS('',false)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (frameN &gt; 10) {&amp;#10;    if (! psychoJS.window._windowAlreadyInFullScreen) {&amp;#10;    alert(&quot;looks like you exited full screen mode. You must stay in full screen mode to be eligible to participate&quot;);&amp;#10;    quitPsychoJS('',false);&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="full_screen_13" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="fix_wait" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="fix_wait" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="loading..." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
  </Routines>
  <Flow>
    <LoopInitiator loopType="TrialHandler" name="preload_trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'file_name': 'I_Andesite_01.jpg', 'width': 800, 'height': 587}, {'file_name': 'I_Andesite_02.jpg', 'width': 800, 'height': 850}, {'file_name': 'I_Andesite_03.jpg', 'width': 800, 'height': 573}, {'file_name': 'I_Andesite_04.jpg', 'width': 800, 'height': 596}, {'file_name': 'I_Andesite_05.jpg', 'width': 800, 'height': 412}, {'file_name': 'I_Andesite_06.jpg', 'width': 800, 'height': 684}, {'file_name': 'I_Andesite_07.jpg', 'width': 800, 'height': 593}, {'file_name': 'I_Andesite_09.jpg', 'width': 800, 'height': 600}, {'file_name': 'I_Andesite_10.jpg', 'width': 800, 'height': 416}, {'file_name': 'I_Andesite_11.jpg', 'width': 800, 'height': 492}, {'file_name': 'I_Andesite_14.jpg', 'width': 800, 'height': 545}, {'file_name': 'I_Andesite_16.jpg', 'width': 800, 'height': 601}, {'file_name': 'I_Basalt_01.jpg', 'width': 800, 'height': 788}, {'file_name': 'I_Basalt_02.jpg', 'width': 800, 'height': 645}, {'file_name': 'I_Basalt_04.jpg', 'width': 800, 'height': 753}, {'file_name': 'I_Basalt_05.jpg', 'width': 800, 'height': 818}, {'file_name': 'I_Basalt_06.jpg', 'width': 800, 'height': 706}, {'file_name': 'I_Basalt_08.jpg', 'width': 800, 'height': 1044}, {'file_name': 'I_Basalt_09.jpg', 'width': 800, 'height': 620}, {'file_name': 'I_Basalt_10.jpg', 'width': 800, 'height': 585}, {'file_name': 'I_Basalt_11.jpg', 'width': 800, 'height': 536}, {'file_name': 'I_Basalt_12.jpg', 'width': 800, 'height': 601}, {'file_name': 'I_Basalt_14.jpg', 'width': 800, 'height': 582}, {'file_name': 'I_Basalt_16.jpg', 'width': 800, 'height': 766}, {'file_name': 'I_Diorite_02.jpg', 'width': 800, 'height': 627}, {'file_name': 'I_Diorite_06.jpg', 'width': 800, 'height': 603}, {'file_name': 'I_Diorite_07.jpg', 'width': 800, 'height': 524}, {'file_name': 'I_Diorite_08.jpg', 'width': 800, 'height': 637}, {'file_name': 'I_Diorite_09.jpg', 'width': 800, 'height': 527}, {'file_name': 'I_Diorite_10.jpg', 'width': 800, 'height': 595}, {'file_name': 'I_Diorite_11.jpg', 'width': 800, 'height': 711}, {'file_name': 'I_Diorite_12.jpg', 'width': 800, 'height': 488}, {'file_name': 'I_Diorite_13.jpg', 'width': 800, 'height': 629}, {'file_name': 'I_Diorite_14.jpg', 'width': 800, 'height': 571}, {'file_name': 'I_Diorite_15.jpg', 'width': 800, 'height': 554}, {'file_name': 'I_Diorite_16.jpg', 'width': 800, 'height': 674}, {'file_name': 'I_Gabbro_01.jpg', 'width': 800, 'height': 521}, {'file_name': 'I_Gabbro_03.jpg', 'width': 800, 'height': 852}, {'file_name': 'I_Gabbro_05.jpg', 'width': 800, 'height': 600}, {'file_name': 'I_Gabbro_08.jpg', 'width': 800, 'height': 515}, {'file_name': 'I_Gabbro_09.jpg', 'width': 800, 'height': 728}, {'file_name': 'I_Gabbro_10.jpg', 'width': 800, 'height': 568}, {'file_name': 'I_Gabbro_11.jpg', 'width': 800, 'height': 620}, {'file_name': 'I_Gabbro_12.jpg', 'width': 800, 'height': 780}, {'file_name': 'I_Gabbro_13.jpg', 'width': 800, 'height': 508}, {'file_name': 'I_Gabbro_14.jpg', 'width': 800, 'height': 848}, {'file_name': 'I_Gabbro_15.jpg', 'width': 800, 'height': 629}, {'file_name': 'I_Gabbro_16.jpg', 'width': 800, 'height': 644}, {'file_name': 'I_Obsidian_02.jpg', 'width': 800, 'height': 751}, {'file_name': 'I_Obsidian_04.jpg', 'width': 800, 'height': 693}, {'file_name': 'I_Obsidian_05.jpg', 'width': 800, 'height': 633}, {'file_name': 'I_Obsidian_06.jpg', 'width': 800, 'height': 680}, {'file_name': 'I_Obsidian_07.jpg', 'width': 800, 'height': 476}, {'file_name': 'I_Obsidian_08.jpg', 'width': 800, 'height': 739}, {'file_name': 'I_Obsidian_09.jpg', 'width': 800, 'height': 500}, {'file_name': 'I_Obsidian_10.jpg', 'width': 800, 'height': 626}, {'file_name': 'I_Obsidian_11.jpg', 'width': 800, 'height': 605}, {'file_name': 'I_Obsidian_12.jpg', 'width': 800, 'height': 653}, {'file_name': 'I_Obsidian_14.jpg', 'width': 800, 'height': 764}, {'file_name': 'I_Obsidian_16.jpg', 'width': 800, 'height': 930}, {'file_name': 'I_Pegmatite_03.jpg', 'width': 800, 'height': 524}, {'file_name': 'I_Pegmatite_05.jpg', 'width': 800, 'height': 730}, {'file_name': 'I_Pegmatite_06.jpg', 'width': 800, 'height': 517}, {'file_name': 'I_Pegmatite_07.jpg', 'width': 800, 'height': 670}, {'file_name': 'I_Pegmatite_08.jpg', 'width': 800, 'height': 768}, {'file_name': 'I_Pegmatite_09.jpg', 'width': 800, 'height': 403}, {'file_name': 'I_Pegmatite_10.jpg', 'width': 800, 'height': 416}, {'file_name': 'I_Pegmatite_11.jpg', 'width': 800, 'height': 814}, {'file_name': 'I_Pegmatite_12.jpg', 'width': 800, 'height': 570}, {'file_name': 'I_Pegmatite_13.jpg', 'width': 800, 'height': 495}, {'file_name': 'I_Pegmatite_15.jpg', 'width': 800, 'height': 600}, {'file_name': 'I_Pegmatite_16.jpg', 'width': 800, 'height': 580}, {'file_name': 'I_Peridotite_02.jpg', 'width': 800, 'height': 586}, {'file_name': 'I_Peridotite_04.jpg', 'width': 800, 'height': 668}, {'file_name': 'I_Peridotite_05.jpg', 'width': 800, 'height': 715}, {'file_name': 'I_Peridotite_06.jpg', 'width': 800, 'height': 753}, {'file_name': 'I_Peridotite_07.jpg', 'width': 800, 'height': 483}, {'file_name': 'I_Peridotite_08.jpg', 'width': 800, 'height': 670}, {'file_name': 'I_Peridotite_10.jpg', 'width': 800, 'height': 539}, {'file_name': 'I_Peridotite_12.jpg', 'width': 800, 'height': 454}, {'file_name': 'I_Peridotite_13.jpg', 'width': 800, 'height': 758}, {'file_name': 'I_Peridotite_14.jpg', 'width': 800, 'height': 530}, {'file_name': 'I_Peridotite_15.jpg', 'width': 800, 'height': 600}, {'file_name': 'I_Peridotite_16.jpg', 'width': 800, 'height': 699}, {'file_name': 'I_Pumice_02.jpg', 'width': 800, 'height': 740}, {'file_name': 'I_Pumice_03.jpg', 'width': 800, 'height': 664}, {'file_name': 'I_Pumice_04.jpg', 'width': 800, 'height': 682}, {'file_name': 'I_Pumice_05.jpg', 'width': 800, 'height': 725}, {'file_name': 'I_Pumice_06.jpg', 'width': 800, 'height': 694}, {'file_name': 'I_Pumice_08.jpg', 'width': 800, 'height': 667}, {'file_name': 'I_Pumice_09.jpg', 'width': 800, 'height': 644}, {'file_name': 'I_Pumice_10.jpg', 'width': 800, 'height': 761}, {'file_name': 'I_Pumice_13.jpg', 'width': 800, 'height': 820}, {'file_name': 'I_Pumice_14.jpg', 'width': 800, 'height': 639}, {'file_name': 'I_Pumice_15.jpg', 'width': 800, 'height': 786}, {'file_name': 'I_Pumice_16.jpg', 'width': 800, 'height': 679}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="stimuli/rock_image_info.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="preload_trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="load_image_info"/>
    <LoopTerminator name="preload_trials"/>
    <LoopInitiator loopType="TrialHandler" name="TrainInstructions_controller">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="9999" valType="num"/>
      <Param name="name" updates="None" val="TrainInstructions_controller" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="instPrep"/>
    <LoopInitiator loopType="TrialHandler" name="TrainInstruction_trials">
      <Param name="Selected rows" updates="None" val="$cur_row_train_string" valType="str"/>
      <Param name="conditions" updates="None" val="[{'train_slide': 'Instructions/train1.png'}, {'train_slide': 'Instructions/train2.png'}, {'train_slide': 'Instructions/train3R.png'}, {'train_slide': 'Instructions/train4.png'}, {'train_slide': 'Instructions/train5.png'}, {'train_slide': 'Instructions/train6.png'}, {'train_slide': 'Instructions/train7.png'}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="$instruct_filename" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="show_instructions_train" valType="num"/>
      <Param name="name" updates="None" val="TrainInstruction_trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="train_instructions"/>
    <LoopTerminator name="TrainInstruction_trials"/>
    <LoopTerminator name="TrainInstructions_controller"/>
    <Routine name="expt_setup"/>
    <LoopInitiator loopType="TrialHandler" name="blocks">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="nblock" valType="num"/>
      <Param name="name" updates="None" val="blocks" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="start_of_trainingProcess"/>
    <LoopInitiator loopType="TrialHandler" name="train_trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="2*num_cats" valType="num"/>
      <Param name="name" updates="None" val="train_trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="fixation"/>
    <Routine name="fixation_buffer"/>
    <Routine name="condition_switch"/>
    <LoopInitiator loopType="TrialHandler" name="SC_cond_filter">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="nrep_selection" valType="num"/>
      <Param name="name" updates="None" val="SC_cond_filter" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Selection_train"/>
    <LoopTerminator name="SC_cond_filter"/>
    <LoopInitiator loopType="TrialHandler" name="TC_cond_filter">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="nrep_sampling" valType="num"/>
      <Param name="name" updates="None" val="TC_cond_filter" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Sampling_train"/>
    <LoopTerminator name="TC_cond_filter"/>
    <Routine name="Classification_train"/>
    <Routine name="feedback_corrective"/>
    <LoopTerminator name="train_trials"/>
    <Routine name="end_of_trainingProcess"/>
    <LoopInitiator loopType="TrialHandler" name="testInstructions_controller">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="testInstr_nrep" valType="num"/>
      <Param name="name" updates="None" val="testInstructions_controller" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="test_instrPrep"/>
    <LoopInitiator loopType="TrialHandler" name="testInstruction_trials">
      <Param name="Selected rows" updates="None" val="$cur_row_test_string" valType="str"/>
      <Param name="conditions" updates="None" val="[{'test_slide': 'Instructions/test1.png'}, {'test_slide': 'Instructions/test2.png'}, {'test_slide': 'Instructions/test3.png'}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="stimuli/test_instructions.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="show_instructions_test" valType="num"/>
      <Param name="name" updates="None" val="testInstruction_trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="test_instructions"/>
    <LoopTerminator name="testInstruction_trials"/>
    <LoopTerminator name="testInstructions_controller"/>
    <Routine name="start_of_testProcess"/>
    <LoopInitiator loopType="TrialHandler" name="test_trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="2*num_cats" valType="num"/>
      <Param name="name" updates="None" val="test_trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Classification_test"/>
    <Routine name="feedback_neutral"/>
    <LoopTerminator name="test_trials"/>
    <Routine name="end_of_testProcess"/>
    <LoopTerminator name="blocks"/>
    <Routine name="debrief"/>
  </Flow>
</PsychoPy2experiment>
